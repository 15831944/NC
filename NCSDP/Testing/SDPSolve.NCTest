<< SDP`
<< SDPFlat`
<< SDPSeDuMi`

Module[
  {test, k,
   A, b, y, sdp,
   X, Y, S, iters,
   AA, BB, CC
  },

  k = 1;
  test = "SDPSolve";

  A = {y0 - 2, {{y1, y0}, {y0, 1}}, {{y2, y1}, {y1, 1}}};
  b = y2;
  y = {y0, y1, y2};

  {AA,BB,CC} = SDPMatrices[b, A, y];

  {Y, X, S, iters} = SDPSolve[{AA, BB, CC}];
  answer = 16;
  exp = -SDPInner[BB, Y];
  NCTest[Abs[(exp - answer)/answer] < 10^(-5), True, test, k++];

  exp = -SDPInner[CC, X];
  NCTest[Abs[(exp - answer)/answer] < 10^(-5), True, test, k++];

  RunTest[problem_, answer_] := Module[
    {AA, BB, CC},

    {AA,BB,CC} = SDPImport[problem];

    {Y, X, S, iters} = SDPSolve[{AA, BB, CC}];
    exp = -SDPInner[BB, Y];
    (* Print["exp = ", exp]; *)
    NCTest[Abs[(exp - answer)/answer] < 10^(-4), True, test, k++];

    exp = -SDPInner[CC, X];
    (* Print["exp = ", exp]; *)
    NCTest[Abs[(exp - answer)/answer] < 10^(-4), True, test, k++];

  ];

  problems = { 
    {"data/arch0", 0.56652},
    {"data/control07", 126.734}
    (*,
    {"data/trto3", 1},
    {"data/OH_2Pi_STO-6GN9r12g1T2", 1}
    *)
  };

  Map[RunTest @@ ##&, problems];

];
