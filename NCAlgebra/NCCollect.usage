(*************************************************************************
 *         This file was automatically generated by md2usage.py          *
 *                   on 2016-03-21 22:27:10.384755                       *
 *************************************************************************)


(* NCStrongCollectSymmetric *)
NCStrongCollectSymmetric::usage = "\
NCStrongCollectSymmetric[expr,vars] allows one to collect terms of nc expression expr on the variables vars and their transposes without writing out the transposes.

See also: NCCollect, NCStrongCollect, NCCollectSymmetric, NCCollectSelfAdjoint, NCStrongCollectSelfAdjoint.";

(* NCStrongCollect *)
NCStrongCollect::usage = "\
NCStrongCollect[expr,vars] collects terms of expression expr according to the elements of vars and attempts to combine by association.

In the noncommutative case the Taylor expansion and so the collect function is not uniquely specified. The function NCStrongCollect often collects too much and while correct it may be stronger than you want.

For example, a symbol x will factor out of terms where it appears both linearly and quadratically thus mixing orders.

See also: NCCollect, NCCollectSymmetric, NCCollectSelfAdjoint, NCStrongCollectSymmetric, NCStrongCollectSelfAdjoint.";

(* NCStrongCollectSelfAdjoint *)
NCStrongCollectSelfAdjoint::usage = "\
NCStrongCollectSymmetric[expr,vars] allows one to collect terms of nc expression expr on the variables vars and their transposes without writing out the transposes.

See also: NCCollect, NCStrongCollect, NCCollectSymmetric, NCCollectSelfAdjoint, NCStrongCollectSymmetric.";

(* NCCollectSymmetric *)
NCCollectSymmetric::usage = "\
NCCollectSymmetric[expr,vars] allows one to collect terms of nc expression expr on the variables vars and their transposes without writing out the transposes.

See also: NCCollect, NCStrongCollect, NCCollectSelfAdjoint, NCStrongCollectSymmetric, NCStrongCollectSelfAdjoint.";

(* NCCollectSelfAdjoint *)
NCCollectSelfAdjoint::usage = "\
NCCollectSelfAdjoint[expr,vars] allows one to collect terms of nc expression expr on the variables vars and their adjoints without writing out the adjoints.

See also: NCCollect, NCStrongCollect, NCCollectSymmetric, NCStrongCollectSymmetric, NCStrongCollectSelfAdjoint.";

(* NCCollect *)
NCCollect::usage = "\
NCCollect[expr,vars] collects terms of nc expression expr according to the elements of vars and attempts to combine them. It is weaker than NCStrongCollect in that only same order terms are collected togther. It basically is NCCompose[NCStrongCollect[NCDecompose]]].

See also: NCStrongCollect, NCCollectSymmetric, NCCollectSelfAdjoint, NCStrongCollectSymmetric, NCStrongCollectSelfAdjoint.";

(* NCCompose *)
NCCompose::usage = "\
NCCompose[dec] will reassemble the terms in dec which were decomposed by NCDecompose.

NCCompose[dec, degree] will reassemble only the terms of degree degree.

NCCompose[NCDecompose[p,vars]] will reproduce the polynomial p.

NCCompose[NCDecompose[p,vars], degree] will reproduce only the terms of degree degree.

See also: NCDecompose, NCPDecompose.";
