(*************************************************************************
 *         This file was automatically generated by md2usage.py          *
 *                   on 2016-03-24 09:46:21.201727                       *
 *************************************************************************)


(* NCStrongCollect *)
NCStrongCollect::usage = "\
NCStrongCollect[expr,vars] collects terms of expression expr according to the elements of vars and attempts to combine by association.

In the noncommutative case the Taylor expansion and so the collect function is not uniquely specified. The function NCStrongCollect often collects too much and while correct it may be stronger than you want.

For example, a symbol x will factor out of terms where it appears both linearly and quadratically thus mixing orders.

See also: NCCollect, NCCollectSymmetric, NCCollectSelfAdjoint, NCStrongCollectSymmetric, NCStrongCollectSelfAdjoint.";

(* NCCollectSymmetric *)
NCCollectSymmetric::usage = "\
NCCollectSymmetric[expr,vars] allows one to collect terms of nc expression expr on the variables vars and their transposes without writing out the transposes.

See also: NCCollect, NCStrongCollect, NCCollectSelfAdjoint, NCStrongCollectSymmetric, NCStrongCollectSelfAdjoint.";

(* NCCompose *)
NCCompose::usage = "\
NCCompose[dec] will reassemble the terms in dec which were decomposed by NCDecompose.

NCCompose[dec, degree] will reassemble only the terms of degree degree.

NCCompose[NCDecompose[p,vars]] will reproduce the polynomial p.

NCCompose[NCDecompose[p,vars], degree] will reproduce only the terms of degree degree.

See also: NCDecompose, NCPDecompose.";

(* NCCollectSelfAdjoint *)
NCCollectSelfAdjoint::usage = "\
NCCollectSelfAdjoint[expr,vars] allows one to collect terms of nc expression expr on the variables vars and their adjoints without writing out the adjoints.

See also: NCCollect, NCStrongCollect, NCCollectSymmetric, NCStrongCollectSymmetric, NCStrongCollectSelfAdjoint.";

(* NCDecompose *)
NCDecompose::usage = "\
NCDecompose[p,vars] gives an association of elements of the nc polynomial p in variables vars in which elements of the same order are collected together.

NCDecompose[p] treats all nc letters in p as variables.

NCDecompose uses NCPDecompose.

See also: NCCompose, NCPDecompose.";

(* NCStrongCollectSymmetric *)
NCStrongCollectSymmetric::usage = "\
NCStrongCollectSymmetric[expr,vars] allows one to collect terms of nc expression expr on the variables vars and their transposes without writing out the transposes.

See also: NCCollect, NCStrongCollect, NCCollectSymmetric, NCCollectSelfAdjoint, NCStrongCollectSelfAdjoint.";

(* NCStrongCollectSelfAdjoint *)
NCStrongCollectSelfAdjoint::usage = "\
NCStrongCollectSymmetric[expr,vars] allows one to collect terms of nc expression expr on the variables vars and their transposes without writing out the transposes.

See also: NCCollect, NCStrongCollect, NCCollectSymmetric, NCCollectSelfAdjoint, NCStrongCollectSymmetric.";

(* NCCollect *)
NCCollect::usage = "\
NCCollect[expr,vars] collects terms of nc expression expr according to the elements of vars and attempts to combine them. It is weaker than NCStrongCollect in that only same order terms are collected togther. It basically is NCCompose[NCStrongCollect[NCDecompose]]].

If expr is a rational nc expression then the degree correspond to the polynomial obtained using NCRationalToNCPolynomial.

See also: NCStrongCollect, NCCollectSymmetric, NCCollectSelfAdjoint, NCStrongCollectSymmetric, NCStrongCollectSelfAdjoint, NCRationalToNCPolynomial.";
