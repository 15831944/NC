(*************************************************************************
 *         This file was automatically generated by md2usage.py          *
 *                   on 2016-09-26 14:58:21.286567                       *
 *************************************************************************)


(* NCSymmetricQ *)
NCSymmetricQ::usage = "\
NCSymmetricQ[expr] returns _True_ if expr is symmetric, i.e. if tp[exp] == exp.

NCSymmetricQ attempts to detect symmetric variables using NCSymmetricTest.

See also: NCSelfAdjointQ, NCSymmetricTest.";

(* NCSelfAdjointQ *)
NCSelfAdjointQ::usage = "\
NCSelfAdjointQ[expr] returns true if expr is self-adjoint, i.e. if aj[exp] == exp.

See also: NCSymmetricQ, NCSelfAdjointTest.";

(* NCSymmetricTest *)
NCSymmetricTest::usage = "\
NCSymmetricTest[expr] attempts to establish symmetry of expr by assuming symmetry of its variables.

NCSymmetricTest[exp,options] uses options.

NCSymmetricTest returns a list of two elements:

-   the first element is _True_ or _False_ if it succeeded to prove expr symmetric.
-   the second element is a list of the variables that were made symmetric.

The following options can be given:

-   SymmetricVariables: list of variables that should be considered symmetric; use All to make all variables symmetric;
-   ExcludeVariables: list of variables that should not be considered symmetric; use All to exclude all variables.

See also: NCSymmetricQ, NCNCSelfAdjointTest.";

(* NCSymmetricPart *)
NCSymmetricPart::usage = "\
NCSymmetricPart[expr] returns the _symmetric part_ of expr.

NCSymmetricPart[exp,options] uses options.

NCSymmetricPart[expr] returns a list of two elements:

-   the first element is the _symmetric part_ of expr;
-   the second element is a list of the variables that were made symmetric.

NCSymmetricPart[expr] returns {$Failed, {}} if expr is not symmetric.

For example:

    {answer, symVars} = NCSymmetricPart[a ** x + x ** tp[a] + 1];

returns

    answer = 2 a ** x + 1
    symVars = {x}

The following options can be given:

-   SymmetricVariables: list of variables that should be considered symmetric; use All to make all variables symmetric;
-   ExcludeVariables: list of variables that should not be considered symmetric; use All to exclude all variables.

See also: NCSymmetricTest.";
