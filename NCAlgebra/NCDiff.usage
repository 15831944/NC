(*************************************************************************
 *         This file was automatically generated by md2usage.py          *
 *                   on 2016-03-24 09:46:21.336585                       *
 *************************************************************************)


(* NCHessian *)
NCHessian::usage = "\
NCHessian[expr, {var1, h1}, ...] takes the second directional derivative of nc expression expr with respect to variables var1, var2, ... successively in the directions h1, h2, ....

For example, if:

    expr = y**inv[x]**y + x**a**x

then

    NCHessian[expr, {x,h}, {y,s}]

returns

    2 h**a**h + 2 s**inv[x]**s - 2 s**inv[x]**h**inv[x]**y - 2 y**inv[x]**h**inv[x]**s + 2 y**inv[x]**h**inv[x]**h**inv[x]**y

See also: NCDiretionalD, NCGrad.";

(* NCDirectionalD *)
NCDirectionalD::usage = "\
NCDirectionalD[expr, {var1, h1}, ...] takes the directional derivative of expression expr with respect to variables var1, var2, ... successively in the directions h1, h2, ....

For example, if:

    expr = a**inv[1+x]**b + x**c**x

then

    NCDirectionalD[expr, {x,h}]

returns

    h**c**x + x**c**h - a**inv[1+x]**h**inv[1+x]**b

See also: NCGrad, NCHessian.";

(* NCGrad *)
NCGrad::usage = "\
NCGrad[expr, var1, ...] gives the nc gradient of the expression expr with respect to variables var1, var2, .... If there is more than one variable then NCGrad returns the gradient in a list.

The transpose of the gradient of the nc expression expr is the derivative with respect to the direction h of the trace of the directional derivative of expr in the direction h.

For example, if:

    expr = x**a**x**b + x**c**x**d

then its directional derivative in the direction h is

    NCDirectionalD[expr, {x,h}]

which returns

    h**a**x**b + x**a**h**b + h**c**x**d + x**c**h**d

and

    NCGrad[expr, x]

returns the nc gradient

    a**x**b + b**x**a + c**x**d + d**x**c

For example, if:

    expr = x**a**x**b + x**c**y**d

is a function on variables x and y then

    NCGrad[expr, x, y]

returns the nc gradient list

    {a**x**b + b**x**a + c**y**d, d**x**c}

      

IMPORTANT: The expression returned by NCGrad is the transpose or the adjoint of the standard gradient. This is done so that no assumption on the symbols are needed. The calculated expression is correct even if symbols are self-adjoint or symmetric.

See also: NCDirectionalD.";
