(*
  AppendTo[$Echo, "stdout"];
*)
SetOptions[$Output,PageWidth->1000];

Clear[NCTest, NCTestResults, NCRunTest];
$NCTestResults = Association[];
$NCTestCounter = 0;
(* $AssertFunction = Throw[{###}]&; *)
NCTest[result_, answer_, tag_:"", number_:0] := Block[
  {pass},
  $NCTestCounter ++;
  pass = (result === answer);
  (* $NCTestResults = Append[$NCTestResults, 
                         {tag, number} -> pass]; *)
  Sow[pass];
  If[!pass, 
    Print["\n* Test '" <> ToString[tag] <> " #" <> 
          ToString[$NCTestCounter] <> 
          "' failed. Result:"];
    Print["    ", ToString[result] ];
    Print["  differs from correct answer:" ];
    Print["    ", ToString[answer] ];
  ];
];

NCRunTest[Null] := Null;

NCRunTest[file_] := Block[
  {keys, results, fail, t}, 
  $NCTestCounter = 0;
  WriteString["stdout", "\n> '" <> file <> "'...\n* "];
  {t, results} = Reap[Timing[Get[file <> ".NCTest"]][[1]]];
  $NCTestResults = 
    Append[$NCTestResults, 
           MapThread[({file, #1} -> #2)&, 
                     {Range[1,Length[results[[1]]]], 
                      results[[1]]} ]];
  keys = Select[Keys[$NCTestResults], (#[[1]] == file)&];
  results = Map[$NCTestResults[#]&, keys];
  fail = Length[Select[# =!= True &][results]];
  WriteString["stdout",
    ToString[Length[keys]] <> 
    " tests completed in " <> 
    ToString[Round[1000*t]/1000.] <> 
    " seconds.\n* " <>
    ToString[Length[keys] - fail] <>
    " succeeded.\n* " <>
    ToString[fail] <> " failed.\n"
  ];
];
   
<< NC`
<< NCAlgebra`

On[Assert];

Print["> BEGIN NCTEST\n" ];

tests = {
  "NCSylvester",
(*
  "NCMatMult",
  "NCPolynomial",
  "CommutativeQ",
  "NCMultiplication",
  "NCRoots",
  "NCConjugate",
  "NCOutput",
  "NCDiff",
  "NCCollect",
  "NCSimplifyRational",
  "NCSymmetric",
  "NCSelfAdjoint",
  "NCLDU",
  "NCRealization",
  "NCReplace",
  "NCUtil",
  "MatrixDecompositions",
  "NCInverse",
  "NCMatrixDecompositions",
  "NCConvexity", 
  "NCQuadratic",
  "Matrix",
*)
(* {"Crit",             "Crit"}, *)
(*
  "NCSolve",
  "Convert"
*)
};
{t, $trash} = Timing[
  Map[NCRunTest, tests]
];


nbrOfTests = Length[$NCTestResults];
fail = Length[Select[# =!= True &][$NCTestResults]];

WriteString["stdout", 
      "\n\n> SUMMARY OF TESTS\n\n" <>
      "* " <> ToString[nbrOfTests] <>
         " tests completed in " <> ToString[t] <> " seconds.\n" <>
      "* " <> ToString[nbrOfTests - fail] <> " succeeded.\n" <>
      "* " <> ToString[fail] <> " failed.\n"];

(*

( * LEAVE This at the bottom.  It messes up lots of things if you put
   it above other tests. * )
Get["NCGuts.NCTest"];

*)

Print["\n> END NCTEST\n" ];

Print["> EVEN IF ALL THE TESTS SUCCEEDED YOU SHOULD QUIT THE KERNEL"]
Print["  IN YOUR MATHEMATICA SESSION AND START OVER." ];

$AssertFunction =. ;
Off[Assert];

(* $Echo = DeleteCases[$Echo, "stdout"]; *)
