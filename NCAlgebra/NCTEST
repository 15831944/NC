(*
  AppendTo[$Echo, "stdout"]
  SetOptions[$Output,PageWidth->120];
*)

Clear[NCTest, NCTestResults, NCRunTest];
NCTestResults = Association[];
(* $AssertFunction = Throw[{###}]&; *)
NCTest[result_, answer_, tag_, number_] := Block[
  {pass},
  pass = (result === answer);
  NCTestResults = Append[NCTestResults, 
                         {tag, number} -> pass];
  If[!pass, 
    Print["\n* Test '" <> ToString[tag] <> " #" <> ToString[number] <> 
          "' failed. Result:"];
    Print["    ", ToString[result] ];
    Print["  differs from correct answer:" ];
    Print["    ", ToString[answer] ];
  ];
];

NCRunTest[file_, tag_] := Block[
  {keys, results, fail, t}, 
  WriteString["stdout", "> '" <> file <> "'...\n* "];
  t = Timing[Get[file <> ".NCTest"]][[1]];
  keys = Select[Keys[NCTestResults], (#[[1]] == tag)&];
  results = Map[NCTestResults[#]&, keys];
  fail = Length[Select[# =!= True &][results]];
  WriteString["stdout",
    ToString[Length[keys]] <> 
    " tests completed in " <> 
    ToString[Round[1000*t]/1000.] <> 
    " seconds. " <>
    ToString[Length[keys] - fail] <>
    " succeeded. " <>
    ToString[fail] <> " failed.\n"
  ];
];
   
<< NC`
<< NCAlgebra`

On[Assert];

Print["> BEGIN NCTEST\n" ];

tests = {
  {"CommutativeQ",     "CommutativeQ"},
  {"Multiplication",   "Multiplication"},
  {"NCUtil",           "NCUtil"},
  {"Transposes",       "Transposes"},
  {"Adjoints",         "Adjoints"},
  {"Conjugate",        "Conjugates"},
  {"Roots",            "Roots"},
  {"NCOutput",         "NCOutput"},
  {"Diff",             "Diff"},
  {"Collect",          "Collect"},
  {"NCPolynomial",     "NCPolynomial"},
  {"NCSylvester",      "NCSylvester"},
  {"Substitute",       "Substitute"},
  {"SimplifyRational", "SimplifyRational"},
  {"MatrixDecompositions", "MatrixDecompositions"},
  {"NCMatMult",        "MatMult"},
  {"NCMatrixDecompositions", "NCMatrixDecompositions"},
  {"NCLDU",            "NCLDU"}, 
  {"NCInverse",        "NCInverse"},
(*  {"NCConvexity",      "NCConvexity"},*)
  {"NCRealization",    "Realization"}
(* {"Crit",             "Crit"}, *)
(*
  {"NCSolve",               "NCSolve"},
  {"Convert",          "Convert"}
*)
};
MapThread[NCRunTest, Transpose[tests]];

(*

( * LEAVE This at the bottom.  It messes up lots of things if you put
   it above other tests. * )
Get["NCGuts.NCTest"];

*)

Print["\n> END NCTEST\n" ];

Print["> EVEN IF ALL THE TESTS SUCCEEDED YOU SHOULD QUIT THE KERNEL"]
Print["  IN YOUR MATHEMATICA SESSION AND START OVER." ];

$AssertFunction =. ;
Off[Assert];

(* $Echo = DeleteCases[$Echo, "stdout"]; *)
