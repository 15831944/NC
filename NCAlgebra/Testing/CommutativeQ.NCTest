Block[{k,i,j},

  (* History:  Nov 2015: CommutativeQ test (mauricio) *)

  k = 1;

  (* Test SNC *)

  Clear[$zzzz,$yyyy];
  SNC[$zzzz];

  NCTest[CommutativeQ[$zzzz], False, "CommutativeQ", k++];
  NCTest[CommutativeQ[$yyyy], True, "CommutativeQ", k++];

  Clear[$zzzz,$yyyy];

  NCTest[CommutativeQ[$zzzz], True, "CommutativeQ", k++];
  NCTest[CommutativeQ[$yyyy], True, "CommutativeQ", k++];

  SNC[$zzzz];

  NCTest[CommutativeQ[$zzzz], False, "CommutativeQ", k++];
  NCTest[CommutativeQ[$yyyy], True, "CommutativeQ", k++];

  NCTest[CommutativeQ[$zzzz[1]], False, "CommutativeQ", k++];
  NCTest[CommutativeQ[$zzzz[$zzzz]], False, "CommutativeQ", k++];
  NCTest[CommutativeQ[$zzzz[$yyyy]], False, "CommutativeQ", k++];

  NCTest[CommutativeQ[$yyyy[1]], True, "CommutativeQ", k++];
  NCTest[CommutativeQ[$yyyy[$yyyy]], True, "CommutativeQ", k++];
  NCTest[CommutativeQ[$yyyy[$zzzz]], False, "CommutativeQ", k++];

  NCTest[CommutativeQ[$yyyy[1,$yyyy]], True, "CommutativeQ", k++];
  NCTest[CommutativeQ[$yyyy[1,$zzzz]], False, "CommutativeQ", k++];

  Clear[$zzzz,$yyyy];

  (* Test rule *)

  Clear[$zzzz];
  SNC[$zzzz];

  pattern1=$zzzz_**b_->b**$zzzz;
  exp1=x**y+x**y**y;
  NCTest[(exp1/.pattern1), y**x+x**y**y, "CommutativeQ", k++];

  $zzzz=2;
  exp1=x**y+x**y**y;
  NCTest[(exp1/.pattern1), 2y+x**y**y, "CommutativeQ", k++];

  exp2=y**x+x**y**y;
  NCTest[(exp2/.pattern1), 2x+x**y**y, "CommutativeQ", k++];

  pattern2=_**b_->b;
  NCTest[(exp1/.pattern2), y+x**y**y, "CommutativeQ", k++];
  NCTest[(exp2/.pattern2), x+x**y**y, "CommutativeQ", k++];

  pattern3=__**b_->b;
  NCTest[(exp1/.pattern3), 2y, "CommutativeQ", k++];
  NCTest[(exp2/.pattern3), x+y, "CommutativeQ", k++];

  pattern4=__**b_->b;
  NCTest[(exp1/.pattern4), 2y, "CommutativeQ", k++];
  NCTest[(exp2/.pattern4), x+y, "CommutativeQ", k++];

  Clear[$zzzz];

  (* Test delayed rule *)

  Clear[$zzzz];
  SNC[$zzzz];

  pattern1=$zzzz_**b_:>b**$zzzz;
  exp1=x**y+x**y**y;
  NCTest[(exp1/.pattern1), y**x+x**y**y, "CommutativeQ", k++];

  $zzzz=2;
  exp1=x**y+x**y**y;
  NCTest[(exp1/.pattern1), y**x+x**y**y, "CommutativeQ", k++];

  exp2=y**x+x**y**y;
  NCTest[(exp2/.pattern1), x**y+x**y**y, "CommutativeQ", k++];

  pattern2=_**b_:>b;
  NCTest[(exp1/.pattern2), y+x**y**y, "CommutativeQ", k++];
  NCTest[(exp2/.pattern2), x+x**y**y, "CommutativeQ", k++];

  pattern3=__**b_:>b;
  NCTest[(exp1/.pattern3), 2y, "CommutativeQ", k++];
  NCTest[(exp2/.pattern3), x+y, "CommutativeQ", k++];

  pattern4=__**b_:>b;
  NCTest[(exp1/.pattern4), 2y, "CommutativeQ", k++];
  NCTest[(exp2/.pattern4), x+y, "CommutativeQ", k++];

  Clear[$zzzz];

];