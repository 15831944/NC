(* History:  Mar 2016: Multiplication test (mauricio) *)

Block[
  {k,test,i,j,x,y,z,exp,answer},

  SetNonCommutative[x,y];
  SetCommutative[z];

  (* Identities *)
  NCTest[NonCommutativeMultiply[x], Unevaluated[x]];
  NCTest[NonCommutativeMultiply[x + y], Unevaluated[x + y]];
  NCTest[NonCommutativeMultiply[inv[x]], Unevaluated[inv[x]]];
  NCTest[NonCommutativeMultiply[f[x]], Unevaluated[f[x]]];

  NCTest[NonCommutativeMultiply[x_], Unevaluated[NonCommutativeMultiply[x_]]];
  NCTest[NonCommutativeMultiply[x__], Unevaluated[NonCommutativeMultiply[x__]]];
  NCTest[NonCommutativeMultiply[x___], Unevaluated[NonCommutativeMultiply[x___]]];
  NCTest[NonCommutativeMultiply[#], Unevaluated[NonCommutativeMultiply[#]]];
  NCTest[NonCommutativeMultiply[##], Unevaluated[NonCommutativeMultiply[##]]];

  NCTest[x**x, Unevaluated[x**x]];
  NCTest[x**x**y, Unevaluated[x**x**y]];
  NCTest[x**(x**y), Unevaluated[x**x**y]];
  NCTest[(x**x)**y, Unevaluated[x**x**y]];
  NCTest[y**x**x**y, Unevaluated[y**x**x**y]];
  NCTest[(y**x)**x**y, Unevaluated[y**x**x**y]];
  NCTest[y**(x**x)**y, Unevaluated[y**x**x**y]];
  NCTest[y**x**(x**y), Unevaluated[y**x**x**y]];

  NCTest[z**y**x**y, Unevaluated[z*y**x**y]];
  NCTest[y**z**x**y, Unevaluated[z*y**x**y]];
  NCTest[y**x**z**y, Unevaluated[z*y**x**y]];
  NCTest[y**x**y**z, Unevaluated[z*y**x**y]];

  NCTest[(z*y)**x**y, Unevaluated[z*y**x**y]];
  NCTest[y**(z*x)**y, Unevaluated[z*y**x**y]];
  NCTest[y**x**(z*y), Unevaluated[z*y**x**y]];

  NCTest[NonCommutativeMultiply[x], x];
  NCTest[NonCommutativeMultiply[y], y];
  NCTest[NonCommutativeMultiply[z], z];

  NCTest[NonCommutativeMultiply[], 1];

  NCTest[x^2, x**x];
  NCTest[NonCommutativeMultiply[x^2], x**x];
  NCTest[NonCommutativeMultiply[x^2**y], x**x**y];
  NCTest[NonCommutativeMultiply[y**x^2], y**x**x];
  NCTest[NonCommutativeMultiply[y**x^2**y], y**x**x**y];

  NCTest[NonCommutativeMultiply[x^-2], inv[x**x]];
  NCTest[NonCommutativeMultiply[(x^-2)**y], inv[x**x]**y];
  NCTest[NonCommutativeMultiply[y**(x^-2)], y**inv[x**x]];
  NCTest[NonCommutativeMultiply[y**(x^-2)**y], y**inv[x**x]**y];

  NCTest[x^-1, inv[x]];
  NCTest[NonCommutativeMultiply[x^-1], inv[x]];

  NCTest[x^-3, inv[x**x**x]];
  NCTest[x^2+x-x^0+x^-1, x**x+x+inv[x]-1];
  NCTest[(x^0)**(x^1)**(x^2)**((inv[x])^3), 1];

  NCTest[y**x^2, y**x**x];
  NCTest[x^2**y, x**x**y];
  NCTest[y**x^2**y, y**x**x**y];

  NCTest[y**x^2**z^3**y, z^3*y**x**x**y];
  NCTest[y**x^2**z**z**z**y, z^3*y**x**x**y];

  NCTest[x**Sqrt[2]**x, Sqrt[2] x**x];
  NCTest[x**Pi**x, Pi x**x];

  (* Expand *)
  exp = x**(x+y);
  answer = x**x + x**y;
  NCTest[ExpandNonCommutativeMultiply[exp], answer];

  exp = (x+y)**x;
  answer = x**x + y**x;
  NCTest[ExpandNonCommutativeMultiply[exp], answer];

  exp = x**(x+y)**x;
  answer = x**x**x + x**y**x;
  NCTest[ExpandNonCommutativeMultiply[exp], answer];

  exp = x**(x+y**(1+x)**y)**x;
  answer = x**x**x + x**y**y**x + x**y**x**y**x;
  NCTest[ExpandNonCommutativeMultiply[exp], answer];

  exp = x**inv[1 + x**(1 + x)];
  answer = x**inv[1 + x + x**x];
  NCTest[ExpandNonCommutativeMultiply[exp], answer];

  (* CommuteEverything *)
  exp = x**(x+y);
  answer = Commutative[x]^2 + Commutative[x] Commutative[y];
  NCTest[Expand[CommuteEverything[exp]], answer];

  exp = (x+y)**x;
  answer = Commutative[x]^2 + Commutative[x] Commutative[y];
  NCTest[Expand[CommuteEverything[exp]], answer];

  exp = x**(x+y)**x;
  answer = Commutative[x]^3 + Commutative[x]^2 Commutative[y];
  NCTest[Expand[CommuteEverything[exp]], answer];

  exp = x**(x+y**(1+x)**y)**x;
  answer = Commutative[x]^3 + Commutative[x]^2 Commutative[y]^2 
           + Commutative[x]^3 Commutative[y]^2;
  NCTest[Expand[CommuteEverything[exp]], answer];

  exp = x**inv[1 + x**(1 + x)];
  answer = Commutative[x] / (1 + Commutative[x] + Commutative[x]^2);
  NCTest[ExpandAll[CommuteEverything[exp]], answer];

  (* x[1] *)
  exp = NonCommutativeMultiply[x[1]];
  answer = x[1];
  NCTest[exp, answer];

  (* x[1,1] *)
  exp = NonCommutativeMultiply[x[1,1]];
  answer = x[1,1];
  NCTest[exp, answer];

  (* x[1,1,1] *)
  exp = NonCommutativeMultiply[x[1,1,1]];
  answer = x[1,1,1];
  NCTest[exp, answer];

  (* Patterns *)

  (* x_ *)
  exp = NonCommutativeMultiply[x_];
  NCTest[Head[exp], NonCommutativeMultiply];

  (* x__ *)
  exp = NonCommutativeMultiply[x__];
  NCTest[Head[exp], NonCommutativeMultiply];

  (* x___ *)
  exp = NonCommutativeMultiply[x___];
  NCTest[Head[exp], NonCommutativeMultiply];

  (* _ *)
  exp = NonCommutativeMultiply[_];
  NCTest[Head[exp], NonCommutativeMultiply];

  (* __ *)
  exp = NonCommutativeMultiply[__];
  NCTest[Head[exp], NonCommutativeMultiply];

  (* ___ *)
  exp = NonCommutativeMultiply[___];
  NCTest[Head[exp], NonCommutativeMultiply];

];