Module[
  {k, test, expr, a, b, c, d},

  k = 1;
  test = "Adjoints";

  SetNonCommutative[a, b, c, d];

  NCTest[CommutativeQ[aj] == False, test, k++];

  NCTest[aj[0], 0, test, k++];
  NCTest[aj[1], 1, test, k++];
  NCTest[aj[Pi], Pi, test, k++];
  NCTest[aj[I], -I, test, k++];
  NCTest[aj[1 + I], 1 - I, test, k++];

  NCTest[aj[2 a], 2 aj[a], test, k++];
  NCTest[aj[3 a ** b], Unevaluated[3 aj[b] ** aj[a]], test, k++];
  NCTest[aj[(3 + I) a ** b], Unevaluated[Complex[3,-1] aj[b] ** aj[a]], test, k++];

  expr = aj[2 a + 3 b];
  NCTest[expr, Unevaluated[2 aj[a] + 3 aj[b]], test, k++];

  expr = aj[a**b];
  NCTest[expr, Unevaluated[aj[b] ** aj[a]], test, k++];

  expr = aj[b]**aj[a];
  NCTest[expr, Unevaluated[aj[b] ** aj[a]], test, k++];

  expr = c**aj[a**b];
  NCTest[expr, Unevaluated[c ** aj[b] ** aj[a]], test, k++];

  expr = aj[a**b]**d;
  NCTest[expr, Unevaluated[aj[b] ** aj[a] ** d], test, k++];

  expr = c**aj[a**b]**d;
  NCTest[expr, Unevaluated[c ** aj[b] ** aj[a] ** d], test, k++];

  (* NCSelfAdjointQ *)

  expr = a + aj[a];
  NCTest[NCSelfAdjointQ[expr, ExcludeVariables -> All], True, test, k++];

  expr = a ** b + aj[a ** b];
  NCTest[NCSelfAdjointQ[expr, ExcludeVariables -> All], True, test, k++];

  expr = a + aj[a];
  NCTest[NCSelfAdjointQ[expr], True, test, k++];

  expr = a ** b + aj[a ** b];
  NCTest[NCSelfAdjointQ[expr], True, test, k++];

  expr = a;
  NCTest[NCSelfAdjointQ[expr, ExcludeVariables -> All], False, test, k++];

  expr = a + b ** c;
  NCTest[NCSelfAdjointQ[expr, ExcludeVariables -> All], False, test, k++];

  expr = a + tp[a];
  NCTest[NCSelfAdjointQ[expr, ExcludeVariables -> All], False, test, k++];

  expr = a ** b + tp[a ** b];
  NCTest[NCSelfAdjointQ[expr, ExcludeVariables -> All], False, test, k++];

  expr = tp[a] + aj[a];
  NCTest[NCSelfAdjointQ[expr, ExcludeVariables -> All], False, test, k++];

  expr = a;
  NCTest[NCSelfAdjointQ[expr, ExcludeVariables -> All], False, test, k++];

  expr = a - aj[a];
  NCTest[NCSelfAdjointQ[expr, ExcludeVariables -> All], False, test, k++];

  expr = a ** b + tp[a ** b];
  NCTest[NCSelfAdjointQ[expr, ExcludeVariables -> All], False, test, k++];

  expr = a - tp[a];
  NCTest[NCSelfAdjointQ[expr, ExcludeVariables -> All], False, test, k++];

  expr = tp[a] + aj[a];
  NCTest[NCSelfAdjointQ[expr], False, test, k++];

  expr = a - aj[a];
  NCTest[NCSelfAdjointQ[expr], False, test, k++];

  expr = a - tp[a];
  NCTest[NCSelfAdjointQ[expr], False, test, k++];

  (* NCSelfAdjointQ *)

  Quiet[

    expr = a;
    NCTest[NCSelfAdjointQ[expr], True, test, k++];

    expr = a ** b + tp[a ** b];
    NCTest[NCSelfAdjointQ[expr], True, test, k++];

    expr = a + b;
    NCTest[NCSelfAdjointQ[expr], True, test, k++];

    expr = a ** b + tp[a ** b];
    NCTest[NCSelfAdjointQ[expr], True, test, k++];

    expr = a + b ** c + c ** b;
    NCTest[NCSelfAdjointQ[expr], True, test, k++];

    expr = a + aj[b] ** c + c ** b;
    NCTest[NCSelfAdjointQ[expr], True, test, k++];

    expr = a + tp[b] ** c + c ** b;
    NCTest[NCSelfAdjointQ[expr], True, test, k++];

    expr = a + b + aj[b] ** c + c ** b;
    NCTest[NCSelfAdjointQ[expr], False, test, k++];

    expr = a + b + tp[b] ** c + c ** b;
    NCTest[NCSelfAdjointQ[expr], False, test, k++];

    expr = a + b ** aj[b] + aj[b] ** c + c ** b;
    NCTest[NCSelfAdjointQ[expr], True, test, k++];

    expr = a + b ** tp[b] + tp[b] ** c + c ** b;
    NCTest[NCSelfAdjointQ[expr], True, test, k++];

    expr = a + b ** tp[b] + aj[b] ** c + c ** b;
    NCTest[NCSelfAdjointQ[expr], False, test, k++];

    ,
    {NCSelfAdjointQ::SelfAdjointVariables, NCSymmetricQ::SymmetricVariables}
  ];

];

aaa := Block[{},

  Print[];

];
