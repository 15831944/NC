k$ = 1;
test[NCAdjoints,k$++] = CommutativeQ[aj] == False;

test[NCAdjoints,k$++] = aj[0] === 0;
test[NCAdjoints,k$++] = aj[1] === 1;
test[NCAdjoints,k$++] = aj[Pi] === Pi;
test[NCAdjoints,k$++] = aj[I] === -I;
test[NCAdjoints,k$++] = aj[1 + I] === 1 - I;

saveExpandQ = ExpandQ[aj];

ExpandQ[aj] = True;

test[NCAdjoints,k$++] = aj[2 a] === 2 aj[a];
test[NCAdjoints,k$++] = aj[3 a ** b] === 3 aj[b] ** aj[a];
test[NCAdjoints,k$++] = aj[(3 + I) a ** b] === (3 - I) aj[b] ** aj[a];

expr = aj[a**b];
test[NCAdjoints,k$++] = expr === aj[b] ** aj[a];

expr = aj[b]**aj[a];
test[NCAdjoints,k$++] = expr === aj[b] ** aj[a];

ExpandQ[aj] = False;

expr = aj[a**b];
test[NCAdjoints,k$++] = expr === aj[a ** b];

expr = aj[b]**aj[a];
test[NCAdjoints,k$++] = expr === aj[a ** b];

expr = aj[a+b];
test[NCAdjoints,k$++] = expr === aj[a] + aj[b];

ExpandQ[aj] ^= saveExpandQ;

Print["Results from the file Adjoints.NCTest"]
For[ i=1, i<k$, i++,
Print["Test #",i," was ",test[NCAdjoints,i]]
];
