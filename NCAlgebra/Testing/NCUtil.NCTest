<< NCUtil`

Block[
  {k,test,exp,a,b,c,d,x,y,z},

  k = 1;
  test = "NCUtil";

  SetCommutative[a,b,c,d];
  SetNonCommutative[x,y,z];

  (* NCConsistentQ *)

  exp = 0;
  NCTest[NCConsistentQ[exp], True, test, k++];

  exp = 1;
  NCTest[NCConsistentQ[exp], True, test, k++];

  exp = Sqrt[2];
  NCTest[NCConsistentQ[exp], True, test, k++];

  exp = a + b c;
  NCTest[NCConsistentQ[exp], True, test, k++];

  exp = x;
  NCTest[NCConsistentQ[exp], True, test, k++];

  exp = x ** x;
  NCTest[NCConsistentQ[exp], True, test, k++];

  exp = x ** x ** y;
  NCTest[NCConsistentQ[exp], True, test, k++];

  exp = x ** x ** y + y ** x;
  NCTest[NCConsistentQ[exp], True, test, k++];

  exp = x ** x ** y + y ** x ** inv[z];
  NCTest[NCConsistentQ[exp], True, test, k++];

  exp = 2 x;
  NCTest[NCConsistentQ[exp], True, test, k++];

  exp = 2 x ** x;
  NCTest[NCConsistentQ[exp], True, test, k++];

  exp = 2 x ** x ** y;
  NCTest[NCConsistentQ[exp], True, test, k++];

  exp = 2 x ** x ** y + 3 y ** x;
  NCTest[NCConsistentQ[exp], True, test, k++];

  exp = 2 x ** x ** y + 3 y ** x ** inv[z];
  NCTest[NCConsistentQ[exp], True, test, k++];

  exp = a x;
  NCTest[NCConsistentQ[exp], True, test, k++];

  exp = a x ** x;
  NCTest[NCConsistentQ[exp], True, test, k++];

  exp = a x ** x ** y;
  NCTest[NCConsistentQ[exp], True, test, k++];

  exp = a x ** x ** y + b y ** x;
  NCTest[NCConsistentQ[exp], True, test, k++];

  exp = a x ** x ** y + b y ** x ** inv[z];
  NCTest[NCConsistentQ[exp], True, test, k++];

  exp = Sqrt[a] x ** x ** y + b y ** x ** inv[z];
  NCTest[NCConsistentQ[exp], True, test, k++];

  exp = x x;
  NCTest[NCConsistentQ[exp], True, test, k++];

  exp = x y;
  NCTest[NCConsistentQ[exp], False, test, k++];

  exp = Sqrt[2] x ** x y + 3 y ** x ** inv[z];
  NCTest[NCConsistentQ[exp], False, test, k++];

  exp = Sqrt[2] x ** x ** y + 3 y x ** inv[z];
  NCTest[NCConsistentQ[exp], False, test, k++];

  exp = x / y;
  NCTest[NCConsistentQ[exp], False, test, k++];

  exp = Sqrt[2] x ** x ** y + 3 y ** x / z;
  NCTest[NCConsistentQ[exp], False, test, k++];

  exp = Sqrt[2] x ** x ** y + 3 x ** inv[x + z ** y];
  NCTest[NCConsistentQ[exp], True, test, k++];

  exp = Sqrt[2] x ** x ** y + 3 x ** inv[x + x z ** y];
  NCTest[NCConsistentQ[exp], False, test, k++];

];