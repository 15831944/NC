(* History:  06/25/01:  NCLDUDecompostion tests (jeff)  *)

SNC[a,b,d,c,e,f,g,h,ii];

(*Tests 1 through 4 test the commands NCLDUDecompostion and NCAllPermutationLDU.
  Test 3 show that it is possible to get a block diagonal matrix as output.
  Test 4 shows that of the 3!2!=12 possible sequences of permutations that can be 
  used in the factorization of that matrix, only four yield LDU decompostions.
  Error messages appear for the eight that do not.*)
(* NOTE: TESTS 3 AND 4 ARE REMOVED AND ARE BELOW THE LOOPS AT THE END OF THIS FILE *)

mat={{a,b,c},{d,e,f},{g,h,ii}};
   {lo,di,up,P}=NCLDUDecomposition[mat,Permutation->{{3,1,2},{1,3,2}}];   
test[NCLDU,1]=  MatMult[lo,di,up] == MatMult[P,mat,tpM[P]]


mat={{-(V+tp[V]),tp[V]**A**X,tp[V]},{tp[V]**A+X,-X,0},{V,0,-X}};
   {lo,di,up,P}=NCLDUDecomposition[mat,Checkit->False,Permutation->{{2,3,1},{1,3,2}}];   
test[NCLDU,2]=  MatMult[lo,di,up] == MatMult[P,mat,tpM[P]]


(*Tests 3 through 6 test commands related to matrix permutations*)

test[NCLDU,3]=  {3,1,5,2,4} == NCMatrixToPermutation[NCPermutationMatrix[{3,1,5,2,4}]]

test[NCLDU,4]=  {1,2,1} == NCMatrixToPermutation[NCPermutationMatrix[{1,2,1}]]

(*The permutation matrix commands don't seem to mind that I don't give them a
   truly valid permutation matrix*)

test[NCLDU,5]=  False == CheckPermutation[4,{{4,1,3,2},{1,3,2,4},{1,2,4,3}}]

test[NCLDU,6]=  True == CheckPermutation[4,{{4,1,3,2},{1,3,2,4},{1,3,4,2}}]

(*Note: Rather counter-intuitively, if the list of permutations in CheckPermutation
  is a valid one in terms of the LDU decomposition, then the command will return
  False.  It returns True for an invalid list*)


  
Print["Results from the file NCLDUTest.NCTest"]
For[ i=1, i<=6, i++,
     Print["Test #",i," was ",test[NCLDU,i]]
   ];





(**********************************)
(**********************************)
(**********************************)
(* THESE ARE THE OLD TEST 3 AND 4 *)
(**********************************)
(**********************************)
(**********************************)
(*
m = {{a, b, 0, 0}, {c, d, 0, 0}, {0, 0, 0, 1}, {0, 0, 1, 0}};
   {lo, di, up, P, perms} = NCLDUDecomposition[m, ReturnPermutation -> True];
test[NCLDU,3]=  {lo,di,up,P,perms}=={{{1,0,0,0},{c**inv[a],1,0,0},{0,0,1,0},{0,0,0,1}},
                                     {{a,0,0,0},{0,d-c**inv[a]**b,0,0},{0,0,0,1},{0,0,1,0}},
                                     {{1,inv[a]**b,0,0},{0,1,0,0},{0,0,1,0},{0,0,0,1}},
                                     {{1,0,0,0},{0,1,0,0},{0,0,1,0},{0,0,0,1}},
                                     {{1,2,3,4},{1,2,3,4},{1,2,3,4}}} 
                                     
m = {{1, 1, 1}, {1, 0, 1}, {1, 1, 0}};
    {{lo1, di1, up1, P1, perms1}, {lo2, di2, up2, P2, perms2}, 
     {lo3, di3, up3, P3,perms3}, {lo4, di4, up4, P4, perms4}, allvalidperms} = 
  NCAllPermutationLDU[m, StopAutoPermutation -> True,ReturnPermutation -> True];
test[NCLDU,4]=  {{lo1, di1, up1, P1, perms1}, {lo2, di2, up2, P2, perms2}, 
                 {lo3, di3, up3, P3,perms3}, {lo4, di4, up4, P4, perms4},
                 allvalidperms} ==  {{{{1, 0, 0}, {1, 1, 0}, {1, 0, 1}}, 
                                      {{1, 0, 0}, {0, -1, 0}, {0, 0, -1}},
                                      {{1, 1, 1}, {0, 1, 0}, {0, 0, 1}},
                                      {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}, 
                                      {{1, 2, 3}, {1, 2, 3}}}, 
                                     {{{1, 0, 0}, {1, 1, 0}, {1, 0, 1}}, 
                                      {{1, 0, 0}, {0, -1, 0}, {0, 0, -1}}, 
                                      {{1, 1, 1}, {0, 1, 0}, {0, 0, 1}}, 
                                      {{1, 0, 0}, {0, 0, 1}, {0, 1, 0}}, 
                                      {{1, 2, 3}, {1, 3, 2}}}, 
                                     {{{1, 0, 0}, {1, 1, 0}, {1, 0, 1}}, 
                                      {{1, 0, 0}, {0, -1, 0}, {0, 0, -1}},
                                      {{1, 1, 1}, {0, 1, 0}, {0, 0, 1}}, 
                                      {{1, 0, 0}, {0, 0, 1}, {0, 1, 0}}, 
                                      {{1, 3, 2}, {1, 2, 3}}}, 
                                     {{{1, 0, 0}, {1, 1, 0}, {1, 0, 1}},
                                      {{1, 0, 0}, {0, -1, 0}, {0, 0, -1}},
                                      {{1, 1, 1}, {0, 1, 0}, {0, 0, 1}}, 
                                      {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}, 
                                      {{1, 3, 2}, {1, 3, 2}}}, 
                                     {{{1, 2, 3}, {1, 2, 3}}, 
                                     {{1, 2, 3}, {1, 3, 2}}, 
                                     {{1, 3, 2}, {1, 2, 3}}, 
                                     {{1, 3, 2}, {1, 3, 2}}}}
  
*)