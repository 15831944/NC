Block[{expr, i, k},

  k = 1;
  test[NCCo,k++] = CommutativeQ[co] == False;

  test[NCCo,k++] = co[2 a] === 2 co[a];
  test[NCCo,k++] = co[3 a ** b] === Unevaluated[3 co[a] ** co[b]];
  test[NCCo,k++] = co[(3 + I) a ** b] === Unevaluated[Complex[3,-1] co[a] ** co[b]];

  expr = co[a**b];
  test[NCCo,k++] = expr === Unevaluated[co[a] ** co[b]];

  expr = co[a]**co[b];
  test[NCCo,k++] = expr === Unevaluated[co[a] ** co[b]];

  expr = c**co[a**b];
  test[NCCo,k++] = expr === Unevaluated[c ** co[a] ** co[b]];

  expr = co[a**b]**d;
  test[NCCo,k++] = expr === Unevaluated[co[a] ** co[b] ** d];

  expr = c**co[a**b]**d;
  test[NCCo,k++] = expr === Unevaluated[c ** co[a] ** co[b] ** d];

  expr = aj[tp[a]];
  test[NCCo,k++] = expr === Unevaluated[co[a]];

  expr = tp[aj[a]];
  test[NCCo,k++] = expr === Unevaluated[co[a]];

  SetExpandQ[co, False];

  expr = co[a**b];
  test[NCCo,k++] = expr === Unevaluated[co[a ** b]];

  expr = co[a]**co[b];
  test[NCCo,k++] = expr === Unevaluated[co[a ** b]];

  expr = c**co[a]**co[b];
  test[NCCo,k++] = expr === Unevaluated[c ** co[a ** b]];

  expr = co[a]**co[b]**d;
  test[NCCo,k++] = expr === Unevaluated[co[a ** b] ** d];

  expr = c**co[a]**co[b]**d;
  test[NCCo,k++] = expr === Unevaluated[c ** co[a ** b] ** d];

  SetExpandQ[co, saveExpandQ];

  expr = co[a+b];
  test[NCCo,k++] = expr === Unevaluated[co[a] + co[b]];

  Print["Results from the file Co.NCTest"]
  For[ i=1, i<k, i++,
  Print["Test #",i," was ",test[NCCo,i]]
  ];

];