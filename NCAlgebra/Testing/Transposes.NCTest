k$ = 1;
test[NCTransposes,k$++] = CommutativeQ[tp] == False;

test[NCTransposes,k$++] = tp[0] === 0;
test[NCTransposes,k$++] = tp[1] === 1;
test[NCTransposes,k$++] = tp[Pi] === Pi;
test[NCTransposes,k$++] = tp[I] === I;
test[NCTransposes,k$++] = tp[1 + I] === 1 + I;

saveExpandQ = ExpandQ[tp];

ExpandQ[tp] = True;

test[NCTransposes,k$++] = tp[2 a] === 2 tp[a];
test[NCTransposes,k$++] = tp[3 a ** b] === 3 tp[b] ** tp[a];
test[NCTransposes,k$++] = tp[(3 + I) a ** b] === (3 + I) tp[b] ** tp[a];

expr = tp[a**b];
test[NCTransposes,k$++] = expr === tp[b] ** tp[a];

expr = tp[b]**tp[a];
test[NCTransposes,k$++] = expr === tp[b] ** tp[a];

ExpandQ[tp] = False;

expr = tp[a**b];
test[NCTransposes,k$++] = expr === tp[a ** b];

expr = tp[b]**tp[a];
test[NCTransposes,k$++] = expr === tp[a ** b];

expr = tp[a+b];
test[NCTransposes,k$++] = expr === tp[a] + tp[b];

ExpandQ[tp] ^= saveExpandQ;

Print["Results from the file Transposes.NCTest"]
For[ i=1, i<k$, i++,
Print["Test #",i," was ",test[NCTransposes,i]]
];
