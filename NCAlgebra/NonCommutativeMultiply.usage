(*************************************************************************
 *         This file was automatically generated by md2usage.py          *
 *                   on 2016-03-21 21:34:37.106016                       *
 *************************************************************************)


(* inv *)
inv::usage = "\
inv[x] is the 2-sided inverse of x."

(* aj *)
aj::usage = "\
aj[x] is the adjoint of x. aj is a conjugate linear involution.

See also: tp, co."

(* co *)
co::usage = "\
co[x] is the conjugate of x. It is a linear involution.

See also: aj."

(* NonCommutativeQ *)
NonCommutativeQ::usage = "\
NonCommutativeQ[x] is equal to Not[CommutativeQ[x]].

See CommutativeQ."

(* CommuteEverything *)
CommuteEverything::usage = "\
CommuteEverything answers the question \"what does it sound like?\".

CommuteEverything[expr] replaces all noncommutative symbols in expr by its commutative self using Commutative so that the resulting expression contains only commutative products or inverses.

See also: Commutative."

(* Commutative *)
Commutative::usage = "\
Commutative[x] makes the noncommutative _Symbol_ x behave as if it were commutative.

See also: CommuteEverything, CommutativeQ, SetCommutative, SetNonCommutative."

(* Id *)
Id::usage = "\
Id is noncommutative multiplicative identity. Actually Id is now set equal 1."

(* SetCommutative *)
SetCommutative::usage = "\
SetCommutative[a,b,c,...] sets all the _Symbols_ a, b, c, ... to be commutative.

See also: SetNonCommutative, CommutativeQ, NonCommutativeQ."

(* SetNonCommutative *)
SetNonCommutative::usage = "\
SetNonCommutative[a,b,c,...] sets all the _Symbols_ a, b, c, ... to be noncommutative.

See also: SetCommutative, CommutativeQ, NonCommutativeQ."

(* rt *)
rt::usage = "\
rt[x] is the root of x."

(* tp *)
tp::usage = "\
tp[x] is the tranpose of x. It is a linear involution.

See also: aj, co."

(* CommutativeQ *)
CommutativeQ::usage = "\
CommutativeQ[x] is _True_ if x is commutative (the default), and _False_ if x is noncommutative.

See also: SetCommutative, SetNonCommutative."
