(*************************************************************************
 *         This file was automatically generated by md2usage.py          *
 *                   on 2016-03-28 10:02:19.352582                       *
 *************************************************************************)


(* LUDecompositionWithCompletePivoting *)
LUDecompositionWithCompletePivoting::usage = "\
LUDecompositionWithCompletePivoting[m] generates a representation of the LU decomposition of the rectangular matrix m.

LUDecompositionWithCompletePivoting[m, options] uses options.

LUDecompositionWithCompletePivoting returns a list of four elements:

-   the first element is a combination of upper- and lower-triangular matrices;
-   the second element is a vector specifying rows used for pivoting.
-   the third element is a vector specifying columns used for pivoting.
-   the fourth element is the rank of the matrix.

LUDecompositionWithCompletePivoting implements a _complete pivoting_ strategy in which the sorting can be configured using the options listed below. It also applies to general rectangular matrices as well as square matrices.

The following options can be given:

-   ZeroTest (PossibleZeroQ): function used to decide if a pivot is zero;
-   Divide (Divide): function used to divide a vector by an entry;
-   Dot (Dot): function used to multiply vectors and matrices;
-   Pivoting (LUCompletePivoting): function used to sort rows for pivoting;

See also: LUDecomposition, GetLUMatrices, LUCompletePivoting, LUDecompositionWithPartialPivoting.";

(* LowerTriangularSolve *)
LowerTriangularSolve::usage = "\
";

(* LUInverse *)
LUInverse::usage = "\
";

(* LUDecompositionWithPartialPivoting *)
LUDecompositionWithPartialPivoting::usage = "\
LUDecompositionWithPartialPivoting[m] generates a representation of the LU decomposition of the rectangular matrix m.

LUDecompositionWithPartialPivoting[m, options] uses options.

LUDecompositionWithPartialPivoting returns a list of two elements:

-   the first element is a combination of upper- and lower-triangular matrices;
-   the second element is a vector specifying rows used for pivoting.

LUDecompositionWithPartialPivoting is similar in functionality with the built-in LUDecomposition. It implements a _partial pivoting_ strategy in which the sorting can be configured using the options listed below. It also applies to general rectangular matrices as well as square matrices.

The following options can be given:

-   ZeroTest (PossibleZeroQ): function used to decide if a pivot is zero;
-   Divide (Divide): function used to divide a vector by an entry;
-   Dot (Dot): function used to multiply vectors and matrices;
-   Pivoting (LUPartialPivoting): function used to sort rows for pivoting;

See also: LUDecomposition, GetLUMatrices, LUPartialPivoting, LUDecompositionWithCompletePivoting.";

(* LDLDecomposition *)
LDLDecomposition::usage = "\
";

(* UpperTriangularSolve *)
UpperTriangularSolve::usage = "\
";

(* GetLUMatrices *)
GetLUMatrices::usage = "\
";

(* GetLDUMatrices *)
GetLDUMatrices::usage = "\
";

(* LUPartialPivoting *)
LUPartialPivoting::usage = "\
";
