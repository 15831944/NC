(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    315205,       8277]
NotebookOptionsPosition[    301965,       7966]
NotebookOutlinePosition[    302835,       7994]
CellTagsIndexPosition[    302792,       7991]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Pseudo Inverses", "Title",
 CellChangeTimes->{{3.454960447280991*^9, 
  3.454960453392949*^9}},ExpressionUUID->"22c9d161-7af8-44e2-874f-\
827b8153055e"],

Cell[CellGroupData[{

Cell["Load NCGB", "Subsection",
 CellChangeTimes->{{3.454944003666856*^9, 
  3.454944005441684*^9}},ExpressionUUID->"155e7bbb-257a-4c67-85bc-\
be9e03774c32"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"<<", "NC`"}], "\n", 
 RowBox[{"<<", " ", "NCGB`"}]}], "Input",
 CellChangeTimes->{{3.454960467996224*^9, 3.454960488489848*^9}, {
  3.516627776593523*^9, 
  3.516627777517935*^9}},ExpressionUUID->"a7d3bda0-92f0-4708-bebb-\
eeefee792dcd"],

Cell[CellGroupData[{

Cell[BoxData["\<\"You are using the version of NCAlgebra which is found in:\"\
\>"], "Print",
 CellChangeTimes->{
  3.45496049706682*^9, 3.454960753938011*^9, 3.454961064600875*^9, 
   3.454961339224794*^9, 3.4549615780912523`*^9, 3.454961840425696*^9, 
   3.454961991360495*^9, 3.4549620215518723`*^9, 3.454962334212879*^9, 
   3.454962534790019*^9, 3.454962699217764*^9, 3.455303428349798*^9, 
   3.455306271856653*^9, 3.4553067158996058`*^9, {3.516627778743984*^9, 
   3.516627808228333*^9}, 
   3.705773766690349*^9},ExpressionUUID->"89326a01-527f-4b72-bf73-\
f0f823d5b3b4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"  \"\>", "\[InvisibleSpace]", "\<\"/home/mauricio/NC/\"\>"}],
  SequenceForm["  ", "/home/mauricio/NC/"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.45496049706682*^9, 3.454960753938011*^9, 3.454961064600875*^9, 
   3.454961339224794*^9, 3.4549615780912523`*^9, 3.454961840425696*^9, 
   3.454961991360495*^9, 3.4549620215518723`*^9, 3.454962334212879*^9, 
   3.454962534790019*^9, 3.454962699217764*^9, 3.455303428349798*^9, 
   3.455306271856653*^9, 3.4553067158996058`*^9, {3.516627778743984*^9, 
   3.516627808228333*^9}, 
   3.7057737666913347`*^9},ExpressionUUID->"d738e216-0b2a-4890-a716-\
e694807ff9fc"],

Cell[BoxData["\<\"You can now use \\\"<< NCAlgebra`\\\" to load \
NCAlgebra.\"\>"], "Print",
 CellChangeTimes->{
  3.45496049706682*^9, 3.454960753938011*^9, 3.454961064600875*^9, 
   3.454961339224794*^9, 3.4549615780912523`*^9, 3.454961840425696*^9, 
   3.454961991360495*^9, 3.4549620215518723`*^9, 3.454962334212879*^9, 
   3.454962534790019*^9, 3.454962699217764*^9, 3.455303428349798*^9, 
   3.455306271856653*^9, 3.4553067158996058`*^9, {3.516627778743984*^9, 
   3.516627808228333*^9}, 
   3.7057737666919403`*^9},ExpressionUUID->"11370bbb-e741-4953-a953-\
fcdeb1b6873e"],

Cell["\<\
------------------------------------------------------------
NCAlgebra - Version 5.0.4
Compatible with Mathematica Version 10 and above

Authors:

  J. William Helton*
  Mauricio de Oliveira&

* Math, UCSD, La Jolla, CA
& MAE, UCSD, La Jolla, CA

with major earlier contributions by:

  Mark Stankus$ 
  Robert L. Miller#

$ Math, Cal Poly San Luis Obispo
# General Atomics Corp

Copyright: 
  Helton and de Oliveira 2017
  Helton 2002
  Helton and Miller June 1991
  All rights reserved.

The program was written by the authors and by:
  David Hurst, Daniel Lamm, Orlando Merino, Robert Obar,
  Henry Pfister, Mike Walker, John Wavrik, Lois Yu,
  J. Camino, J. Griffin, J. Ovall, T. Shaheen, John Shopple. 
  The beginnings of the program come from eran@slac.
  Considerable recent help came from Igor Klep.

Current primary support is from the 
  NSF Division of Mathematical Sciences.
  
This program was written with support from 
  AFOSR, NSF, ONR, Lab for Math and Statistics at UCSD,
  UCSD Faculty Mentor Program,
  and US Department of Education.

For NCAlgebra updates see:

  www.github.com/NCAlgebra/NC
  www.math.ucsd.edu/~ncalg

------------------------------------------------------------\
\>", "Print",
 CellChangeTimes->{
  3.45496049706682*^9, 3.454960753938011*^9, 3.454961064600875*^9, 
   3.454961339224794*^9, 3.4549615780912523`*^9, 3.454961840425696*^9, 
   3.454961991360495*^9, 3.4549620215518723`*^9, 3.454962334212879*^9, 
   3.454962534790019*^9, 3.454962699217764*^9, 3.455303428349798*^9, 
   3.455306271856653*^9, 3.4553067158996058`*^9, {3.516627778743984*^9, 
   3.516627808228333*^9}, 
   3.705773766696726*^9},ExpressionUUID->"45008af7-8e59-4e92-953e-\
44c2d70e44f0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["LinkObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{15., {0., 15.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[
          {Thickness[0.038461538461538464`], 
           {FaceForm[{GrayLevel[0.93], Opacity[1.]}], 
            FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.499999999999996`,
              2.5}, {25.499999999999996`, 1.3953100000000003`}, {
             24.604699999999998`, 0.49999999999999994`}, {23.5, 
             0.49999999999999994`}, {2.5, 0.49999999999999994`}, {
             1.3953100000000003`, 0.49999999999999994`}, {
             0.49999999999999994`, 1.3953100000000003`}, {
             0.49999999999999994`, 2.5}, {0.49999999999999994`, 23.5}, {
             0.49999999999999994`, 24.604699999999998`}, {1.3953100000000003`,
              25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
             25.499999999999996`}, {24.604699999999998`, 
             25.499999999999996`}, {25.499999999999996`, 
             24.604699999999998`}, {25.499999999999996`, 23.5}, {
             25.499999999999996`, 2.5}}}]}, 
           {FaceForm[{RGBColor[0.5, 0.5, 0.5], Opacity[1.]}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
             19.116799999999998`}, {16.3832, 21.876199999999997`}, {16.3832, 
             20.021499999999996`}, {6.930469999999999, 20.021499999999996`}, {
             6.930469999999999, 18.212100000000003`}, {16.3832, 
             18.212100000000003`}, {16.3832, 16.357399999999995`}, {20.5426, 
             19.116799999999998`}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
             11.079700000000003`}, {9.46445, 12.933999999999997`}, {
             18.917199999999998`, 12.933999999999997`}, {18.917199999999998`, 
             14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
             13.8391}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
             11.079700000000003`}, {9.46445, 12.933999999999997`}, {
             18.917199999999998`, 12.933999999999997`}, {18.917199999999998`, 
             14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
             13.8391}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4sIjUTVcAooO8+XdOPpnKDg8YkwNXuen7JA2
W/qycJSgw5sbHEde31CB82PFhGf3n1V1aFVgVz0zR8oBrF9czWFHsFXE/9Wy
Dje0Dj4qiFWDy7cVLYptDVKH65/g6Xbu0HMNOB9sn4I23H6w+SWacD5De8DS
tDQNB7ldC/alskg4aD2+nx6joeFgnPFi/oMZog5B9vlaQa/UHao9k7f0KUhA
+D/UUPVbqML5jCB+oIpDzJHypGv8Eg4eGad3ikiqwM2T57H5LndPGW6eya7m
GzMvKcH1o4cXABG3d/Y=
             "]], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{14.163129999999999`, 4.337966249999999}, {
             16.96813, 4.337966249999999}, {16.96813, 5.047809999999999}, {
             14.98813, 5.047809999999999}, {14.98813, 8.29796625}, {
             14.163129999999999`, 8.29796625}, {14.163129999999999`, 
             4.337966249999999}}}]}},
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.7]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification]), ImageSizeCache -> {45., {0., 9.}}]}], 
         GridBox[{
           {
            RowBox[{
             TagBox["\<\"Name: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              StyleBox[
               
               PaneBox["\<\"'/home/mauricio/NC/NCGB/Binary/p9c/Linux-x86-64/\
p9c'\"\>",
                BaselinePosition->Baseline,
                ContentPadding->False,
                FrameMargins->0,
                ImageSize->{{1, 300}, Automatic},
                StripOnInput->True],
               LineBreakWithin->False],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Link mode: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["Listen",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[
          {Thickness[0.038461538461538464`], 
           {FaceForm[{GrayLevel[0.93], Opacity[1.]}], 
            FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.499999999999996`,
              2.5}, {25.499999999999996`, 1.3953100000000003`}, {
             24.604699999999998`, 0.49999999999999994`}, {23.5, 
             0.49999999999999994`}, {2.5, 0.49999999999999994`}, {
             1.3953100000000003`, 0.49999999999999994`}, {
             0.49999999999999994`, 1.3953100000000003`}, {
             0.49999999999999994`, 2.5}, {0.49999999999999994`, 23.5}, {
             0.49999999999999994`, 24.604699999999998`}, {1.3953100000000003`,
              25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
             25.499999999999996`}, {24.604699999999998`, 
             25.499999999999996`}, {25.499999999999996`, 
             24.604699999999998`}, {25.499999999999996`, 23.5}, {
             25.499999999999996`, 2.5}}}]}, 
           {FaceForm[{RGBColor[0.5, 0.5, 0.5], Opacity[1.]}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
             19.116799999999998`}, {16.3832, 21.876199999999997`}, {16.3832, 
             20.021499999999996`}, {6.930469999999999, 20.021499999999996`}, {
             6.930469999999999, 18.212100000000003`}, {16.3832, 
             18.212100000000003`}, {16.3832, 16.357399999999995`}, {20.5426, 
             19.116799999999998`}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
             11.079700000000003`}, {9.46445, 12.933999999999997`}, {
             18.917199999999998`, 12.933999999999997`}, {18.917199999999998`, 
             14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
             13.8391}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
             11.079700000000003`}, {9.46445, 12.933999999999997`}, {
             18.917199999999998`, 12.933999999999997`}, {18.917199999999998`, 
             14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
             13.8391}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4sIjUTVcAooO8+XdOPpnKDg8YkwNXuen7JA2
W/qycJSgw5sbHEde31CB82PFhGf3n1V1aFVgVz0zR8oBrF9czWFHsFXE/9Wy
Dje0Dj4qiFWDy7cVLYptDVKH65/g6Xbu0HMNOB9sn4I23H6w+SWacD5De8DS
tDQNB7ldC/alskg4aD2+nx6joeFgnPFi/oMZog5B9vlaQa/UHao9k7f0KUhA
+D/UUPVbqML5jCB+oIpDzJHypGv8Eg4eGad3ikiqwM2T57H5LndPGW6eya7m
GzMvKcH1o4cXABG3d/Y=
             "]], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{14.163129999999999`, 4.337966249999999}, {
             16.96813, 4.337966249999999}, {16.96813, 5.047809999999999}, {
             14.98813, 5.047809999999999}, {14.98813, 8.29796625}, {
             14.163129999999999`, 8.29796625}, {14.163129999999999`, 
             4.337966249999999}}}]}},
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.7]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification]), ImageSizeCache -> {45., {0., 9.}}]}], 
         GridBox[{
           {
            RowBox[{
             TagBox["\<\"Name: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              
              PaneBox["\<\"'/home/mauricio/NC/NCGB/Binary/p9c/Linux-x86-64/\
p9c'\"\>",
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Link mode: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["Listen",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Link protocol: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"SharedMemory\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  LinkObject["'/home/mauricio/NC/NCGB/Binary/p9c/Linux-x86-64/p9c'", 389, 5],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Print",
 CellChangeTimes->{
  3.45496049706682*^9, 3.454960753938011*^9, 3.454961064600875*^9, 
   3.454961339224794*^9, 3.4549615780912523`*^9, 3.454961840425696*^9, 
   3.454961991360495*^9, 3.4549620215518723`*^9, 3.454962334212879*^9, 
   3.454962534790019*^9, 3.454962699217764*^9, 3.455303428349798*^9, 
   3.455306271856653*^9, 3.4553067158996058`*^9, {3.516627778743984*^9, 
   3.516627808228333*^9}, 
   3.705773767391815*^9},ExpressionUUID->"38922aaf-9c11-49c1-9975-\
8b195185ae05"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"NCTeX::Using '\"\>", "\[InvisibleSpace]", "\<\"acroread\"\>", 
   "\[InvisibleSpace]", "\<\"' as PDFViewer.\"\>"}],
  SequenceForm["NCTeX::Using '", "acroread", "' as PDFViewer."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.45496049706682*^9, 3.454960753938011*^9, 3.454961064600875*^9, 
   3.454961339224794*^9, 3.4549615780912523`*^9, 3.454961840425696*^9, 
   3.454961991360495*^9, 3.4549620215518723`*^9, 3.454962334212879*^9, 
   3.454962534790019*^9, 3.454962699217764*^9, 3.455303428349798*^9, 
   3.455306271856653*^9, 3.4553067158996058`*^9, {3.516627778743984*^9, 
   3.516627808228333*^9}, 
   3.705773767392982*^9},ExpressionUUID->"574d05d2-313a-4de8-b467-\
3fdee8e5db3d"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetNonCommutative", "[", 
   RowBox[{"X", ",", "Y", ",", "W", ",", "Z"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.4553050265525093`*^9, 3.4553050809999332`*^9}, {
  3.455305516291078*^9, 
  3.455305516810543*^9}},ExpressionUUID->"a2cf79f5-d816-4589-9d75-\
a717ec832cf1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"relations", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"X", "**", "Z", "**", "Y"}]}], ")"}], "**", "W"}], "-", 
      "1"}], ",", 
     RowBox[{
      RowBox[{"W", "**", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"X", "**", "Z", "**", "Y"}]}], ")"}]}], "-", "1"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Inv", "[", "Z", "]"}], "**", "Z"}], "-", "1"}], ",", 
     RowBox[{
      RowBox[{"Z", "**", 
       RowBox[{"Inv", "[", "Z", "]"}]}], "-", "1"}]}], "}"}], "//", 
   "NCExpand"}]}]], "Input",
 CellChangeTimes->{{3.455305057936057*^9, 3.455305128556793*^9}, {
  3.455305304393443*^9, 3.455305306572563*^9}, {3.4553055357476673`*^9, 
  3.4553055761391363`*^9}},ExpressionUUID->"9c56870a-eece-45af-8df8-\
69defcfc62a6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "1"}], "+", "W", "-", 
    RowBox[{"X", "**", "Z", "**", "Y", "**", "W"}]}], ",", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "W", "-", 
    RowBox[{"W", "**", "X", "**", "Z", "**", "Y"}]}], ",", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{
     RowBox[{"Inv", "[", "Z", "]"}], "**", "Z"}]}], ",", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"Z", "**", 
     RowBox[{"Inv", "[", "Z", "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.4553051352077427`*^9, 3.455305307793816*^9, 3.455305437900566*^9, 
   3.455305491954423*^9, 3.455305547373098*^9, 3.455305577903783*^9, 
   3.455305610435766*^9, 3.4553056496679296`*^9, {3.5166277858271914`*^9, 
   3.516627810579536*^9}, 
   3.705773767714957*^9},ExpressionUUID->"c3794fb2-db26-4987-9c84-\
2f78be8d6a4c"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearMonomialOrderAll", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"SetMonomialOrder", "[", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"X", ",", "Y"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Z", ",", 
     RowBox[{"Inv", "[", "Z", "]"}]}], "}"}], ",", 
   RowBox[{"{", "W", "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.455305145766316*^9, {3.4553051976085978`*^9, 3.455305229080944*^9}, {
   3.4553054222894506`*^9, 3.455305423088925*^9}, {3.455305551755231*^9, 
   3.455305587402295*^9}},ExpressionUUID->"a6c51fba-4160-4fed-8ac2-\
9c735abc8d1d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NCProcess", "[", " ", 
   RowBox[{
   "relations", ",", " ", "6", ",", " ", "0", ",", " ", "0", ",", " ", "0", 
    ",", " ", "\"\<PinvA\>\""}], "]"}], ";"}]], "Input",
 CellChangeTimes->{
  3.45530524727796*^9},ExpressionUUID->"ea64aa98-e3e1-4e3e-af7a-ed6530107397"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Outputting results to the stream \"\>", "\[InvisibleSpace]", 
   InterpretationBox[
    StyleBox[
     RowBox[{"OutputStream", "[", 
      RowBox[{"\"\<PinvA.tex\>\"", ",", " ", "3"}], "]"}],
     ShowStringCharacters->True,
     NumberMarks->True],
    Format[
     OutputStream["PinvA.tex", 3], InputForm],
    AutoDelete->True,
    Editable->True]}],
  SequenceForm["Outputting results to the stream ", 
   Format[
    OutputStream["PinvA.tex", 3], InputForm]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.455305248136141*^9, 3.455305311092461*^9, 3.455305439335162*^9, {
   3.5166277877167788`*^9, 3.516627810834662*^9}, 
   3.7057737678341103`*^9},ExpressionUUID->"dbb43ea9-a883-470e-883c-\
faaf7f0adf63"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Done outputting results to the stream \"\>", 
   "\[InvisibleSpace]", 
   InterpretationBox[
    StyleBox[
     RowBox[{"OutputStream", "[", 
      RowBox[{"\"\<PinvA.tex\>\"", ",", " ", "3"}], "]"}],
     ShowStringCharacters->True,
     NumberMarks->True],
    Format[
     OutputStream["PinvA.tex", 3], InputForm],
    AutoDelete->True,
    Editable->True]}],
  SequenceForm["Done outputting results to the stream ", 
   Format[
    OutputStream["PinvA.tex", 3], InputForm]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.455305248136141*^9, 3.455305311092461*^9, 3.455305439335162*^9, {
   3.5166277877167788`*^9, 3.516627810834662*^9}, 
   3.705773767894186*^9},ExpressionUUID->"36f03705-21ef-4b4c-b9a5-\
5f22f4e45096"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"> Running '\"\>", 
   "\[InvisibleSpace]", "\<\"pdflatex -output-directory=.  PinvA.tex 1> \
\\\"/tmp/mNCRun.out\\\" 2> \\\"/tmp/mNCRun.err\\\"\"\>", 
   "\[InvisibleSpace]", "\<\"'...\"\>"}],
  SequenceForm[
  "> Running '", 
   "pdflatex -output-directory=.  PinvA.tex 1> \"/tmp/mNCRun.out\" 2> \
\"/tmp/mNCRun.err\"", "'..."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.455305248136141*^9, 3.455305311092461*^9, 3.455305439335162*^9, {
   3.5166277877167788`*^9, 3.516627810834662*^9}, 
   3.705773767895094*^9},ExpressionUUID->"e40113fa-3927-4711-ba7e-\
3e040be48c14"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"> Running '\"\>", 
   "\[InvisibleSpace]", "\<\"acroread  PinvA.pdf 1> \\\"/tmp/mNCRun.out\\\" \
2> \\\"/tmp/mNCRun.err\\\"\"\>", "\[InvisibleSpace]", "\<\"'...\"\>"}],
  SequenceForm[
  "> Running '", 
   "acroread  PinvA.pdf 1> \"/tmp/mNCRun.out\" 2> \"/tmp/mNCRun.err\"", 
   "'..."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.455305248136141*^9, 3.455305311092461*^9, 3.455305439335162*^9, {
   3.5166277877167788`*^9, 3.516627810834662*^9}, 
   3.705773767981144*^9},ExpressionUUID->"12ef3798-1dfb-4c13-8d6c-\
bc644c5ac563"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Note: Your TeX and Dvi files are located in the directory \
\"\>", "\[InvisibleSpace]", "\<\"/home/mauricio\"\>"}],
  SequenceForm[
  "Note: Your TeX and Dvi files are located in the directory ", 
   "/home/mauricio"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.455305248136141*^9, 3.455305311092461*^9, 3.455305439335162*^9, {
   3.5166277877167788`*^9, 3.516627810834662*^9}, 
   3.70577381772633*^9},ExpressionUUID->"febbe896-2ba7-4288-90cc-\
f9fe2239d30a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"NCMakeGB", "[", " ", 
   RowBox[{"relations", ",", "10"}], " ", "]"}], "//", 
  "ColumnForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"FinishedComputingBasisQ", "[", "]"}], " ", "\[Equal]", " ", 
     "1"}], ",", " ", 
    RowBox[{"Print", "[", " ", "\"\<Finite Basis.\>\"", " ", "]"}], ",", " ", 
    
    RowBox[{"Print", "[", " ", "\"\<NOT Finite Basis.\>\"", " ", "]"}]}], " ",
    "]"}], ";"}]}], "Input",ExpressionUUID->"733bc2a4-2ad8-45fe-a372-\
bf921ffa25c8"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     RowBox[{"1", "-", "W", "+", 
      RowBox[{"X", "**", "Z", "**", "Y", "**", "W"}]}]},
    {
     RowBox[{"1", "-", "W", "+", 
      RowBox[{"W", "**", "X", "**", "Z", "**", "Y"}]}]},
    {
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{
       RowBox[{"Inv", "[", "Z", "]"}], "**", "Z"}]}]},
    {
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"Z", "**", 
       RowBox[{"Inv", "[", "Z", "]"}]}]}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  ColumnForm[{
   1 - $CellContext`W + 
    NonCommutativeMultiply[$CellContext`X, $CellContext`Z, $CellContext`Y, \
$CellContext`W], 1 - $CellContext`W + 
    NonCommutativeMultiply[$CellContext`W, $CellContext`X, $CellContext`Z, \
$CellContext`Y], -1 + NonCommutativeMultiply[
      $CellContext`Inv[$CellContext`Z], $CellContext`Z], -1 + 
    NonCommutativeMultiply[$CellContext`Z, 
      $CellContext`Inv[$CellContext`Z]]}],
  Editable->False]], "Output",
 CellChangeTimes->{{3.4553054124111757`*^9, 3.4553054467023153`*^9}, 
   3.4553054965534897`*^9, 3.455305555553524*^9, {3.455305591833941*^9, 
   3.455305614755*^9}, 3.455305654308776*^9, {3.516627793394071*^9, 
   3.5166278110999317`*^9}, 
   3.705773817884359*^9},ExpressionUUID->"98fa0040-709e-4b08-b04d-\
4788b4e2e62d"],

Cell[BoxData["\<\"Finite Basis.\"\>"], "Print",
 CellChangeTimes->{{3.455305412413142*^9, 3.455305446705652*^9}, 
   3.4553054965568542`*^9, 3.455305555556904*^9, {3.45530559186615*^9, 
   3.455305614791754*^9}, 3.455305654348754*^9, {3.516627793398419*^9, 
   3.516627811105629*^9}, 
   3.705773817885214*^9},ExpressionUUID->"0cdb86f9-210b-4ca6-a0d0-\
aca3e1bf6349"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pseudoinverse of A", "Section",
 CellChangeTimes->{{3.455303439813245*^9, 
  3.455303449314818*^9}},ExpressionUUID->"13b812e1-fee4-4af8-b4b6-\
4231d62b94ab"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SetNonCommutative", "[", 
   RowBox[{"A", ",", "B", ",", 
    RowBox[{"Pinv", "[", "A", "]"}], ",", 
    RowBox[{"Pinv", "[", "B", "]"}], ",", 
    RowBox[{"Pinv", "[", 
     RowBox[{"A", "+", "B"}], "]"}], ",", 
    RowBox[{"Pinv", "[", 
     RowBox[{"A", "**", "B"}], "]"}]}], " ", "]"}], ";"}]], "Input",Expression\
UUID->"38a9e204-c2a9-4fe3-8dc8-a28460802f0b"],

Cell[BoxData[
 TemplateBox[{
  "CommutativeQ","NonCommutative",
   "\"Tried to set the \
\\!\\(\\*RowBox[{\\\"\\\\\\\"expression\\\\\\\"\\\"}]\\) \
\\\"\\!\\(\\*RowBox[{\\\"Pinv\\\", \\\"[\\\", \\\"A\\\", \\\"]\\\"}]\\)\\\" \
to be noncommutative.\"",2,10,1,19514446379403453101,"Local",
   "NonCommutativeMultiply`CommutativeQ"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{
  3.705773817984928*^9},ExpressionUUID->"4baf77c8-e6a2-44ef-a9e7-\
6094ef3b11b6"],

Cell[BoxData[
 TemplateBox[{
  "CommutativeQ","NonCommutative",
   "\"Tried to set the \
\\!\\(\\*RowBox[{\\\"\\\\\\\"expression\\\\\\\"\\\"}]\\) \
\\\"\\!\\(\\*RowBox[{\\\"Pinv\\\", \\\"[\\\", \\\"B\\\", \\\"]\\\"}]\\)\\\" \
to be noncommutative.\"",2,10,2,19514446379403453101,"Local",
   "NonCommutativeMultiply`CommutativeQ"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{
  3.7057738179945173`*^9},ExpressionUUID->"a99ca170-c499-4397-9008-\
eb6dbdd0eac2"],

Cell[BoxData[
 TemplateBox[{
  "CommutativeQ","NonCommutative",
   "\"Tried to set the \
\\!\\(\\*RowBox[{\\\"\\\\\\\"expression\\\\\\\"\\\"}]\\) \
\\\"\\!\\(\\*RowBox[{\\\"Pinv\\\", \\\"[\\\", RowBox[{\\\"A\\\", \\\"+\\\", \
\\\"B\\\"}], \\\"]\\\"}]\\)\\\" to be noncommutative.\"",2,10,3,
   19514446379403453101,"Local","NonCommutativeMultiply`CommutativeQ"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{
  3.705773817999406*^9},ExpressionUUID->"19b4e418-50a8-4986-b6ac-\
f78db9c288f3"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"CommutativeQ\\\", \
\\\"::\\\", \\\"NonCommutative\\\"}], \\\"MessageName\\\"]\\) will be \
suppressed during this calculation.\"",2,10,4,19514446379403453101,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.70577381800515*^9},ExpressionUUID->"ef4dbe2d-db40-4870-a044-747375f788fa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"relations", " ", "=", " ", 
   RowBox[{
    RowBox[{"NCMakeRelations", "[", 
     RowBox[{"{", 
      RowBox[{"Pinv", ",", "A"}], "}"}], "]"}], " ", "//.", " ", 
    RowBox[{"Tp", " ", "\[Rule]", " ", "tp"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearMonomialOrderAll", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetMonomialOrder", "[", " ", 
   RowBox[{"{", 
    RowBox[{"A", ",", 
     RowBox[{"tp", "[", "A", "]"}], ",", 
     RowBox[{"Pinv", "[", "A", "]"}], ",", 
     RowBox[{"Pinv", "[", 
      RowBox[{"tp", "[", "A", "]"}], "]"}], ",", 
     RowBox[{"tp", "[", 
      RowBox[{"Pinv", "[", "A", "]"}], "]"}]}], " ", "}"}], " ", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PrintMonomialOrder", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{
  3.455303435825029*^9, {3.455304149818997*^9, 3.455304173429998*^9}, 
   3.455304405394816*^9, {3.455304442769433*^9, 3.455304462704898*^9}, {
   3.455304563032814*^9, 3.455304582659992*^9}, {3.455304740502245*^9, 
   3.455304740734542*^9}},ExpressionUUID->"7e7abcdf-5965-4dd9-bb11-\
620081ac2b72"],

Cell[BoxData[
 TemplateBox[{
  "Get","noopen",
   "\"Cannot open \
\\!\\(\\*RowBox[{\\\"\\\\\\\"NCMatMult`\\\\\\\"\\\"}]\\).\"",2,11,5,
   19514446379403453101,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.705773818085243*^9},ExpressionUUID->"c636f43c-5fc3-435b-adec-\
2d21c0b137fa"],

Cell[BoxData[
 TemplateBox[{
  "Needs","nocont",
   "\"Context \\!\\(\\*RowBox[{\\\"\\\\\\\"NCMatMult`\\\\\\\"\\\"}]\\) was \
not created when Needs was evaluated.\"",2,11,6,19514446379403453101,"Local"},
  
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.705773818090577*^9},ExpressionUUID->"2fdd88c0-73d9-44a3-bade-\
6edc0ac721cf"],

Cell[BoxData[
 TemplateBox[{
  "MatMult","shdw",
   "\"Symbol \\!\\(\\*RowBox[{\\\"\\\\\\\"MatMult\\\\\\\"\\\"}]\\) appears in \
multiple contexts \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"\\\\\\\"NCMatMult`\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"NCDeprecated`\\\\\\\"\\\"}], \\\"}\\\"}]\\); definitions in \
context \\!\\(\\*RowBox[{\\\"\\\\\\\"NCMatMult`\\\\\\\"\\\"}]\\) may shadow \
or be shadowed by other definitions.\"",2,11,7,19514446379403453101,"Local",
   "NCMatMult`MatMult"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{
  3.705773818095161*^9},ExpressionUUID->"017669e5-915a-40ed-a031-\
aa0f8dea8615"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "**", 
     RowBox[{"Pinv", "[", "A", "]"}], "**", "A"}], "\[Equal]", "A"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Pinv", "[", "A", "]"}], "**", "A", "**", 
     RowBox[{"Pinv", "[", "A", "]"}]}], "\[Equal]", 
    RowBox[{"Pinv", "[", "A", "]"}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["A", "T"], "**", 
     SuperscriptBox[
      RowBox[{"Pinv", "[", "A", "]"}], "T"]}], "\[Equal]", 
    RowBox[{
     RowBox[{"Pinv", "[", "A", "]"}], "**", "A"}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"Pinv", "[", "A", "]"}], "T"], "**", 
     SuperscriptBox["A", "T"]}], "\[Equal]", 
    RowBox[{"A", "**", 
     RowBox[{"Pinv", "[", "A", "]"}]}]}], ",", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"Pinv", "[", "A", "]"}], "T"], "\[Equal]", 
    RowBox[{"Pinv", "[", 
     SuperscriptBox["A", "T"], "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.455304409290432*^9, {3.4553044636602697`*^9, 3.4553044757637777`*^9}, {
   3.455304565558694*^9, 3.455304586940074*^9}, 3.4553047427423573`*^9, 
   3.455305659474019*^9, {3.516627796323547*^9, 3.5166278111961927`*^9}, 
   3.7057738181040382`*^9},ExpressionUUID->"58a8df51-2b03-4765-8c0f-\
75748b7f30c8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NCProcess", "[", " ", 
   RowBox[{
   "relations", ",", " ", "6", ",", " ", "0", ",", " ", "0", ",", " ", "0", 
    ",", " ", "\"\<PinvA\>\"", ",", " ", 
    RowBox[{"SBByCat", " ", "\[Rule]", "False"}], ",", " ", 
    RowBox[{"RR", "\[Rule]", " ", "False"}], ",", " ", 
    RowBox[{"NCCV", " ", "\[Rule]", " ", "False"}]}], " ", "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.455304170940394*^9},ExpressionUUID->"a591ec79-c928-4c16-aa2a-\
1c8e7da05bd2"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Outputting results to the stream \"\>", "\[InvisibleSpace]", 
   InterpretationBox[
    StyleBox[
     RowBox[{"OutputStream", "[", 
      RowBox[{"\"\<PinvA.tex\>\"", ",", " ", "3"}], "]"}],
     ShowStringCharacters->True,
     NumberMarks->True],
    Format[
     OutputStream["PinvA.tex", 3], InputForm],
    AutoDelete->True,
    Editable->True]}],
  SequenceForm["Outputting results to the stream ", 
   Format[
    OutputStream["PinvA.tex", 3], InputForm]],
  Editable->False]], "Print",
 CellChangeTimes->{3.455304485988297*^9, 3.516627811318501*^9, 
  3.705773818237151*^9},ExpressionUUID->"66260b2d-8fd9-43d5-988a-\
cad5e8a16547"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Done outputting results to the stream \"\>", 
   "\[InvisibleSpace]", 
   InterpretationBox[
    StyleBox[
     RowBox[{"OutputStream", "[", 
      RowBox[{"\"\<PinvA.tex\>\"", ",", " ", "3"}], "]"}],
     ShowStringCharacters->True,
     NumberMarks->True],
    Format[
     OutputStream["PinvA.tex", 3], InputForm],
    AutoDelete->True,
    Editable->True]}],
  SequenceForm["Done outputting results to the stream ", 
   Format[
    OutputStream["PinvA.tex", 3], InputForm]],
  Editable->False]], "Print",
 CellChangeTimes->{3.455304485988297*^9, 3.516627811318501*^9, 
  3.705773818261044*^9},ExpressionUUID->"d39a9e6e-8d0c-4b4d-b8cb-\
b0964233c09b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"> Running '\"\>", 
   "\[InvisibleSpace]", "\<\"pdflatex -output-directory=.  PinvA.tex 1> \
\\\"/tmp/mNCRun.out\\\" 2> \\\"/tmp/mNCRun.err\\\"\"\>", 
   "\[InvisibleSpace]", "\<\"'...\"\>"}],
  SequenceForm[
  "> Running '", 
   "pdflatex -output-directory=.  PinvA.tex 1> \"/tmp/mNCRun.out\" 2> \
\"/tmp/mNCRun.err\"", "'..."],
  Editable->False]], "Print",
 CellChangeTimes->{3.455304485988297*^9, 3.516627811318501*^9, 
  3.705773818262157*^9},ExpressionUUID->"7e768ff4-5bfb-4277-8c75-\
0ad601dc062d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"> Running '\"\>", 
   "\[InvisibleSpace]", "\<\"acroread  PinvA.pdf 1> \\\"/tmp/mNCRun.out\\\" \
2> \\\"/tmp/mNCRun.err\\\"\"\>", "\[InvisibleSpace]", "\<\"'...\"\>"}],
  SequenceForm[
  "> Running '", 
   "acroread  PinvA.pdf 1> \"/tmp/mNCRun.out\" 2> \"/tmp/mNCRun.err\"", 
   "'..."],
  Editable->False]], "Print",
 CellChangeTimes->{3.455304485988297*^9, 3.516627811318501*^9, 
  3.7057738183866367`*^9},ExpressionUUID->"8f79defe-0ba6-4a46-b939-\
7b0b04908361"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Note: Your TeX and Dvi files are located in the directory \
\"\>", "\[InvisibleSpace]", "\<\"/home/mauricio\"\>"}],
  SequenceForm[
  "Note: Your TeX and Dvi files are located in the directory ", 
   "/home/mauricio"],
  Editable->False]], "Print",
 CellChangeTimes->{3.455304485988297*^9, 3.516627811318501*^9, 
  3.705773844734461*^9},ExpressionUUID->"c88b164f-a350-468e-adfb-\
a17fe63f6508"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"NCMakeGB", "[", " ", 
   RowBox[{"relations", ",", "10"}], " ", "]"}], "//", 
  "ColumnForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"FinishedComputingBasisQ", "[", "]"}], " ", "\[Equal]", " ", 
     "1"}], ",", " ", 
    RowBox[{"Print", "[", " ", "\"\<Finite Basis.\>\"", " ", "]"}], ",", " ", 
    
    RowBox[{"Print", "[", " ", "\"\<NOT Finite Basis.\>\"", " ", "]"}]}], " ",
    "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.455304159877202*^9, 
  3.455304190216152*^9}},ExpressionUUID->"042162fb-7da2-4e65-890f-\
9573587315c1"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}]}], "+", 
      SuperscriptBox[
       RowBox[{"Pinv", "[", "A", "]"}], "T"]}]},
    {
     RowBox[{
      RowBox[{"-", "A"}], "+", 
      RowBox[{"A", "**", 
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", "A", "]"}]}], "-", 
      RowBox[{"Pinv", "[", "A", "]"}]}]},
    {
     RowBox[{
      RowBox[{
       RowBox[{"Pinv", "[", "A", "]"}], "**", "A"}], "-", 
      RowBox[{
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{"A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}], "**", 
       SuperscriptBox["A", "T"]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        SuperscriptBox["A", "T"], "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["A", "T"], "]"}]}]}], "+", 
      RowBox[{
       SuperscriptBox["A", "T"], "**", "A", "**", 
       RowBox[{"Pinv", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         SuperscriptBox["A", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}]}], "+", 
      RowBox[{"A", "**", 
       RowBox[{"Pinv", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", "A", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{"A", "**", 
        SuperscriptBox["A", "T"]}]}], "+", 
      RowBox[{"A", "**", 
       SuperscriptBox["A", "T"], "**", "A", "**", 
       RowBox[{"Pinv", "[", "A", "]"}]}]}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  ColumnForm[{-$CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]] + 
    NonCommutativeMultiply`tp[
      $CellContext`Pinv[$CellContext`A]], -$CellContext`A + 
    NonCommutativeMultiply[$CellContext`A, 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]]], NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], 
      $CellContext`Pinv[$CellContext`A]] - $CellContext`Pinv[$CellContext`A], 
    NonCommutativeMultiply[
      $CellContext`Pinv[$CellContext`A], $CellContext`A] - 
    NonCommutativeMultiply[
     NonCommutativeMultiply`tp[$CellContext`A], 
     $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A]]], -
     NonCommutativeMultiply[$CellContext`A, 
       $CellContext`Pinv[$CellContext`A]] + NonCommutativeMultiply[
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], 
      NonCommutativeMultiply`tp[$CellContext`A]], -NonCommutativeMultiply[
       NonCommutativeMultiply`tp[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`A], $CellContext`A, 
      $CellContext`Pinv[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]]], -NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]], 
       $CellContext`Pinv[$CellContext`A]] + 
    NonCommutativeMultiply[$CellContext`A, 
      $CellContext`Pinv[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], 
      $CellContext`Pinv[$CellContext`A]], -
     NonCommutativeMultiply[$CellContext`A, 
       NonCommutativeMultiply`tp[$CellContext`A]] + 
    NonCommutativeMultiply[$CellContext`A, 
      NonCommutativeMultiply`tp[$CellContext`A], $CellContext`A, 
      $CellContext`Pinv[$CellContext`A]]}],
  Editable->False]], "Output",
 CellChangeTimes->{{3.45530418453717*^9, 3.4553041909281397`*^9}, {
   3.455304469081811*^9, 3.4553044776465607`*^9}, {3.455304569314247*^9, 
   3.4553045893615923`*^9}, 3.455304746335107*^9, 3.455305663070256*^9, 
   3.516627811970951*^9, 
   3.705773844848599*^9},ExpressionUUID->"da50d905-ee25-428b-b8e5-\
b7ad63002d2c"],

Cell[BoxData["\<\"Finite Basis.\"\>"], "Print",
 CellChangeTimes->{{3.455304180588873*^9, 3.4553041909573383`*^9}, {
   3.455304469108603*^9, 3.455304477649626*^9}, {3.455304569338192*^9, 
   3.455304589392166*^9}, 3.455304746360916*^9, 3.4553056631022987`*^9, 
   3.5166278119760513`*^9, 
   3.705773844849753*^9},ExpressionUUID->"4067fe2e-be2b-46d7-b82d-\
68a09761df5e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pseudoinverse of A + B", "Section",
 CellChangeTimes->{{3.455303762339542*^9, 
  3.455303762659378*^9}},ExpressionUUID->"5f8134ff-b4f2-4b81-bf22-\
42a4bd271b6d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"relations", " ", "=", " ", 
    RowBox[{
     RowBox[{"NCMakeRelations", "[", 
      RowBox[{"{", 
       RowBox[{"Pinv", ",", "A", ",", "B", ",", 
        RowBox[{"A", "+", "B"}]}], "}"}], "]"}], " ", "//.", " ", 
     RowBox[{"Tp", " ", "\[Rule]", " ", "tp"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearMonomialOrderAll", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetMonomialOrder", "[", " ", 
   RowBox[{"{", 
    RowBox[{"A", ",", "B", ",", 
     RowBox[{"tp", "[", "A", "]"}], ",", 
     RowBox[{"tp", "[", "B", "]"}], ",", 
     RowBox[{"Pinv", "[", "A", "]"}], ",", 
     RowBox[{"Pinv", "[", "B", "]"}], ",", 
     RowBox[{"Pinv", "[", 
      RowBox[{"tp", "[", "A", "]"}], "]"}], ",", 
     RowBox[{"Pinv", "[", 
      RowBox[{"tp", "[", "B", "]"}], "]"}], ",", 
     RowBox[{"tp", "[", 
      RowBox[{"Pinv", "[", "A", "]"}], "]"}], ",", 
     RowBox[{"tp", "[", 
      RowBox[{"Pinv", "[", "B", "]"}], "]"}], ",", 
     RowBox[{"Pinv", "[", 
      RowBox[{"A", "+", "B"}], "]"}], ",", 
     RowBox[{"Pinv", "[", 
      RowBox[{"tp", "[", 
       RowBox[{"A", "+", "B"}], "]"}], "]"}], ",", 
     RowBox[{"tp", "[", 
      RowBox[{"Pinv", "[", 
       RowBox[{"A", "+", "B"}], "]"}], "]"}]}], " ", "}"}], " ", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PrintMonomialOrder", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{3.455303775434408*^9, 
  3.455304205376693*^9},ExpressionUUID->"ced7d4f4-1122-4a71-82f7-\
c6bcd91d6295"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NCProcess", "[", " ", 
   RowBox[{
   "relations", ",", " ", "6", ",", " ", "0", ",", " ", "0", ",", " ", "0", 
    ",", " ", "\"\<PinvAPlusB\>\"", ",", " ", 
    RowBox[{"SBByCat", " ", "\[Rule]", "False"}], ",", " ", 
    RowBox[{"RR", "\[Rule]", " ", "False"}], ",", " ", 
    RowBox[{"NCCV", " ", "\[Rule]", " ", "False"}]}], " ", "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.4553042099407473`*^9, 
  3.455304210644578*^9}},ExpressionUUID->"0675dc7f-0e0e-4bde-b28b-\
20dfc7fea4af"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Outputting results to the stream \"\>", "\[InvisibleSpace]", 
   InterpretationBox[
    StyleBox[
     RowBox[{"OutputStream", "[", 
      RowBox[{"\"\<PinvAPlusB.tex\>\"", ",", " ", "3"}], "]"}],
     ShowStringCharacters->True,
     NumberMarks->True],
    Format[
     OutputStream["PinvAPlusB.tex", 3], InputForm],
    AutoDelete->True,
    Editable->True]}],
  SequenceForm["Outputting results to the stream ", 
   Format[
    OutputStream["PinvAPlusB.tex", 3], InputForm]],
  Editable->False]], "Print",
 CellChangeTimes->{3.455304211691511*^9, 3.516627813961876*^9, 
  3.7057738455436373`*^9},ExpressionUUID->"b8e5cfc4-ad0a-42bd-b9f8-\
52de55a42ddf"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Done outputting results to the stream \"\>", 
   "\[InvisibleSpace]", 
   InterpretationBox[
    StyleBox[
     RowBox[{"OutputStream", "[", 
      RowBox[{"\"\<PinvAPlusB.tex\>\"", ",", " ", "3"}], "]"}],
     ShowStringCharacters->True,
     NumberMarks->True],
    Format[
     OutputStream["PinvAPlusB.tex", 3], InputForm],
    AutoDelete->True,
    Editable->True]}],
  SequenceForm["Done outputting results to the stream ", 
   Format[
    OutputStream["PinvAPlusB.tex", 3], InputForm]],
  Editable->False]], "Print",
 CellChangeTimes->{3.455304211691511*^9, 3.516627813961876*^9, 
  3.705773845753503*^9},ExpressionUUID->"a7b26006-fd82-495c-b1bb-\
9d5901151302"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"> Running '\"\>", 
   "\[InvisibleSpace]", "\<\"pdflatex -output-directory=.  PinvAPlusB.tex 1> \
\\\"/tmp/mNCRun.out\\\" 2> \\\"/tmp/mNCRun.err\\\"\"\>", 
   "\[InvisibleSpace]", "\<\"'...\"\>"}],
  SequenceForm[
  "> Running '", 
   "pdflatex -output-directory=.  PinvAPlusB.tex 1> \"/tmp/mNCRun.out\" 2> \
\"/tmp/mNCRun.err\"", "'..."],
  Editable->False]], "Print",
 CellChangeTimes->{3.455304211691511*^9, 3.516627813961876*^9, 
  3.705773845755072*^9},ExpressionUUID->"d70e1393-9e4f-4034-a57d-\
5a66863286de"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"> Running '\"\>", 
   "\[InvisibleSpace]", "\<\"acroread  PinvAPlusB.pdf 1> \
\\\"/tmp/mNCRun.out\\\" 2> \\\"/tmp/mNCRun.err\\\"\"\>", 
   "\[InvisibleSpace]", "\<\"'...\"\>"}],
  SequenceForm[
  "> Running '", 
   "acroread  PinvAPlusB.pdf 1> \"/tmp/mNCRun.out\" 2> \"/tmp/mNCRun.err\"", 
   "'..."],
  Editable->False]], "Print",
 CellChangeTimes->{3.455304211691511*^9, 3.516627813961876*^9, 
  3.705773845887516*^9},ExpressionUUID->"c7ff5df2-ac1d-430b-87e7-\
9b22750eb0c6"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Note: Your TeX and Dvi files are located in the directory \
\"\>", "\[InvisibleSpace]", "\<\"/home/mauricio\"\>"}],
  SequenceForm[
  "Note: Your TeX and Dvi files are located in the directory ", 
   "/home/mauricio"],
  Editable->False]], "Print",
 CellChangeTimes->{3.455304211691511*^9, 3.516627813961876*^9, 
  3.7057738618130703`*^9},ExpressionUUID->"8820b99f-81e8-485c-8994-\
c250728b0999"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"NCMakeGB", "[", " ", 
   RowBox[{"relations", ",", "10"}], " ", "]"}], "//", 
  "ColumnForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"FinishedComputingBasisQ", "[", "]"}], " ", "\[Equal]", " ", 
     "1"}], ",", " ", 
    RowBox[{"Print", "[", " ", "\"\<Finite Basis.\>\"", " ", "]"}], ",", " ", 
    
    RowBox[{"Print", "[", " ", "\"\<NOT Finite Basis.\>\"", " ", "]"}]}], " ",
    "]"}], ";"}]}], "Input",ExpressionUUID->"0d8f9d19-009f-42e1-9f60-\
590d56f31989"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}]}], "+", 
      SuperscriptBox[
       RowBox[{"Pinv", "[", "A", "]"}], "T"]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}]}], "+", 
      SuperscriptBox[
       RowBox[{"Pinv", "[", "B", "]"}], "T"]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["A", "T"], "+", 
         SuperscriptBox["B", "T"]}], "]"}]}], "+", 
      SuperscriptBox[
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "T"]}]},
    {
     RowBox[{
      RowBox[{"-", "A"}], "+", 
      RowBox[{"A", "**", 
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", "A", "]"}]}], "-", 
      RowBox[{"Pinv", "[", "A", "]"}]}]},
    {
     RowBox[{
      RowBox[{
       RowBox[{"Pinv", "[", "A", "]"}], "**", "A"}], "-", 
      RowBox[{
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{"A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}], "**", 
       SuperscriptBox["A", "T"]}]}]},
    {
     RowBox[{
      RowBox[{"-", "B"}], "+", 
      RowBox[{"B", "**", 
       SuperscriptBox["B", "T"], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["B", "T"], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}], "-", 
      RowBox[{"Pinv", "[", "B", "]"}]}]},
    {
     RowBox[{
      RowBox[{
       RowBox[{"Pinv", "[", "B", "]"}], "**", "B"}], "-", 
      RowBox[{
       SuperscriptBox["B", "T"], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{"B", "**", 
        RowBox[{"Pinv", "[", "B", "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}], "**", 
       SuperscriptBox["B", "T"]}]}]},
    {
     RowBox[{
      RowBox[{"-", "A"}], "-", "B", "+", 
      RowBox[{"A", "**", 
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["A", "T"], "+", 
         SuperscriptBox["B", "T"]}], "]"}]}], "+", 
      RowBox[{"A", "**", 
       SuperscriptBox["B", "T"], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["A", "T"], "+", 
         SuperscriptBox["B", "T"]}], "]"}]}], "+", 
      RowBox[{"B", "**", 
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["A", "T"], "+", 
         SuperscriptBox["B", "T"]}], "]"}]}], "+", 
      RowBox[{"B", "**", 
       SuperscriptBox["B", "T"], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["A", "T"], "+", 
         SuperscriptBox["B", "T"]}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["A", "T"], "+", 
         SuperscriptBox["B", "T"]}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["B", "T"], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["A", "T"], "+", 
         SuperscriptBox["B", "T"]}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}]}], "-", 
      RowBox[{"Pinv", "[", 
       RowBox[{"A", "+", "B"}], "]"}]}]},
    {
     RowBox[{
      RowBox[{
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "**", "A"}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "**", "B"}], "-", 
      RowBox[{
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["A", "T"], "+", 
         SuperscriptBox["B", "T"]}], "]"}]}], "-", 
      RowBox[{
       SuperscriptBox["B", "T"], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["A", "T"], "+", 
         SuperscriptBox["B", "T"]}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{"A", "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "+", "B"}], "]"}]}]}], "-", 
      RowBox[{"B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["A", "T"], "+", 
         SuperscriptBox["B", "T"]}], "]"}], "**", 
       SuperscriptBox["A", "T"]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["A", "T"], "+", 
         SuperscriptBox["B", "T"]}], "]"}], "**", 
       SuperscriptBox["B", "T"]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        SuperscriptBox["A", "T"], "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["A", "T"], "]"}]}]}], "+", 
      RowBox[{
       SuperscriptBox["A", "T"], "**", "A", "**", 
       RowBox[{"Pinv", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         SuperscriptBox["A", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}]}], "+", 
      RowBox[{"A", "**", 
       RowBox[{"Pinv", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", "A", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{"A", "**", 
        SuperscriptBox["A", "T"]}]}], "+", 
      RowBox[{"A", "**", 
       SuperscriptBox["A", "T"], "**", "A", "**", 
       RowBox[{"Pinv", "[", "A", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        SuperscriptBox["B", "T"], "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["B", "T"], "]"}]}]}], "+", 
      RowBox[{
       SuperscriptBox["B", "T"], "**", "B", "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "+", "B"}], "]"}], "**", "A"}]}], "+", 
      RowBox[{
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["A", "T"], "+", 
         SuperscriptBox["B", "T"]}], "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["B", "T"], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["A", "T"], "+", 
         SuperscriptBox["B", "T"]}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "**", "A", "**", 
       SuperscriptBox["B", "T"], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}]}], "-", 
      RowBox[{
       SuperscriptBox["A", "T"], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}]}], "-", 
      RowBox[{
       SuperscriptBox["A", "T"], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["A", "T"], "+", 
         SuperscriptBox["B", "T"]}], "]"}], "**", 
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}]}], "-", 
      RowBox[{
       SuperscriptBox["B", "T"], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}]}], "-", 
      RowBox[{
       SuperscriptBox["B", "T"], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["B", "T"], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["A", "T"], "+", 
         SuperscriptBox["B", "T"]}], "]"}], "**", 
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         SuperscriptBox["B", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", "B", "]"}]}]}], "+", 
      RowBox[{"B", "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["A", "T"], "+", 
         SuperscriptBox["B", "T"]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}], "-", 
      RowBox[{"A", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}], "-", 
      RowBox[{"B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["A", "T"], "+", 
         SuperscriptBox["B", "T"]}], "]"}], "**", 
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{"B", "**", 
        SuperscriptBox["B", "T"]}]}], "+", 
      RowBox[{"B", "**", 
       SuperscriptBox["B", "T"], "**", "B", "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", "B", "]"}], "**", "A"}]}], "-", 
      RowBox[{
       SuperscriptBox["B", "T"], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", "B", "]"}], "**", "A", "**", 
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["A", "T"], "+", 
         SuperscriptBox["B", "T"]}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", "B", "]"}], "**", "A", "**", 
       SuperscriptBox["B", "T"], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["A", "T"], "+", 
         SuperscriptBox["B", "T"]}], "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["B", "T"], "**", "B", "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["A", "T"], "+", 
         SuperscriptBox["B", "T"]}], "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["B", "T"], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}], "**", 
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["A", "T"], "+", 
         SuperscriptBox["B", "T"]}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        SuperscriptBox["A", "T"], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          SuperscriptBox["A", "T"], "+", 
          SuperscriptBox["B", "T"]}], "]"}]}]}], "-", 
      RowBox[{
       SuperscriptBox["B", "T"], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["A", "T"], "+", 
         SuperscriptBox["B", "T"]}], "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["A", "T"], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["A", "T"], "+", 
         SuperscriptBox["B", "T"]}], "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["A", "T"], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["A", "T"], "+", 
         SuperscriptBox["B", "T"]}], "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["B", "T"], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["A", "T"], "+", 
         SuperscriptBox["B", "T"]}], "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["B", "T"], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["A", "T"], "+", 
         SuperscriptBox["B", "T"]}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         SuperscriptBox["B", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "+", "B"}], "]"}]}]}], "+", 
      RowBox[{"B", "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["A", "T"], "+", 
         SuperscriptBox["B", "T"]}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}], "**", 
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["A", "T"], "+", 
         SuperscriptBox["B", "T"]}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{
          SuperscriptBox["A", "T"], "+", 
          SuperscriptBox["B", "T"]}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "+", "B"}], "]"}]}]}], "+", 
      RowBox[{"A", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["A", "T"], "+", 
         SuperscriptBox["B", "T"]}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}]}], "+", 
      RowBox[{"B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["A", "T"], "+", 
         SuperscriptBox["B", "T"]}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{"A", "**", 
        SuperscriptBox["A", "T"]}]}], "-", 
      RowBox[{"A", "**", 
       SuperscriptBox["B", "T"]}], "-", 
      RowBox[{"B", "**", 
       SuperscriptBox["A", "T"]}], "-", 
      RowBox[{"B", "**", 
       SuperscriptBox["B", "T"]}], "+", 
      RowBox[{"A", "**", 
       SuperscriptBox["A", "T"], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}]}], "+", 
      RowBox[{"A", "**", 
       SuperscriptBox["A", "T"], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}]}], "+", 
      RowBox[{"A", "**", 
       SuperscriptBox["B", "T"], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}]}], "+", 
      RowBox[{"A", "**", 
       SuperscriptBox["B", "T"], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}]}], "+", 
      RowBox[{"B", "**", 
       SuperscriptBox["A", "T"], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}]}], "+", 
      RowBox[{"B", "**", 
       SuperscriptBox["A", "T"], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}]}], "+", 
      RowBox[{"B", "**", 
       SuperscriptBox["B", "T"], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}]}], "+", 
      RowBox[{"B", "**", 
       SuperscriptBox["B", "T"], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{"A", "**", 
        RowBox[{"Pinv", "[", "B", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["B", "T"], "]"}]}]}], "+", 
      RowBox[{"A", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}]}], "-", 
      RowBox[{"B", "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}]}], "+", 
      RowBox[{"B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}]}], "-", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["A", "T"], "+", 
         SuperscriptBox["B", "T"]}], "]"}], "**", 
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}]}], "+", 
      RowBox[{"A", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}]}], "+", 
      RowBox[{"B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["A", "T"], "+", 
         SuperscriptBox["B", "T"]}], "]"}], "**", 
       SuperscriptBox["A", "T"], "**", "B", "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "+", "B"}], "]"}], "**", "A", "**", 
        SuperscriptBox["B", "T"]}]}], "-", 
      RowBox[{
       SuperscriptBox["A", "T"], "**", "A", "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["A", "T"], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}]}], "-", 
      RowBox[{
       SuperscriptBox["A", "T"], "**", "B", "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["A", "T"], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}]}], "-", 
      RowBox[{
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["A", "T"], "+", 
         SuperscriptBox["B", "T"]}], "]"}], "**", 
       SuperscriptBox["A", "T"]}], "-", 
      RowBox[{
       SuperscriptBox["B", "T"], "**", "A", "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["B", "T"], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}]}], "-", 
      RowBox[{
       SuperscriptBox["B", "T"], "**", "B", "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["B", "T"], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}]}], "-", 
      RowBox[{
       SuperscriptBox["B", "T"], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["A", "T"], "+", 
         SuperscriptBox["B", "T"]}], "]"}], "**", 
       SuperscriptBox["A", "T"]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "**", "A", "**", 
       SuperscriptBox["B", "T"], "**", "B", "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["A", "T"], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["A", "T"], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["A", "T"], "+", 
         SuperscriptBox["B", "T"]}], "]"}], "**", 
       SuperscriptBox["A", "T"], "**", "B", "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["B", "T"], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["B", "T"], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["B", "T"], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["A", "T"], "+", 
         SuperscriptBox["B", "T"]}], "]"}], "**", 
       SuperscriptBox["A", "T"], "**", "B", "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{"B", "**", 
        RowBox[{"Pinv", "[", "B", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          SuperscriptBox["A", "T"], "+", 
          SuperscriptBox["B", "T"]}], "]"}]}]}], "+", 
      RowBox[{"B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["A", "T"], "+", 
         SuperscriptBox["B", "T"]}], "]"}]}], "-", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}], "**", 
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["A", "T"], "+", 
         SuperscriptBox["B", "T"]}], "]"}]}], "+", 
      RowBox[{"B", "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["A", "T"], "+", 
         SuperscriptBox["B", "T"]}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}], "**", 
       SuperscriptBox["A", "T"], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["A", "T"], "+", 
         SuperscriptBox["B", "T"]}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}], "**", 
       SuperscriptBox["A", "T"], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["A", "T"], "+", 
         SuperscriptBox["B", "T"]}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", "B", "]"}], "**", "A", "**", 
        SuperscriptBox["A", "T"]}]}], "-", 
      RowBox[{
       RowBox[{"Pinv", "[", "B", "]"}], "**", "A", "**", 
       SuperscriptBox["B", "T"]}], "-", 
      RowBox[{
       SuperscriptBox["B", "T"], "**", "B", "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["B", "T"], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}]}], "-", 
      RowBox[{
       SuperscriptBox["B", "T"], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}], "**", 
       SuperscriptBox["A", "T"]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", "B", "]"}], "**", "A", "**", 
       SuperscriptBox["A", "T"], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", "B", "]"}], "**", "A", "**", 
       SuperscriptBox["A", "T"], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", "B", "]"}], "**", "A", "**", 
       SuperscriptBox["B", "T"], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", "B", "]"}], "**", "A", "**", 
       SuperscriptBox["B", "T"], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["B", "T"], "**", "B", "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["B", "T"], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}], "**", 
       SuperscriptBox["A", "T"], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["B", "T"], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}], "**", 
       SuperscriptBox["A", "T"], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}], "-", 
      RowBox[{
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["A", "T"], "+", 
         SuperscriptBox["B", "T"]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}], "-", 
      RowBox[{
       SuperscriptBox["B", "T"], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["A", "T"], "+", 
         SuperscriptBox["B", "T"]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", "B", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          SuperscriptBox["A", "T"], "+", 
          SuperscriptBox["B", "T"]}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "+", "B"}], "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", "B", "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["A", "T"], "+", 
         SuperscriptBox["B", "T"]}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["B", "T"], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["A", "T"], "+", 
         SuperscriptBox["B", "T"]}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "+", "B"}], "]"}]}]}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  ColumnForm[{-$CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]] + 
    NonCommutativeMultiply`tp[
      $CellContext`Pinv[$CellContext`A]], -$CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]] + 
    NonCommutativeMultiply`tp[
      $CellContext`Pinv[$CellContext`B]], -$CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]] + 
    NonCommutativeMultiply`tp[
      $CellContext`Pinv[$CellContext`A + $CellContext`B]], -$CellContext`A + 
    NonCommutativeMultiply[$CellContext`A, 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]]], NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], 
      $CellContext`Pinv[$CellContext`A]] - $CellContext`Pinv[$CellContext`A], 
    NonCommutativeMultiply[
      $CellContext`Pinv[$CellContext`A], $CellContext`A] - 
    NonCommutativeMultiply[
     NonCommutativeMultiply`tp[$CellContext`A], 
     $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A]]], -
     NonCommutativeMultiply[$CellContext`A, 
       $CellContext`Pinv[$CellContext`A]] + NonCommutativeMultiply[
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], 
      NonCommutativeMultiply`tp[$CellContext`A]], -$CellContext`B + 
    NonCommutativeMultiply[$CellContext`B, 
      NonCommutativeMultiply`tp[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]]], NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`B]] - $CellContext`Pinv[$CellContext`B], 
    NonCommutativeMultiply[
      $CellContext`Pinv[$CellContext`B], $CellContext`B] - 
    NonCommutativeMultiply[
     NonCommutativeMultiply`tp[$CellContext`B], 
     $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`B]]], -
     NonCommutativeMultiply[$CellContext`B, 
       $CellContext`Pinv[$CellContext`B]] + NonCommutativeMultiply[
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      NonCommutativeMultiply`tp[$CellContext`B]], -$CellContext`A - \
$CellContext`B + NonCommutativeMultiply[$CellContext`A, 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]]] + 
    NonCommutativeMultiply[$CellContext`A, 
      NonCommutativeMultiply`tp[$CellContext`B], 
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]]] + 
    NonCommutativeMultiply[$CellContext`B, 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]]] + 
    NonCommutativeMultiply[$CellContext`B, 
      NonCommutativeMultiply`tp[$CellContext`B], 
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]]], NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`A + $CellContext`B]] + 
    NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`B], 
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`A + $CellContext`B]] - \
$CellContext`Pinv[$CellContext`A + $CellContext`B], NonCommutativeMultiply[
      $CellContext`Pinv[$CellContext`A + $CellContext`B], $CellContext`A] + 
    NonCommutativeMultiply[
      $CellContext`Pinv[$CellContext`A + $CellContext`B], $CellContext`B] - 
    NonCommutativeMultiply[
     NonCommutativeMultiply`tp[$CellContext`A], 
     $CellContext`Pinv[
     NonCommutativeMultiply`tp[$CellContext`A] + 
      NonCommutativeMultiply`tp[$CellContext`B]]] - NonCommutativeMultiply[
     NonCommutativeMultiply`tp[$CellContext`B], 
     $CellContext`Pinv[
     NonCommutativeMultiply`tp[$CellContext`A] + 
      NonCommutativeMultiply`tp[$CellContext`B]]], -
     NonCommutativeMultiply[$CellContext`A, 
       $CellContext`Pinv[$CellContext`A + $CellContext`B]] - 
    NonCommutativeMultiply[$CellContext`B, 
     $CellContext`Pinv[$CellContext`A + $CellContext`B]] + 
    NonCommutativeMultiply[
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]], 
      NonCommutativeMultiply`tp[$CellContext`A]] + NonCommutativeMultiply[
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]], 
      NonCommutativeMultiply`tp[$CellContext`B]], -NonCommutativeMultiply[
       NonCommutativeMultiply`tp[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`A], $CellContext`A, 
      $CellContext`Pinv[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]]], -NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]], 
       $CellContext`Pinv[$CellContext`A]] + 
    NonCommutativeMultiply[$CellContext`A, 
      $CellContext`Pinv[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], 
      $CellContext`Pinv[$CellContext`A]], -
     NonCommutativeMultiply[$CellContext`A, 
       NonCommutativeMultiply`tp[$CellContext`A]] + 
    NonCommutativeMultiply[$CellContext`A, 
      NonCommutativeMultiply`tp[$CellContext`A], $CellContext`A, 
      $CellContext`Pinv[$CellContext`A]], -NonCommutativeMultiply[
       NonCommutativeMultiply`tp[$CellContext`B], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`B], $CellContext`B, 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]]], -NonCommutativeMultiply[
       $CellContext`Pinv[$CellContext`A + $CellContext`B], $CellContext`A] + 
    NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`B], 
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]]] + NonCommutativeMultiply[
      $CellContext`Pinv[$CellContext`A + $CellContext`B], $CellContext`A, 
      NonCommutativeMultiply`tp[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]]] - NonCommutativeMultiply[
     NonCommutativeMultiply`tp[$CellContext`A], $CellContext`A, 
     $CellContext`Pinv[$CellContext`A + $CellContext`B], 
     $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`B]]] - NonCommutativeMultiply[
     NonCommutativeMultiply`tp[$CellContext`A], $CellContext`B, 
     $CellContext`Pinv[$CellContext`A + $CellContext`B], 
     $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`B]]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]]] - NonCommutativeMultiply[
     NonCommutativeMultiply`tp[$CellContext`B], $CellContext`A, 
     $CellContext`Pinv[$CellContext`A + $CellContext`B], 
     $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`B]]] - NonCommutativeMultiply[
     NonCommutativeMultiply`tp[$CellContext`B], $CellContext`B, 
     $CellContext`Pinv[$CellContext`A + $CellContext`B], 
     $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`B]]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`B], 
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]]], -NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[$CellContext`B]] + 
    NonCommutativeMultiply[$CellContext`B, 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`B]], NonCommutativeMultiply[
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`B]] - 
    NonCommutativeMultiply[$CellContext`A, 
     $CellContext`Pinv[$CellContext`A + $CellContext`B], 
     $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`B]], 
     $CellContext`Pinv[$CellContext`B]] - 
    NonCommutativeMultiply[$CellContext`B, 
     $CellContext`Pinv[$CellContext`A + $CellContext`B], 
     $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`B]], 
     $CellContext`Pinv[$CellContext`B]] + NonCommutativeMultiply[
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`B]], -
     NonCommutativeMultiply[$CellContext`B, 
       NonCommutativeMultiply`tp[$CellContext`B]] + 
    NonCommutativeMultiply[$CellContext`B, 
      NonCommutativeMultiply`tp[$CellContext`B], $CellContext`B, 
      $CellContext`Pinv[$CellContext`B]], -NonCommutativeMultiply[
       $CellContext`Pinv[$CellContext`B], $CellContext`A] - 
    NonCommutativeMultiply[
     NonCommutativeMultiply`tp[$CellContext`B], 
     $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`B]]] + NonCommutativeMultiply[
      $CellContext`Pinv[$CellContext`B], $CellContext`A, 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]]] + NonCommutativeMultiply[
      $CellContext`Pinv[$CellContext`B], $CellContext`A, 
      NonCommutativeMultiply`tp[$CellContext`B], 
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`B], $CellContext`B, 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]]], -NonCommutativeMultiply[
       NonCommutativeMultiply`tp[$CellContext`A], 
       $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A] + 
        NonCommutativeMultiply`tp[$CellContext`B]]] - NonCommutativeMultiply[
     NonCommutativeMultiply`tp[$CellContext`B], 
     $CellContext`Pinv[
     NonCommutativeMultiply`tp[$CellContext`A] + 
      NonCommutativeMultiply`tp[$CellContext`B]]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`A], $CellContext`A, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B], 
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`A], $CellContext`B, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B], 
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`B], $CellContext`A, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B], 
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`B], $CellContext`B, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B], 
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]]], -NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[$CellContext`A + $CellContext`B]] + 
    NonCommutativeMultiply[$CellContext`B, 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`A + $CellContext`B]] + 
    NonCommutativeMultiply[
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`A + $CellContext`B]], -
     NonCommutativeMultiply[
       $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A] + 
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[$CellContext`A + $CellContext`B]] + 
    NonCommutativeMultiply[$CellContext`A, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B], 
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`A + $CellContext`B]] + 
    NonCommutativeMultiply[$CellContext`B, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B], 
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`A + $CellContext`B]], -
     NonCommutativeMultiply[$CellContext`A, 
       NonCommutativeMultiply`tp[$CellContext`A]] - 
    NonCommutativeMultiply[$CellContext`A, 
     NonCommutativeMultiply`tp[$CellContext`B]] - 
    NonCommutativeMultiply[$CellContext`B, 
     NonCommutativeMultiply`tp[$CellContext`A]] - 
    NonCommutativeMultiply[$CellContext`B, 
     NonCommutativeMultiply`tp[$CellContext`B]] + 
    NonCommutativeMultiply[$CellContext`A, 
      NonCommutativeMultiply`tp[$CellContext`A], $CellContext`A, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B]] + 
    NonCommutativeMultiply[$CellContext`A, 
      NonCommutativeMultiply`tp[$CellContext`A], $CellContext`B, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B]] + 
    NonCommutativeMultiply[$CellContext`A, 
      NonCommutativeMultiply`tp[$CellContext`B], $CellContext`A, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B]] + 
    NonCommutativeMultiply[$CellContext`A, 
      NonCommutativeMultiply`tp[$CellContext`B], $CellContext`B, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B]] + 
    NonCommutativeMultiply[$CellContext`B, 
      NonCommutativeMultiply`tp[$CellContext`A], $CellContext`A, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B]] + 
    NonCommutativeMultiply[$CellContext`B, 
      NonCommutativeMultiply`tp[$CellContext`A], $CellContext`B, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B]] + 
    NonCommutativeMultiply[$CellContext`B, 
      NonCommutativeMultiply`tp[$CellContext`B], $CellContext`A, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B]] + 
    NonCommutativeMultiply[$CellContext`B, 
      NonCommutativeMultiply`tp[$CellContext`B], $CellContext`B, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B]], -
     NonCommutativeMultiply[$CellContext`A, 
       $CellContext`Pinv[$CellContext`B], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]]] + 
    NonCommutativeMultiply[$CellContext`A, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]]] - 
    NonCommutativeMultiply[$CellContext`B, 
     $CellContext`Pinv[$CellContext`B], 
     $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`B]]] + 
    NonCommutativeMultiply[$CellContext`B, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]]] - NonCommutativeMultiply[
     $CellContext`Pinv[
     NonCommutativeMultiply`tp[$CellContext`A] + 
      NonCommutativeMultiply`tp[$CellContext`B]], 
     NonCommutativeMultiply`tp[$CellContext`A], 
     $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`B]]] + 
    NonCommutativeMultiply[$CellContext`A, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B], $CellContext`A, 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]]] + 
    NonCommutativeMultiply[$CellContext`B, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B], $CellContext`A, 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]]] + NonCommutativeMultiply[
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]], 
      NonCommutativeMultiply`tp[$CellContext`A], $CellContext`B, 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]]], -NonCommutativeMultiply[
       $CellContext`Pinv[$CellContext`A + $CellContext`B], $CellContext`A, 
       NonCommutativeMultiply`tp[$CellContext`B]] - NonCommutativeMultiply[
     NonCommutativeMultiply`tp[$CellContext`A], $CellContext`A, 
     $CellContext`Pinv[$CellContext`B]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`A], $CellContext`A, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B]] - 
    NonCommutativeMultiply[
     NonCommutativeMultiply`tp[$CellContext`A], $CellContext`B, 
     $CellContext`Pinv[$CellContext`B]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`A], $CellContext`B, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B]] - 
    NonCommutativeMultiply[
     NonCommutativeMultiply`tp[$CellContext`A], 
     $CellContext`Pinv[
     NonCommutativeMultiply`tp[$CellContext`A] + 
      NonCommutativeMultiply`tp[$CellContext`B]], 
     NonCommutativeMultiply`tp[$CellContext`A]] - NonCommutativeMultiply[
     NonCommutativeMultiply`tp[$CellContext`B], $CellContext`A, 
     $CellContext`Pinv[$CellContext`B]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`B], $CellContext`A, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B]] - 
    NonCommutativeMultiply[
     NonCommutativeMultiply`tp[$CellContext`B], $CellContext`B, 
     $CellContext`Pinv[$CellContext`B]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`B], $CellContext`B, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B]] - 
    NonCommutativeMultiply[
     NonCommutativeMultiply`tp[$CellContext`B], 
     $CellContext`Pinv[
     NonCommutativeMultiply`tp[$CellContext`A] + 
      NonCommutativeMultiply`tp[$CellContext`B]], 
     NonCommutativeMultiply`tp[$CellContext`A]] + NonCommutativeMultiply[
      $CellContext`Pinv[$CellContext`A + $CellContext`B], $CellContext`A, 
      NonCommutativeMultiply`tp[$CellContext`B], $CellContext`B, 
      $CellContext`Pinv[$CellContext`B]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`A], $CellContext`A, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B], $CellContext`A, 
      $CellContext`Pinv[$CellContext`B]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`A], $CellContext`B, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B], $CellContext`A, 
      $CellContext`Pinv[$CellContext`B]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]], 
      NonCommutativeMultiply`tp[$CellContext`A], $CellContext`B, 
      $CellContext`Pinv[$CellContext`B]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`B], $CellContext`A, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B], $CellContext`A, 
      $CellContext`Pinv[$CellContext`B]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`B], $CellContext`B, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B], $CellContext`A, 
      $CellContext`Pinv[$CellContext`B]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`B], 
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]], 
      NonCommutativeMultiply`tp[$CellContext`A], $CellContext`B, 
      $CellContext`Pinv[$CellContext`B]], -
     NonCommutativeMultiply[$CellContext`B, 
       $CellContext`Pinv[$CellContext`B], 
       $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A] + 
        NonCommutativeMultiply`tp[$CellContext`B]]] + 
    NonCommutativeMultiply[$CellContext`B, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B], 
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]]] - NonCommutativeMultiply[
     $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`B]], 
     NonCommutativeMultiply`tp[$CellContext`A], 
     $CellContext`Pinv[
     NonCommutativeMultiply`tp[$CellContext`A] + 
      NonCommutativeMultiply`tp[$CellContext`B]]] + 
    NonCommutativeMultiply[$CellContext`B, 
      $CellContext`Pinv[$CellContext`B], $CellContext`A, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B], 
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]]] + NonCommutativeMultiply[
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      NonCommutativeMultiply`tp[$CellContext`A], $CellContext`A, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B], 
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]]] + NonCommutativeMultiply[
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      NonCommutativeMultiply`tp[$CellContext`A], $CellContext`B, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B], 
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]]], -NonCommutativeMultiply[
       $CellContext`Pinv[$CellContext`B], $CellContext`A, 
       NonCommutativeMultiply`tp[$CellContext`A]] - NonCommutativeMultiply[
     $CellContext`Pinv[$CellContext`B], $CellContext`A, 
     NonCommutativeMultiply`tp[$CellContext`B]] - NonCommutativeMultiply[
     NonCommutativeMultiply`tp[$CellContext`B], $CellContext`B, 
     $CellContext`Pinv[$CellContext`B]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`B], $CellContext`B, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B]] - 
    NonCommutativeMultiply[
     NonCommutativeMultiply`tp[$CellContext`B], 
     $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`B]], 
     NonCommutativeMultiply`tp[$CellContext`A]] + NonCommutativeMultiply[
      $CellContext`Pinv[$CellContext`B], $CellContext`A, 
      NonCommutativeMultiply`tp[$CellContext`A], $CellContext`A, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B]] + 
    NonCommutativeMultiply[
      $CellContext`Pinv[$CellContext`B], $CellContext`A, 
      NonCommutativeMultiply`tp[$CellContext`A], $CellContext`B, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B]] + 
    NonCommutativeMultiply[
      $CellContext`Pinv[$CellContext`B], $CellContext`A, 
      NonCommutativeMultiply`tp[$CellContext`B], $CellContext`A, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B]] + 
    NonCommutativeMultiply[
      $CellContext`Pinv[$CellContext`B], $CellContext`A, 
      NonCommutativeMultiply`tp[$CellContext`B], $CellContext`B, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B]] + 
    NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`B], $CellContext`B, 
      $CellContext`Pinv[$CellContext`B], $CellContext`A, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B]] + 
    NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      NonCommutativeMultiply`tp[$CellContext`A], $CellContext`A, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B]] + 
    NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      NonCommutativeMultiply`tp[$CellContext`A], $CellContext`B, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B]], 
    NonCommutativeMultiply[
      $CellContext`Pinv[$CellContext`A + $CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`B]] + NonCommutativeMultiply[
      $CellContext`Pinv[$CellContext`A + $CellContext`B], $CellContext`A, 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`B]] - NonCommutativeMultiply[
     NonCommutativeMultiply`tp[$CellContext`A], 
     $CellContext`Pinv[
     NonCommutativeMultiply`tp[$CellContext`A] + 
      NonCommutativeMultiply`tp[$CellContext`B]], 
     $CellContext`Pinv[$CellContext`B], 
     $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`B]], 
     $CellContext`Pinv[$CellContext`B]] - NonCommutativeMultiply[
     NonCommutativeMultiply`tp[$CellContext`B], 
     $CellContext`Pinv[
     NonCommutativeMultiply`tp[$CellContext`A] + 
      NonCommutativeMultiply`tp[$CellContext`B]], 
     $CellContext`Pinv[$CellContext`B], 
     $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`B]], 
     $CellContext`Pinv[$CellContext`B]], -NonCommutativeMultiply[
       $CellContext`Pinv[$CellContext`B], 
       $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A] + 
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[$CellContext`A + $CellContext`B]] + 
    NonCommutativeMultiply[
      $CellContext`Pinv[$CellContext`B], $CellContext`A, 
      $CellContext`Pinv[$CellContext`A + $CellContext`B], 
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`A + $CellContext`B]] + 
    NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`A + $CellContext`B], 
      $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A] + 
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`A + $CellContext`B]]}],
  Editable->False]], "Output",
 CellChangeTimes->{3.455304227666498*^9, 3.455305672072103*^9, 
  3.5166278159569063`*^9, 
  3.7057738621709843`*^9},ExpressionUUID->"1f4301a3-e293-4f69-a124-\
e831a8e54a46"],

Cell[BoxData["\<\"Finite Basis.\"\>"], "Print",
 CellChangeTimes->{3.455304227694191*^9, 3.455305672110758*^9, 
  3.516627815969965*^9, 
  3.70577386217487*^9},ExpressionUUID->"b8157f9e-b294-40d5-b89a-7c31cb3d86ce"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pseudoinverse A ** B", "Section",
 CellChangeTimes->{{3.455305699595438*^9, 
  3.4553057117748117`*^9}},ExpressionUUID->"46b6d365-4ebf-4bc8-964f-\
c2ed6b8e3855"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"relations", " ", "=", " ", 
    RowBox[{
     RowBox[{"NCMakeRelations", "[", 
      RowBox[{"{", 
       RowBox[{"Pinv", ",", "A", ",", "B", ",", 
        RowBox[{"A", "**", "B"}]}], "}"}], "]"}], " ", "//.", " ", 
     RowBox[{"Tp", " ", "\[Rule]", " ", "tp"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearMonomialOrderAll", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetMonomialOrder", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"A", ",", "B", ",", 
      RowBox[{"tp", "[", "A", "]"}], ",", 
      RowBox[{"tp", "[", "B", "]"}], ",", 
      RowBox[{"Pinv", "[", "A", "]"}], ",", 
      RowBox[{"Pinv", "[", "B", "]"}], ",", 
      RowBox[{"Pinv", "[", 
       RowBox[{"tp", "[", "A", "]"}], "]"}], ",", 
      RowBox[{"Pinv", "[", 
       RowBox[{"tp", "[", "B", "]"}], "]"}], ",", 
      RowBox[{"tp", "[", 
       RowBox[{"Pinv", "[", "A", "]"}], "]"}], ",", 
      RowBox[{"tp", "[", 
       RowBox[{"Pinv", "[", "B", "]"}], "]"}]}], " ", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Pinv", "[", 
       RowBox[{"A", "**", "B"}], "]"}], ",", 
      RowBox[{"Pinv", "[", 
       RowBox[{"tp", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "]"}], ",", 
      RowBox[{"tp", "[", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "]"}]}], " ", "}"}]}], " ", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PrintMonomialOrder", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.4553056764775352`*^9, 
  3.455305683260866*^9}},ExpressionUUID->"e44058a7-9b21-4877-8cb9-\
a5784d9d6ea5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"NCProcess", "[", " ", 
   RowBox[{
   "relations", ",", " ", "3", ",", " ", "0", ",", " ", "0", ",", " ", "0", 
    ",", " ", "\"\<PinvAB-3iters\>\"", ",", " ", 
    RowBox[{"SBByCat", " ", "\[Rule]", "False"}], ",", " ", 
    RowBox[{"RR", "\[Rule]", " ", "False"}], ",", " ", 
    RowBox[{"NCCV", " ", "\[Rule]", " ", "False"}]}], " ", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NCProcess", "[", " ", 
   RowBox[{
   "relations", ",", " ", "4", ",", " ", "0", ",", " ", "0", ",", " ", "0", 
    ",", " ", "\"\<PinvAB-4iters\>\"", ",", " ", 
    RowBox[{"SBByCat", " ", "\[Rule]", "False"}], ",", " ", 
    RowBox[{"RR", "\[Rule]", " ", "False"}], ",", " ", 
    RowBox[{"NCCV", " ", "\[Rule]", " ", "False"}]}], " ", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NCProcess", "[", " ", 
   RowBox[{
   "relations", ",", " ", "5", ",", " ", "0", ",", " ", "0", ",", " ", "0", 
    ",", " ", "\"\<PinvAB-5iters\>\"", ",", " ", 
    RowBox[{"SBByCat", " ", "\[Rule]", "False"}], ",", " ", 
    RowBox[{"RR", "\[Rule]", " ", "False"}], ",", " ", 
    RowBox[{"NCCV", " ", "\[Rule]", " ", "False"}]}], " ", "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.455305723106394*^9, 
  3.455305725579735*^9}},ExpressionUUID->"04d12a5b-2636-4f39-bdc0-\
536f73c4638a"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Outputting results to the stream \"\>", "\[InvisibleSpace]", 
   InterpretationBox[
    StyleBox[
     RowBox[{"OutputStream", "[", 
      RowBox[{"\"\<PinvAB-3iters.tex\>\"", ",", " ", "3"}], "]"}],
     ShowStringCharacters->True,
     NumberMarks->True],
    Format[
     OutputStream["PinvAB-3iters.tex", 3], InputForm],
    AutoDelete->True,
    Editable->True]}],
  SequenceForm["Outputting results to the stream ", 
   Format[
    OutputStream["PinvAB-3iters.tex", 3], InputForm]],
  Editable->False]], "Print",
 CellChangeTimes->{3.455305784256219*^9, 3.516627817619151*^9, 
  3.705773862772011*^9},ExpressionUUID->"03879199-db53-4f92-a113-\
691f69fc8e74"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Done outputting results to the stream \"\>", 
   "\[InvisibleSpace]", 
   InterpretationBox[
    StyleBox[
     RowBox[{"OutputStream", "[", 
      RowBox[{"\"\<PinvAB-3iters.tex\>\"", ",", " ", "3"}], "]"}],
     ShowStringCharacters->True,
     NumberMarks->True],
    Format[
     OutputStream["PinvAB-3iters.tex", 3], InputForm],
    AutoDelete->True,
    Editable->True]}],
  SequenceForm["Done outputting results to the stream ", 
   Format[
    OutputStream["PinvAB-3iters.tex", 3], InputForm]],
  Editable->False]], "Print",
 CellChangeTimes->{3.455305784256219*^9, 3.516627817619151*^9, 
  3.705773863002029*^9},ExpressionUUID->"f1d8448d-f2c6-4f0f-af31-\
99a5ca2a0c03"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"> Running '\"\>", 
   "\[InvisibleSpace]", "\<\"pdflatex -output-directory=.  PinvAB-3iters.tex \
1> \\\"/tmp/mNCRun.out\\\" 2> \\\"/tmp/mNCRun.err\\\"\"\>", 
   "\[InvisibleSpace]", "\<\"'...\"\>"}],
  SequenceForm[
  "> Running '", 
   "pdflatex -output-directory=.  PinvAB-3iters.tex 1> \"/tmp/mNCRun.out\" 2> \
\"/tmp/mNCRun.err\"", "'..."],
  Editable->False]], "Print",
 CellChangeTimes->{3.455305784256219*^9, 3.516627817619151*^9, 
  3.705773863003488*^9},ExpressionUUID->"ab0ac2f1-1ad9-495f-b186-\
9f9a2410e27c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"> Running '\"\>", 
   "\[InvisibleSpace]", "\<\"acroread  PinvAB-3iters.pdf 1> \
\\\"/tmp/mNCRun.out\\\" 2> \\\"/tmp/mNCRun.err\\\"\"\>", 
   "\[InvisibleSpace]", "\<\"'...\"\>"}],
  SequenceForm[
  "> Running '", 
   "acroread  PinvAB-3iters.pdf 1> \"/tmp/mNCRun.out\" 2> \
\"/tmp/mNCRun.err\"", "'..."],
  Editable->False]], "Print",
 CellChangeTimes->{3.455305784256219*^9, 3.516627817619151*^9, 
  3.705773863151173*^9},ExpressionUUID->"e6058400-4c64-4266-a3b7-\
8b794d13176b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Note: Your TeX and Dvi files are located in the directory \
\"\>", "\[InvisibleSpace]", "\<\"/home/mauricio\"\>"}],
  SequenceForm[
  "Note: Your TeX and Dvi files are located in the directory ", 
   "/home/mauricio"],
  Editable->False]], "Print",
 CellChangeTimes->{3.455305784256219*^9, 3.516627817619151*^9, 
  3.705773878673814*^9},ExpressionUUID->"9b115e6c-425e-4180-ae6d-\
f0b591012c4a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Outputting results to the stream \"\>", "\[InvisibleSpace]", 
   InterpretationBox[
    StyleBox[
     RowBox[{"OutputStream", "[", 
      RowBox[{"\"\<PinvAB-4iters.tex\>\"", ",", " ", "3"}], "]"}],
     ShowStringCharacters->True,
     NumberMarks->True],
    Format[
     OutputStream["PinvAB-4iters.tex", 3], InputForm],
    AutoDelete->True,
    Editable->True]}],
  SequenceForm["Outputting results to the stream ", 
   Format[
    OutputStream["PinvAB-4iters.tex", 3], InputForm]],
  Editable->False]], "Print",
 CellChangeTimes->{3.455305784256219*^9, 3.516627817619151*^9, 
  3.705773879494635*^9},ExpressionUUID->"3db4563b-e835-4ee5-90fb-\
9e1f9ce3b271"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Done outputting results to the stream \"\>", 
   "\[InvisibleSpace]", 
   InterpretationBox[
    StyleBox[
     RowBox[{"OutputStream", "[", 
      RowBox[{"\"\<PinvAB-4iters.tex\>\"", ",", " ", "3"}], "]"}],
     ShowStringCharacters->True,
     NumberMarks->True],
    Format[
     OutputStream["PinvAB-4iters.tex", 3], InputForm],
    AutoDelete->True,
    Editable->True]}],
  SequenceForm["Done outputting results to the stream ", 
   Format[
    OutputStream["PinvAB-4iters.tex", 3], InputForm]],
  Editable->False]], "Print",
 CellChangeTimes->{3.455305784256219*^9, 3.516627817619151*^9, 
  3.705773879780918*^9},ExpressionUUID->"3ca2e5cb-d89e-4fa9-8dd6-\
f882498f8b80"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"> Running '\"\>", 
   "\[InvisibleSpace]", "\<\"pdflatex -output-directory=.  PinvAB-4iters.tex \
1> \\\"/tmp/mNCRun.out\\\" 2> \\\"/tmp/mNCRun.err\\\"\"\>", 
   "\[InvisibleSpace]", "\<\"'...\"\>"}],
  SequenceForm[
  "> Running '", 
   "pdflatex -output-directory=.  PinvAB-4iters.tex 1> \"/tmp/mNCRun.out\" 2> \
\"/tmp/mNCRun.err\"", "'..."],
  Editable->False]], "Print",
 CellChangeTimes->{3.455305784256219*^9, 3.516627817619151*^9, 
  3.7057738797822523`*^9},ExpressionUUID->"4a2f291d-73ea-4c00-982b-\
9e07fd4dd1e5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"> Running '\"\>", 
   "\[InvisibleSpace]", "\<\"acroread  PinvAB-4iters.pdf 1> \
\\\"/tmp/mNCRun.out\\\" 2> \\\"/tmp/mNCRun.err\\\"\"\>", 
   "\[InvisibleSpace]", "\<\"'...\"\>"}],
  SequenceForm[
  "> Running '", 
   "acroread  PinvAB-4iters.pdf 1> \"/tmp/mNCRun.out\" 2> \
\"/tmp/mNCRun.err\"", "'..."],
  Editable->False]], "Print",
 CellChangeTimes->{3.455305784256219*^9, 3.516627817619151*^9, 
  3.7057738799299183`*^9},ExpressionUUID->"51b951f9-72ea-47b3-a0f9-\
7e36fb1e7073"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Note: Your TeX and Dvi files are located in the directory \
\"\>", "\[InvisibleSpace]", "\<\"/home/mauricio\"\>"}],
  SequenceForm[
  "Note: Your TeX and Dvi files are located in the directory ", 
   "/home/mauricio"],
  Editable->False]], "Print",
 CellChangeTimes->{3.455305784256219*^9, 3.516627817619151*^9, 
  3.7057738913352118`*^9},ExpressionUUID->"6201cd4b-e539-4b5f-a80a-\
a4fdff0b554e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Outputting results to the stream \"\>", "\[InvisibleSpace]", 
   InterpretationBox[
    StyleBox[
     RowBox[{"OutputStream", "[", 
      RowBox[{"\"\<PinvAB-5iters.tex\>\"", ",", " ", "3"}], "]"}],
     ShowStringCharacters->True,
     NumberMarks->True],
    Format[
     OutputStream["PinvAB-5iters.tex", 3], InputForm],
    AutoDelete->True,
    Editable->True]}],
  SequenceForm["Outputting results to the stream ", 
   Format[
    OutputStream["PinvAB-5iters.tex", 3], InputForm]],
  Editable->False]], "Print",
 CellChangeTimes->{3.455305784256219*^9, 3.516627817619151*^9, 
  3.705773893031472*^9},ExpressionUUID->"84e07c09-1a20-4673-9b12-\
74910234f5af"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Done outputting results to the stream \"\>", 
   "\[InvisibleSpace]", 
   InterpretationBox[
    StyleBox[
     RowBox[{"OutputStream", "[", 
      RowBox[{"\"\<PinvAB-5iters.tex\>\"", ",", " ", "3"}], "]"}],
     ShowStringCharacters->True,
     NumberMarks->True],
    Format[
     OutputStream["PinvAB-5iters.tex", 3], InputForm],
    AutoDelete->True,
    Editable->True]}],
  SequenceForm["Done outputting results to the stream ", 
   Format[
    OutputStream["PinvAB-5iters.tex", 3], InputForm]],
  Editable->False]], "Print",
 CellChangeTimes->{3.455305784256219*^9, 3.516627817619151*^9, 
  3.705773893459387*^9},ExpressionUUID->"07ad8b1a-227f-4e2f-a347-\
16911c67831d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"> Running '\"\>", 
   "\[InvisibleSpace]", "\<\"pdflatex -output-directory=.  PinvAB-5iters.tex \
1> \\\"/tmp/mNCRun.out\\\" 2> \\\"/tmp/mNCRun.err\\\"\"\>", 
   "\[InvisibleSpace]", "\<\"'...\"\>"}],
  SequenceForm[
  "> Running '", 
   "pdflatex -output-directory=.  PinvAB-5iters.tex 1> \"/tmp/mNCRun.out\" 2> \
\"/tmp/mNCRun.err\"", "'..."],
  Editable->False]], "Print",
 CellChangeTimes->{3.455305784256219*^9, 3.516627817619151*^9, 
  3.7057738934607973`*^9},ExpressionUUID->"d7c89a9f-8ab3-45fa-a071-\
28617bbfcb32"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"> Running '\"\>", 
   "\[InvisibleSpace]", "\<\"acroread  PinvAB-5iters.pdf 1> \
\\\"/tmp/mNCRun.out\\\" 2> \\\"/tmp/mNCRun.err\\\"\"\>", 
   "\[InvisibleSpace]", "\<\"'...\"\>"}],
  SequenceForm[
  "> Running '", 
   "acroread  PinvAB-5iters.pdf 1> \"/tmp/mNCRun.out\" 2> \
\"/tmp/mNCRun.err\"", "'..."],
  Editable->False]], "Print",
 CellChangeTimes->{3.455305784256219*^9, 3.516627817619151*^9, 
  3.705773893622245*^9},ExpressionUUID->"6144176c-446f-4f4b-af54-\
3cc6f628038c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Note: Your TeX and Dvi files are located in the directory \
\"\>", "\[InvisibleSpace]", "\<\"/home/mauricio\"\>"}],
  SequenceForm[
  "Note: Your TeX and Dvi files are located in the directory ", 
   "/home/mauricio"],
  Editable->False]], "Print",
 CellChangeTimes->{3.455305784256219*^9, 3.516627817619151*^9, 
  3.705773901719163*^9},ExpressionUUID->"1156f88d-9e7c-47c1-aa6d-\
73ff8826a898"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"NCMakeGB", "[", " ", 
   RowBox[{"relations", ",", "5"}], " ", "]"}], "//", 
  "ColumnForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"FinishedComputingBasisQ", "[", "]"}], " ", "\[Equal]", " ", 
     "1"}], ",", " ", 
    RowBox[{"Print", "[", " ", "\"\<Finite Basis.\>\"", " ", "]"}], ",", " ", 
    
    RowBox[{"Print", "[", " ", "\"\<NOT Finite Basis.\>\"", " ", "]"}]}], " ",
    "]"}], ";"}]}], "Input",
 CellChangeTimes->{
  3.455305863043779*^9},ExpressionUUID->"ed9fb9ac-be27-43e0-a977-\
04c3fe4dbe34"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}]}], "+", 
      SuperscriptBox[
       RowBox[{"Pinv", "[", "A", "]"}], "T"]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}]}], "+", 
      SuperscriptBox[
       RowBox[{"Pinv", "[", "B", "]"}], "T"]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}]}], "+", 
      SuperscriptBox[
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "T"]}]},
    {
     RowBox[{
      RowBox[{"-", "A"}], "+", 
      RowBox[{"A", "**", 
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", "A", "]"}]}], "-", 
      RowBox[{"Pinv", "[", "A", "]"}]}]},
    {
     RowBox[{
      RowBox[{
       RowBox[{"Pinv", "[", "A", "]"}], "**", "A"}], "-", 
      RowBox[{
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{"A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}], "**", 
       SuperscriptBox["A", "T"]}]}]},
    {
     RowBox[{
      RowBox[{"-", "B"}], "+", 
      RowBox[{"B", "**", 
       SuperscriptBox["B", "T"], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["B", "T"], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}], "-", 
      RowBox[{"Pinv", "[", "B", "]"}]}]},
    {
     RowBox[{
      RowBox[{
       RowBox[{"Pinv", "[", "B", "]"}], "**", "B"}], "-", 
      RowBox[{
       SuperscriptBox["B", "T"], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{"B", "**", 
        RowBox[{"Pinv", "[", "B", "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}], "**", 
       SuperscriptBox["B", "T"]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{"A", "**", "B"}]}], "+", 
      RowBox[{"A", "**", "B", "**", 
       SuperscriptBox["B", "T"], "**", 
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox["B", "T"], "**", 
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}]}], "-", 
      RowBox[{"Pinv", "[", 
       RowBox[{"A", "**", "B"}], "]"}]}]},
    {
     RowBox[{
      RowBox[{
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", "B"}], "-", 
      RowBox[{
       SuperscriptBox["B", "T"], "**", 
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{"A", "**", "B", "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}], "**", 
       SuperscriptBox["B", "T"], "**", 
       SuperscriptBox["A", "T"]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        SuperscriptBox["A", "T"], "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["A", "T"], "]"}]}]}], "+", 
      RowBox[{
       SuperscriptBox["A", "T"], "**", "A", "**", 
       RowBox[{"Pinv", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         SuperscriptBox["A", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}]}], "+", 
      RowBox[{"A", "**", 
       RowBox[{"Pinv", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", "A", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{
          SuperscriptBox["B", "T"], "**", 
          SuperscriptBox["A", "T"]}], "]"}], "**", 
        SuperscriptBox["B", "T"], "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}]}], "+", 
      RowBox[{"A", "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", "A", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{"A", "**", 
        SuperscriptBox["A", "T"]}]}], "+", 
      RowBox[{"A", "**", 
       SuperscriptBox["A", "T"], "**", "A", "**", 
       RowBox[{"Pinv", "[", "A", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        SuperscriptBox["B", "T"], "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["B", "T"], "]"}]}]}], "+", 
      RowBox[{
       SuperscriptBox["B", "T"], "**", "B", "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        SuperscriptBox["B", "T"], "**", 
        SuperscriptBox["A", "T"], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          SuperscriptBox["B", "T"], "**", 
          SuperscriptBox["A", "T"]}], "]"}]}]}], "+", 
      RowBox[{
       SuperscriptBox["B", "T"], "**", 
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}], "**", 
       SuperscriptBox["B", "T"], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         SuperscriptBox["B", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", "B", "]"}]}]}], "+", 
      RowBox[{"B", "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{"B", "**", 
        SuperscriptBox["B", "T"]}]}], "+", 
      RowBox[{"B", "**", 
       SuperscriptBox["B", "T"], "**", "B", "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        SuperscriptBox["A", "T"], "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["A", "T"], "]"}], "**", "B"}]}], "+", 
      RowBox[{
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}], "**", "B", "**", 
       SuperscriptBox["B", "T"], "**", 
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        SuperscriptBox["B", "T"], "**", 
        SuperscriptBox["A", "T"], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          SuperscriptBox["B", "T"], "**", 
          SuperscriptBox["A", "T"]}], "]"}]}]}], "+", 
      RowBox[{
       SuperscriptBox["B", "T"], "**", 
       SuperscriptBox["A", "T"], "**", "A", "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{
          SuperscriptBox["B", "T"], "**", 
          SuperscriptBox["A", "T"]}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}]}]}], "+", 
      RowBox[{"A", "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{"A", "**", "B", "**", 
        SuperscriptBox["B", "T"], "**", 
        SuperscriptBox["A", "T"]}]}], "+", 
      RowBox[{"A", "**", "B", "**", 
       SuperscriptBox["B", "T"], "**", 
       SuperscriptBox["A", "T"], "**", "A", "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        SuperscriptBox["B", "T"], "**", 
        SuperscriptBox["A", "T"], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          SuperscriptBox["B", "T"], "**", 
          SuperscriptBox["A", "T"]}], "]"}], "**", 
        SuperscriptBox["B", "T"]}]}], "+", 
      RowBox[{
       SuperscriptBox["B", "T"], "**", 
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}], "**", 
       SuperscriptBox["B", "T"], "**", "B", "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        SuperscriptBox["A", "T"], "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["A", "T"], "]"}], "**", "B", "**", 
        SuperscriptBox["B", "T"], "**", 
        SuperscriptBox["A", "T"]}]}], "+", 
      RowBox[{
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}], "**", "B", "**", 
       SuperscriptBox["B", "T"], "**", 
       SuperscriptBox["A", "T"], "**", "A", "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          SuperscriptBox["B", "T"], "**", 
          SuperscriptBox["A", "T"]}], "]"}], "**", 
        SuperscriptBox["B", "T"], "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}]}], "+", 
      RowBox[{
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", "A", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["A", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}], "**", 
       SuperscriptBox["B", "T"], "**", 
       RowBox[{"Pinv", "[", "A", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["B", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", "B", "]"}]}]}], "+", 
      RowBox[{
       SuperscriptBox["B", "T"], "**", 
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", "B", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["B", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["B", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}]}]}], "+", 
      RowBox[{
       SuperscriptBox["B", "T"], "**", 
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          SuperscriptBox["B", "T"], "**", 
          SuperscriptBox["A", "T"]}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}]}]}], "+", 
      RowBox[{
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         SuperscriptBox["B", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}]}]}], "+", 
      RowBox[{"B", "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["A", "T"], "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", "B", "]"}], "**", 
        SuperscriptBox["A", "T"], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          SuperscriptBox["B", "T"], "**", 
          SuperscriptBox["A", "T"]}], "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       SuperscriptBox["A", "T"], "**", "A", "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{
          SuperscriptBox["B", "T"], "**", 
          SuperscriptBox["A", "T"]}], "]"}], "**", 
        SuperscriptBox["B", "T"], "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}]}], "+", 
      RowBox[{"A", "**", 
       RowBox[{"Pinv", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}], "**", 
       SuperscriptBox["B", "T"], "**", 
       RowBox[{"Pinv", "[", "A", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         SuperscriptBox["A", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          SuperscriptBox["B", "T"], "**", 
          SuperscriptBox["A", "T"]}], "]"}], "**", 
        SuperscriptBox["B", "T"], "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}]}], "+", 
      RowBox[{"A", "**", 
       RowBox[{"Pinv", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", "A", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{
          SuperscriptBox["B", "T"], "**", 
          SuperscriptBox["A", "T"]}], "]"}], "**", 
        SuperscriptBox["B", "T"], "**", 
        RowBox[{"Pinv", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          SuperscriptBox["B", "T"], "**", 
          SuperscriptBox["A", "T"]}], "]"}], "**", 
        SuperscriptBox["B", "T"], "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}]}], "+", 
      RowBox[{"A", "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", "A", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", "B", "]"}], "**", 
        SuperscriptBox["A", "T"], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          SuperscriptBox["B", "T"], "**", 
          SuperscriptBox["A", "T"]}], "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}], "**", 
       SuperscriptBox["B", "T"], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          SuperscriptBox["B", "T"], "**", 
          SuperscriptBox["A", "T"]}], "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}], "**", 
       SuperscriptBox["B", "T"], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         SuperscriptBox["B", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["B", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", "B", "]"}]}]}], "+", 
      RowBox[{"B", "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{"A", "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["B", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", "B", "]"}]}]}], "+", 
      RowBox[{"A", "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{
          SuperscriptBox["B", "T"], "**", 
          SuperscriptBox["A", "T"]}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["B", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", "B", "]"}]}]}], "+", 
      RowBox[{"A", "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        SuperscriptBox["A", "T"], "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["A", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["B", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", "B", "]"}]}]}], "+", 
      RowBox[{
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["A", "T"], "]"}], "**", "B"}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}], "**", "B", "**", 
       SuperscriptBox["B", "T"], "**", 
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["A", "T"], "]"}], "**", "B"}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}], "**", "B", "**", 
       SuperscriptBox["B", "T"], "**", 
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         SuperscriptBox["B", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["B", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}]}]}], "+", 
      RowBox[{"B", "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{"A", "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["B", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}]}]}], "+", 
      RowBox[{"A", "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{
          SuperscriptBox["B", "T"], "**", 
          SuperscriptBox["A", "T"]}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["B", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}]}]}], "+", 
      RowBox[{"A", "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        SuperscriptBox["A", "T"], "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["A", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["B", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}]}]}], "+", 
      RowBox[{
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{
          SuperscriptBox["B", "T"], "**", 
          SuperscriptBox["A", "T"]}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}]}]}], "+", 
      RowBox[{"A", "**", 
       RowBox[{"Pinv", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", "B", "]"}], "**", 
        SuperscriptBox["A", "T"], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          SuperscriptBox["B", "T"], "**", 
          SuperscriptBox["A", "T"]}], "]"}], "**", 
        SuperscriptBox["B", "T"]}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}], "**", 
       SuperscriptBox["B", "T"], "**", "B", "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          SuperscriptBox["B", "T"], "**", 
          SuperscriptBox["A", "T"]}], "]"}], "**", 
        SuperscriptBox["B", "T"]}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}], "**", 
       SuperscriptBox["B", "T"], "**", "B", "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["A", "T"], "]"}], "**", "B", "**", 
        SuperscriptBox["B", "T"], "**", 
        SuperscriptBox["A", "T"]}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}], "**", "B", "**", 
       SuperscriptBox["B", "T"], "**", 
       SuperscriptBox["A", "T"], "**", "A", "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["A", "T"], "]"}], "**", "B", "**", 
        SuperscriptBox["B", "T"], "**", 
        SuperscriptBox["A", "T"]}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}], "**", "B", "**", 
       SuperscriptBox["B", "T"], "**", 
       SuperscriptBox["A", "T"], "**", "A", "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["A", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["B", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", "B", "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["A", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["B", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", "B", "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["A", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["B", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["A", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["B", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["A", "T"], "]"}], "**", "B", "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["A", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}], "**", 
       SuperscriptBox["B", "T"], "**", 
       RowBox[{"Pinv", "[", "A", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["A", "T"], "]"}], "**", "B", "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["A", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}], "**", 
       SuperscriptBox["B", "T"], "**", 
       RowBox[{"Pinv", "[", "A", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          SuperscriptBox["B", "T"], "**", 
          SuperscriptBox["A", "T"]}], "]"}], "**", 
        SuperscriptBox["B", "T"], "**", 
        RowBox[{"Pinv", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          SuperscriptBox["B", "T"], "**", 
          SuperscriptBox["A", "T"]}], "]"}], "**", 
        SuperscriptBox["B", "T"], "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}]}], "+", 
      RowBox[{
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", "A", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}], "-", 
      RowBox[{
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["B", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["B", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", "B", "]"}]}]}], "+", 
      RowBox[{
       SuperscriptBox["B", "T"], "**", 
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          SuperscriptBox["B", "T"], "**", 
          SuperscriptBox["A", "T"]}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["B", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", "B", "]"}]}]}], "+", 
      RowBox[{
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          SuperscriptBox["B", "T"], "**", 
          SuperscriptBox["A", "T"]}], "]"}], "**", 
        RowBox[{"Pinv", "[", "B", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["B", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", "B", "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}]}], "-", 
      RowBox[{
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["B", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["B", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}]}]}], "+", 
      RowBox[{
       SuperscriptBox["B", "T"], "**", 
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          SuperscriptBox["B", "T"], "**", 
          SuperscriptBox["A", "T"]}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["B", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}]}]}], "+", 
      RowBox[{
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          SuperscriptBox["B", "T"], "**", 
          SuperscriptBox["A", "T"]}], "]"}], "**", 
        RowBox[{"Pinv", "[", "B", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["B", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["A", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          SuperscriptBox["B", "T"], "**", 
          SuperscriptBox["A", "T"]}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["A", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          SuperscriptBox["B", "T"], "**", 
          SuperscriptBox["A", "T"]}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         SuperscriptBox["A", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          SuperscriptBox["B", "T"], "**", 
          SuperscriptBox["A", "T"]}], "]"}], "**", 
        SuperscriptBox["B", "T"], "**", 
        RowBox[{"Pinv", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          SuperscriptBox["B", "T"], "**", 
          SuperscriptBox["A", "T"]}], "]"}], "**", 
        SuperscriptBox["B", "T"], "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}]}], "+", 
      RowBox[{"A", "**", 
       RowBox[{"Pinv", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", "A", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{
          SuperscriptBox["B", "T"], "**", 
          SuperscriptBox["A", "T"]}], "]"}], "**", 
        SuperscriptBox["B", "T"], "**", 
        RowBox[{"Pinv", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          SuperscriptBox["B", "T"], "**", 
          SuperscriptBox["A", "T"]}], "]"}], "**", 
        SuperscriptBox["B", "T"], "**", 
        RowBox[{"Pinv", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          SuperscriptBox["B", "T"], "**", 
          SuperscriptBox["A", "T"]}], "]"}], "**", 
        SuperscriptBox["B", "T"], "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}]}], "+", 
      RowBox[{"A", "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", "A", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          SuperscriptBox["B", "T"], "**", 
          SuperscriptBox["A", "T"]}], "]"}], "**", 
        SuperscriptBox["B", "T"], "**", 
        RowBox[{"Pinv", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          SuperscriptBox["B", "T"], "**", 
          SuperscriptBox["A", "T"]}], "]"}], "**", 
        SuperscriptBox["B", "T"], "**", 
        RowBox[{"Pinv", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          SuperscriptBox["B", "T"], "**", 
          SuperscriptBox["A", "T"]}], "]"}], "**", 
        SuperscriptBox["B", "T"], "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}]}], "+", 
      RowBox[{
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", "A", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         SuperscriptBox["B", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["B", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["B", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", "B", "]"}]}]}], "+", 
      RowBox[{"B", "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{
          SuperscriptBox["B", "T"], "**", 
          SuperscriptBox["A", "T"]}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["B", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["B", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", "B", "]"}]}]}], "+", 
      RowBox[{"A", "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["B", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["B", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["B", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", "B", "]"}]}]}], "+", 
      RowBox[{
       SuperscriptBox["B", "T"], "**", 
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          SuperscriptBox["B", "T"], "**", 
          SuperscriptBox["A", "T"]}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["B", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["B", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", "B", "]"}]}]}], "+", 
      RowBox[{
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         SuperscriptBox["A", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          SuperscriptBox["B", "T"], "**", 
          SuperscriptBox["A", "T"]}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["B", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", "B", "]"}]}]}], "+", 
      RowBox[{"A", "**", 
       RowBox[{"Pinv", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{
          SuperscriptBox["B", "T"], "**", 
          SuperscriptBox["A", "T"]}], "]"}], "**", 
        SuperscriptBox["B", "T"], "**", 
        RowBox[{"Pinv", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          SuperscriptBox["B", "T"], "**", 
          SuperscriptBox["A", "T"]}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["B", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", "B", "]"}]}]}], "+", 
      RowBox[{"A", "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["A", "T"], "]"}], "**", "B", "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          SuperscriptBox["B", "T"], "**", 
          SuperscriptBox["A", "T"]}], "]"}], "**", 
        RowBox[{"Pinv", "[", "B", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["B", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", "B", "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["A", "T"], "]"}], "**", "B", "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          SuperscriptBox["B", "T"], "**", 
          SuperscriptBox["A", "T"]}], "]"}], "**", 
        RowBox[{"Pinv", "[", "B", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["B", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", "B", "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         SuperscriptBox["B", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["B", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["B", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}]}]}], "+", 
      RowBox[{"B", "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{
          SuperscriptBox["B", "T"], "**", 
          SuperscriptBox["A", "T"]}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["B", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["B", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}]}]}], "+", 
      RowBox[{"A", "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["B", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["B", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["B", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}]}]}], "+", 
      RowBox[{
       SuperscriptBox["B", "T"], "**", 
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          SuperscriptBox["B", "T"], "**", 
          SuperscriptBox["A", "T"]}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["B", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["B", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}]}]}], "+", 
      RowBox[{
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       SuperscriptBox["A", "T"], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         SuperscriptBox["A", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          SuperscriptBox["B", "T"], "**", 
          SuperscriptBox["A", "T"]}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["B", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}]}]}], "+", 
      RowBox[{"A", "**", 
       RowBox[{"Pinv", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{
          SuperscriptBox["B", "T"], "**", 
          SuperscriptBox["A", "T"]}], "]"}], "**", 
        SuperscriptBox["B", "T"], "**", 
        RowBox[{"Pinv", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          SuperscriptBox["B", "T"], "**", 
          SuperscriptBox["A", "T"]}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["B", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}]}]}], "+", 
      RowBox[{"A", "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}], "**", "B", "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}], "**", 
       RowBox[{"Pinv", "[", "B", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", "A", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["A", "T"], "]"}], "**", "B", "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          SuperscriptBox["B", "T"], "**", 
          SuperscriptBox["A", "T"]}], "]"}], "**", 
        RowBox[{"Pinv", "[", "B", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["B", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["A", "T"], "]"}], "**", "B", "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          SuperscriptBox["B", "T"], "**", 
          SuperscriptBox["A", "T"]}], "]"}], "**", 
        RowBox[{"Pinv", "[", "B", "]"}], "**", 
        RowBox[{"Pinv", "[", 
         SuperscriptBox["B", "T"], "]"}], "**", 
        RowBox[{"Pinv", "[", 
         RowBox[{"A", "**", "B"}], "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["A", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", "A", "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         SuperscriptBox["B", "T"], "**", 
         SuperscriptBox["A", "T"]}], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}], "**", "A", "**", 
       RowBox[{"Pinv", "[", 
        SuperscriptBox["B", "T"], "]"}], "**", 
       RowBox[{"Pinv", "[", 
        RowBox[{"A", "**", "B"}], "]"}]}]}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  ColumnForm[{-$CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]] + 
    NonCommutativeMultiply`tp[
      $CellContext`Pinv[$CellContext`A]], -$CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]] + 
    NonCommutativeMultiply`tp[
      $CellContext`Pinv[$CellContext`B]], -$CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]] + 
    NonCommutativeMultiply`tp[
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]]], \
-$CellContext`A + NonCommutativeMultiply[$CellContext`A, 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]]], NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], 
      $CellContext`Pinv[$CellContext`A]] - $CellContext`Pinv[$CellContext`A], 
    NonCommutativeMultiply[
      $CellContext`Pinv[$CellContext`A], $CellContext`A] - 
    NonCommutativeMultiply[
     NonCommutativeMultiply`tp[$CellContext`A], 
     $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`A]]], -
     NonCommutativeMultiply[$CellContext`A, 
       $CellContext`Pinv[$CellContext`A]] + NonCommutativeMultiply[
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], 
      NonCommutativeMultiply`tp[$CellContext`A]], -$CellContext`B + 
    NonCommutativeMultiply[$CellContext`B, 
      NonCommutativeMultiply`tp[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]]], NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`B]] - $CellContext`Pinv[$CellContext`B], 
    NonCommutativeMultiply[
      $CellContext`Pinv[$CellContext`B], $CellContext`B] - 
    NonCommutativeMultiply[
     NonCommutativeMultiply`tp[$CellContext`B], 
     $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`B]]], -
     NonCommutativeMultiply[$CellContext`B, 
       $CellContext`Pinv[$CellContext`B]] + NonCommutativeMultiply[
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      NonCommutativeMultiply`tp[$CellContext`B]], -
     NonCommutativeMultiply[$CellContext`A, $CellContext`B] + 
    NonCommutativeMultiply[$CellContext`A, $CellContext`B, 
      NonCommutativeMultiply`tp[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]]], NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]]] - \
$CellContext`Pinv[
     NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
    NonCommutativeMultiply[
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, $CellContext`B] - NonCommutativeMultiply[
     NonCommutativeMultiply`tp[$CellContext`B], 
     NonCommutativeMultiply`tp[$CellContext`A], 
     $CellContext`Pinv[
      NonCommutativeMultiply[
       NonCommutativeMultiply`tp[$CellContext`B], 
       NonCommutativeMultiply`tp[$CellContext`A]]]], -
     NonCommutativeMultiply[$CellContext`A, $CellContext`B, 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]]] + 
    NonCommutativeMultiply[
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      NonCommutativeMultiply`tp[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A]], -NonCommutativeMultiply[
       NonCommutativeMultiply`tp[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`A], $CellContext`A, 
      $CellContext`Pinv[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]]], -NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]], 
       $CellContext`Pinv[$CellContext`A]] + 
    NonCommutativeMultiply[$CellContext`A, 
      $CellContext`Pinv[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], 
      $CellContext`Pinv[$CellContext`A]], -NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       NonCommutativeMultiply`tp[$CellContext`B], 
       $CellContext`Pinv[$CellContext`A]] + 
    NonCommutativeMultiply[$CellContext`A, $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], 
      $CellContext`Pinv[$CellContext`A]], -
     NonCommutativeMultiply[$CellContext`A, 
       NonCommutativeMultiply`tp[$CellContext`A]] + 
    NonCommutativeMultiply[$CellContext`A, 
      NonCommutativeMultiply`tp[$CellContext`A], $CellContext`A, 
      $CellContext`Pinv[$CellContext`A]], -NonCommutativeMultiply[
       NonCommutativeMultiply`tp[$CellContext`B], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`B], $CellContext`B, 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]]], -NonCommutativeMultiply[
       NonCommutativeMultiply`tp[$CellContext`B], 
       NonCommutativeMultiply`tp[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      NonCommutativeMultiply`tp[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]]], -NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[$CellContext`B]] + 
    NonCommutativeMultiply[$CellContext`B, 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`B]], -
     NonCommutativeMultiply[$CellContext`B, 
       NonCommutativeMultiply`tp[$CellContext`B]] + 
    NonCommutativeMultiply[$CellContext`B, 
      NonCommutativeMultiply`tp[$CellContext`B], $CellContext`B, 
      $CellContext`Pinv[$CellContext`B]], -NonCommutativeMultiply[
       NonCommutativeMultiply`tp[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B] + 
    NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      NonCommutativeMultiply`tp[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]]], -
     NonCommutativeMultiply[
       NonCommutativeMultiply`tp[$CellContext`B], 
       NonCommutativeMultiply`tp[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], $CellContext`A, \
$CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]]], -
     NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]]] + 
    NonCommutativeMultiply[$CellContext`A, $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]]], -
     NonCommutativeMultiply[$CellContext`A, $CellContext`B, 
       NonCommutativeMultiply`tp[$CellContext`B], 
       NonCommutativeMultiply`tp[$CellContext`A]] + 
    NonCommutativeMultiply[$CellContext`A, $CellContext`B, 
      NonCommutativeMultiply`tp[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], $CellContext`A, \
$CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]]], -
     NonCommutativeMultiply[
       NonCommutativeMultiply`tp[$CellContext`B], 
       NonCommutativeMultiply`tp[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       NonCommutativeMultiply`tp[$CellContext`B]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      NonCommutativeMultiply`tp[$CellContext`B], $CellContext`B, 
      $CellContext`Pinv[$CellContext`B]], -NonCommutativeMultiply[
       NonCommutativeMultiply`tp[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
       NonCommutativeMultiply`tp[$CellContext`B], 
       NonCommutativeMultiply`tp[$CellContext`A]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      NonCommutativeMultiply`tp[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], $CellContext`A, \
$CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]]], -
     NonCommutativeMultiply[
       $CellContext`Pinv[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       NonCommutativeMultiply`tp[$CellContext`B], 
       $CellContext`Pinv[$CellContext`A]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], 
      $CellContext`Pinv[$CellContext`A]], -NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]], 
       $CellContext`Pinv[$CellContext`A]] + NonCommutativeMultiply[
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      NonCommutativeMultiply`tp[$CellContext`B], 
      $CellContext`Pinv[$CellContext`A]], -NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[$CellContext`B]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`B]], -NonCommutativeMultiply[
       $CellContext`Pinv[$CellContext`B], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]]] + 
    NonCommutativeMultiply[
      $CellContext`Pinv[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]]], -
     NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]]] + 
    NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]]], -
     NonCommutativeMultiply[
       $CellContext`Pinv[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]]] + 
    NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]]], -
     NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]]] + 
    NonCommutativeMultiply[$CellContext`B, 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]]], -
     NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]]] + NonCommutativeMultiply[
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
      $CellContext`Pinv[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]]], -NonCommutativeMultiply[
       $CellContext`Pinv[$CellContext`B], 
       NonCommutativeMultiply`tp[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]]] + NonCommutativeMultiply[
      $CellContext`Pinv[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], $CellContext`A, \
$CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]]], -
     NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       NonCommutativeMultiply`tp[$CellContext`B], 
       $CellContext`Pinv[$CellContext`A]] + 
    NonCommutativeMultiply[$CellContext`A, 
      $CellContext`Pinv[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      NonCommutativeMultiply`tp[$CellContext`B], 
      $CellContext`Pinv[$CellContext`A]], -NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]], 
       $CellContext`Pinv[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       NonCommutativeMultiply`tp[$CellContext`B], 
       $CellContext`Pinv[$CellContext`A]] + 
    NonCommutativeMultiply[$CellContext`A, 
      $CellContext`Pinv[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], 
      $CellContext`Pinv[$CellContext`A]], -NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       NonCommutativeMultiply`tp[$CellContext`B], 
       $CellContext`Pinv[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       NonCommutativeMultiply`tp[$CellContext`B], 
       $CellContext`Pinv[$CellContext`A]] + 
    NonCommutativeMultiply[$CellContext`A, $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], 
      $CellContext`Pinv[$CellContext`A]], -NonCommutativeMultiply[
       $CellContext`Pinv[$CellContext`B], 
       NonCommutativeMultiply`tp[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]]] + NonCommutativeMultiply[
      $CellContext`Pinv[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      NonCommutativeMultiply`tp[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]]], -NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]]] + NonCommutativeMultiply[
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      NonCommutativeMultiply`tp[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]]], -NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[$CellContext`B]] + 
    NonCommutativeMultiply[$CellContext`B, 
      $CellContext`Pinv[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`B]], -
     NonCommutativeMultiply[$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[$CellContext`B]] + 
    NonCommutativeMultiply[$CellContext`A, $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`B]], -NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[$CellContext`B]] + 
    NonCommutativeMultiply[$CellContext`A, $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`B]], -NonCommutativeMultiply[
       NonCommutativeMultiply`tp[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[$CellContext`B]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`B]], -NonCommutativeMultiply[
       $CellContext`Pinv[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B] + 
    NonCommutativeMultiply[
      $CellContext`Pinv[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      NonCommutativeMultiply`tp[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]]], -
     NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B] + 
    NonCommutativeMultiply[
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      NonCommutativeMultiply`tp[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]]], -
     NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]]] + 
    NonCommutativeMultiply[$CellContext`B, 
      $CellContext`Pinv[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]]], -
     NonCommutativeMultiply[$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]]] + 
    NonCommutativeMultiply[$CellContext`A, $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]]], -
     NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]]] + 
    NonCommutativeMultiply[$CellContext`A, $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]]], -
     NonCommutativeMultiply[
       NonCommutativeMultiply`tp[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]]] + 
    NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]]], -
     NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]]] + 
    NonCommutativeMultiply[$CellContext`A, 
      $CellContext`Pinv[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]]], -
     NonCommutativeMultiply[
       $CellContext`Pinv[$CellContext`B], 
       NonCommutativeMultiply`tp[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       NonCommutativeMultiply`tp[$CellContext`B]] + NonCommutativeMultiply[
      $CellContext`Pinv[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      NonCommutativeMultiply`tp[$CellContext`B], $CellContext`B, 
      $CellContext`Pinv[$CellContext`B]], -NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       NonCommutativeMultiply`tp[$CellContext`B]] + NonCommutativeMultiply[
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      NonCommutativeMultiply`tp[$CellContext`B], $CellContext`B, 
      $CellContext`Pinv[$CellContext`B]], -NonCommutativeMultiply[
       $CellContext`Pinv[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
       NonCommutativeMultiply`tp[$CellContext`B], 
       NonCommutativeMultiply`tp[$CellContext`A]] + NonCommutativeMultiply[
      $CellContext`Pinv[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      NonCommutativeMultiply`tp[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], $CellContext`A, \
$CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]]], -
     NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
       NonCommutativeMultiply`tp[$CellContext`B], 
       NonCommutativeMultiply`tp[$CellContext`A]] + NonCommutativeMultiply[
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      NonCommutativeMultiply`tp[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], $CellContext`A, \
$CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]]], -
     NonCommutativeMultiply[
       $CellContext`Pinv[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[$CellContext`B]] + NonCommutativeMultiply[
      $CellContext`Pinv[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`B]], -NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[$CellContext`B]] + NonCommutativeMultiply[
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`B]], -NonCommutativeMultiply[
       $CellContext`Pinv[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]]] + 
    NonCommutativeMultiply[
      $CellContext`Pinv[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]]], -
     NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]]] + 
    NonCommutativeMultiply[
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]]], -
     NonCommutativeMultiply[
       $CellContext`Pinv[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]], 
       $CellContext`Pinv[$CellContext`A]] + NonCommutativeMultiply[
      $CellContext`Pinv[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], 
      $CellContext`Pinv[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      NonCommutativeMultiply`tp[$CellContext`B], 
      $CellContext`Pinv[$CellContext`A]], -NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]], 
       $CellContext`Pinv[$CellContext`A]] + NonCommutativeMultiply[
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], 
      $CellContext`Pinv[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      NonCommutativeMultiply`tp[$CellContext`B], 
      $CellContext`Pinv[$CellContext`A]], -NonCommutativeMultiply[
       $CellContext`Pinv[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       NonCommutativeMultiply`tp[$CellContext`B], 
       $CellContext`Pinv[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       NonCommutativeMultiply`tp[$CellContext`B], 
       $CellContext`Pinv[$CellContext`A]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], 
      $CellContext`Pinv[$CellContext`A]], NonCommutativeMultiply[
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`B]] - NonCommutativeMultiply[
     $CellContext`Pinv[$CellContext`B], 
     NonCommutativeMultiply`tp[$CellContext`A], 
     $CellContext`Pinv[
      NonCommutativeMultiply[
       NonCommutativeMultiply`tp[$CellContext`B], 
       NonCommutativeMultiply`tp[$CellContext`A]]], 
     $CellContext`Pinv[$CellContext`B], 
     $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`B]], 
     $CellContext`Pinv[$CellContext`B]], -NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[$CellContext`B]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`B]], -NonCommutativeMultiply[
       $CellContext`Pinv[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[$CellContext`B]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`B]], -NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       $CellContext`Pinv[$CellContext`B], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[$CellContext`B]] + NonCommutativeMultiply[
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`B]], NonCommutativeMultiply[
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]]] - 
    NonCommutativeMultiply[
     $CellContext`Pinv[$CellContext`B], 
     NonCommutativeMultiply`tp[$CellContext`A], 
     $CellContext`Pinv[
      NonCommutativeMultiply[
       NonCommutativeMultiply`tp[$CellContext`B], 
       NonCommutativeMultiply`tp[$CellContext`A]]], 
     $CellContext`Pinv[$CellContext`B], 
     $CellContext`Pinv[
      NonCommutativeMultiply`tp[$CellContext`B]], 
     $CellContext`Pinv[
      NonCommutativeMultiply[$CellContext`A, $CellContext`B]]], -
     NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]]] + 
    NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]]], -
     NonCommutativeMultiply[
       $CellContext`Pinv[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]]] + 
    NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]]], -
     NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       $CellContext`Pinv[$CellContext`B], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]]] + 
    NonCommutativeMultiply[
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]]], -
     NonCommutativeMultiply[
       $CellContext`Pinv[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]], 
       $CellContext`Pinv[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]]] + 
    NonCommutativeMultiply[
      $CellContext`Pinv[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]]], -
     NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]], 
       $CellContext`Pinv[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]]] + 
    NonCommutativeMultiply[
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]]], -
     NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]], 
       $CellContext`Pinv[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       NonCommutativeMultiply`tp[$CellContext`B], 
       $CellContext`Pinv[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       NonCommutativeMultiply`tp[$CellContext`B], 
       $CellContext`Pinv[$CellContext`A]] + 
    NonCommutativeMultiply[$CellContext`A, 
      $CellContext`Pinv[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], 
      $CellContext`Pinv[$CellContext`A]], -NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       NonCommutativeMultiply`tp[$CellContext`B], 
       $CellContext`Pinv[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       NonCommutativeMultiply`tp[$CellContext`B], 
       $CellContext`Pinv[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       NonCommutativeMultiply`tp[$CellContext`B], 
       $CellContext`Pinv[$CellContext`A]] + 
    NonCommutativeMultiply[$CellContext`A, $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], 
      $CellContext`Pinv[$CellContext`A]], -NonCommutativeMultiply[
       $CellContext`Pinv[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       NonCommutativeMultiply`tp[$CellContext`B], 
       $CellContext`Pinv[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       NonCommutativeMultiply`tp[$CellContext`B], 
       $CellContext`Pinv[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       NonCommutativeMultiply`tp[$CellContext`B], 
       $CellContext`Pinv[$CellContext`A]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], 
      $CellContext`Pinv[$CellContext`A]], -NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[$CellContext`B]] + 
    NonCommutativeMultiply[$CellContext`B, 
      $CellContext`Pinv[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`B]], -NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[$CellContext`B]] + 
    NonCommutativeMultiply[$CellContext`A, $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`B]], -NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[$CellContext`B]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`B]], -NonCommutativeMultiply[
       $CellContext`Pinv[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[$CellContext`B]] + NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`B]], -NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]], 
       $CellContext`Pinv[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[$CellContext`B]] + 
    NonCommutativeMultiply[$CellContext`A, 
      $CellContext`Pinv[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`B]], -NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       NonCommutativeMultiply`tp[$CellContext`B], 
       $CellContext`Pinv[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[$CellContext`B]] + 
    NonCommutativeMultiply[$CellContext`A, $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`B]], -NonCommutativeMultiply[
       $CellContext`Pinv[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       $CellContext`Pinv[$CellContext`B], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[$CellContext`B]] + NonCommutativeMultiply[
      $CellContext`Pinv[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], 
      $CellContext`Pinv[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`B]], -NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       $CellContext`Pinv[$CellContext`B], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[$CellContext`B]] + NonCommutativeMultiply[
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], 
      $CellContext`Pinv[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[$CellContext`B]], -NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]]] + 
    NonCommutativeMultiply[$CellContext`B, 
      $CellContext`Pinv[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]]], -
     NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]]] + 
    NonCommutativeMultiply[$CellContext`A, $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]]], -
     NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]]] + 
    NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]]], -
     NonCommutativeMultiply[
       $CellContext`Pinv[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]]] + 
    NonCommutativeMultiply[
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      NonCommutativeMultiply`tp[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]]], -
     NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]], 
       $CellContext`Pinv[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]]] + 
    NonCommutativeMultiply[$CellContext`A, 
      $CellContext`Pinv[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]]], -
     NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       NonCommutativeMultiply`tp[$CellContext`B], 
       $CellContext`Pinv[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]]] + 
    NonCommutativeMultiply[$CellContext`A, $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[$CellContext`B], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]]], -
     NonCommutativeMultiply[
       $CellContext`Pinv[$CellContext`A], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       $CellContext`Pinv[$CellContext`B], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]]] + 
    NonCommutativeMultiply[
      $CellContext`Pinv[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], 
      $CellContext`Pinv[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]]], -
     NonCommutativeMultiply[
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`A]], $CellContext`B, 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[
         NonCommutativeMultiply`tp[$CellContext`B], 
         NonCommutativeMultiply`tp[$CellContext`A]]], 
       $CellContext`Pinv[$CellContext`B], 
       $CellContext`Pinv[
        NonCommutativeMultiply`tp[$CellContext`B]], 
       $CellContext`Pinv[
        NonCommutativeMultiply[$CellContext`A, $CellContext`B]]] + 
    NonCommutativeMultiply[
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`A]], 
      $CellContext`Pinv[$CellContext`A], 
      $CellContext`Pinv[
       NonCommutativeMultiply[
        NonCommutativeMultiply`tp[$CellContext`B], 
        NonCommutativeMultiply`tp[$CellContext`A]]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]], \
$CellContext`A, 
      $CellContext`Pinv[
       NonCommutativeMultiply`tp[$CellContext`B]], 
      $CellContext`Pinv[
       NonCommutativeMultiply[$CellContext`A, $CellContext`B]]]}],
  Editable->False]], "Output",
 CellChangeTimes->{3.455305764519458*^9, 3.51662783316501*^9, 
  3.705773902587946*^9},ExpressionUUID->"67242856-b595-417b-b964-\
388fea194f60"],

Cell[BoxData["\<\"NOT Finite Basis.\"\>"], "Print",
 CellChangeTimes->{3.455305764546969*^9, 3.5166278331889277`*^9, 
  3.70577390259577*^9},ExpressionUUID->"85303ca1-cdc2-4951-bde7-5a597e9ae6ce"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pseudoinverse A ** Pinv[A] + B ** Pinv[B]", "Section",
 CellChangeTimes->{{3.4553058315357857`*^9, 
  3.455305849682085*^9}},ExpressionUUID->"3f05a6b2-c5a3-48fc-8eb7-\
a9021b19a327"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"relations", " ", "=", " ", 
    RowBox[{
     RowBox[{"NCMakeRelations", "[", 
      RowBox[{"{", 
       RowBox[{"Pinv", ",", "A", ",", "B", ",", 
        RowBox[{
         RowBox[{"A", "**", 
          RowBox[{"Pinv", "[", "A", "]"}]}], "+", 
         RowBox[{"B", "**", 
          RowBox[{"Pinv", "[", "B", "]"}]}]}]}], "}"}], "]"}], " ", "//.", 
     " ", 
     RowBox[{"Tp", " ", "\[Rule]", " ", "tp"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearMonomialOrderAll", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetMonomialOrder", "[", " ", 
   RowBox[{"{", 
    RowBox[{"A", ",", "B", ",", 
     RowBox[{"tp", "[", "A", "]"}], ",", 
     RowBox[{"tp", "[", "B", "]"}], ",", 
     RowBox[{"Pinv", "[", "A", "]"}], ",", 
     RowBox[{"Pinv", "[", "B", "]"}], ",", 
     RowBox[{"Pinv", "[", 
      RowBox[{"tp", "[", "A", "]"}], "]"}], ",", 
     RowBox[{"Pinv", "[", 
      RowBox[{"tp", "[", "B", "]"}], "]"}], ",", 
     RowBox[{"tp", "[", 
      RowBox[{"Pinv", "[", "A", "]"}], "]"}], ",", 
     RowBox[{"tp", "[", 
      RowBox[{"Pinv", "[", "B", "]"}], "]"}], ",", 
     RowBox[{"Pinv", "[", 
      RowBox[{
       RowBox[{"A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}], "+", 
       RowBox[{"B", "**", 
        RowBox[{"Pinv", "[", "B", "]"}]}]}], "]"}], ",", 
     RowBox[{"Pinv", "[", 
      RowBox[{"tp", "[", 
       RowBox[{
        RowBox[{"A", "**", 
         RowBox[{"Pinv", "[", "A", "]"}]}], "+", 
        RowBox[{"B", "**", 
         RowBox[{"Pinv", "[", "B", "]"}]}]}], "]"}], "]"}], ",", 
     RowBox[{"tp", "[", 
      RowBox[{"Pinv", "[", 
       RowBox[{
        RowBox[{"A", "**", 
         RowBox[{"Pinv", "[", "A", "]"}]}], "+", 
        RowBox[{"B", "**", 
         RowBox[{"Pinv", "[", "B", "]"}]}]}], "]"}], "]"}]}], " ", "}"}], " ",
    "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PrintMonomialOrder", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{
  3.4553058826005287`*^9},ExpressionUUID->"4f5c7418-3230-4b27-a36b-\
5ca096df066f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NCProcess", "[", " ", 
   RowBox[{
   "relations", ",", " ", "6", ",", " ", "0", ",", " ", "0", ",", " ", "0", 
    ",", " ", "\"\<APinvAPlusBPinvB\>\"", ",", " ", 
    RowBox[{"SBByCat", " ", "\[Rule]", "False"}], ",", " ", 
    RowBox[{"RR", "\[Rule]", " ", "False"}], ",", " ", 
    RowBox[{"NCCV", " ", "\[Rule]", " ", "False"}]}], " ", "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.455305903267181*^9},ExpressionUUID->"e37e3da8-c639-4ad0-8f9a-\
7186c7673594"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Outputting results to the stream \"\>", "\[InvisibleSpace]", 
   InterpretationBox[
    StyleBox[
     RowBox[{"OutputStream", "[", 
      RowBox[{"\"\<APinvAPlusBPinvB.tex\>\"", ",", " ", "3"}], "]"}],
     ShowStringCharacters->True,
     NumberMarks->True],
    Format[
     OutputStream["APinvAPlusBPinvB.tex", 3], InputForm],
    AutoDelete->True,
    Editable->True]}],
  SequenceForm["Outputting results to the stream ", 
   Format[
    OutputStream["APinvAPlusBPinvB.tex", 3], InputForm]],
  Editable->False]], "Print",
 CellChangeTimes->{3.455305921384026*^9, 3.516627843143662*^9, 
  3.705773905763527*^9},ExpressionUUID->"2709a214-cb99-48d6-9f8e-\
b64171b03d8c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Done outputting results to the stream \"\>", 
   "\[InvisibleSpace]", 
   InterpretationBox[
    StyleBox[
     RowBox[{"OutputStream", "[", 
      RowBox[{"\"\<APinvAPlusBPinvB.tex\>\"", ",", " ", "3"}], "]"}],
     ShowStringCharacters->True,
     NumberMarks->True],
    Format[
     OutputStream["APinvAPlusBPinvB.tex", 3], InputForm],
    AutoDelete->True,
    Editable->True]}],
  SequenceForm["Done outputting results to the stream ", 
   Format[
    OutputStream["APinvAPlusBPinvB.tex", 3], InputForm]],
  Editable->False]], "Print",
 CellChangeTimes->{3.455305921384026*^9, 3.516627843143662*^9, 
  3.705773906251766*^9},ExpressionUUID->"aad3d9d3-8a73-4cba-815f-\
3c9b5088a177"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"> Running '\"\>", 
   "\[InvisibleSpace]", "\<\"pdflatex -output-directory=.  \
APinvAPlusBPinvB.tex 1> \\\"/tmp/mNCRun.out\\\" 2> \
\\\"/tmp/mNCRun.err\\\"\"\>", "\[InvisibleSpace]", "\<\"'...\"\>"}],
  SequenceForm[
  "> Running '", 
   "pdflatex -output-directory=.  APinvAPlusBPinvB.tex 1> \"/tmp/mNCRun.out\" \
2> \"/tmp/mNCRun.err\"", "'..."],
  Editable->False]], "Print",
 CellChangeTimes->{3.455305921384026*^9, 3.516627843143662*^9, 
  3.705773906252852*^9},ExpressionUUID->"c801cb40-b877-44d2-9029-\
f57f849cfac6"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"> Running '\"\>", 
   "\[InvisibleSpace]", "\<\"acroread  APinvAPlusBPinvB.pdf 1> \
\\\"/tmp/mNCRun.out\\\" 2> \\\"/tmp/mNCRun.err\\\"\"\>", 
   "\[InvisibleSpace]", "\<\"'...\"\>"}],
  SequenceForm[
  "> Running '", 
   "acroread  APinvAPlusBPinvB.pdf 1> \"/tmp/mNCRun.out\" 2> \
\"/tmp/mNCRun.err\"", "'..."],
  Editable->False]], "Print",
 CellChangeTimes->{3.455305921384026*^9, 3.516627843143662*^9, 
  3.70577390640246*^9},ExpressionUUID->"92344c89-cddd-4bb5-b9a1-b3636a89acbe"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Note: Your TeX and Dvi files are located in the directory \
\"\>", "\[InvisibleSpace]", "\<\"/home/mauricio\"\>"}],
  SequenceForm[
  "Note: Your TeX and Dvi files are located in the directory ", 
   "/home/mauricio"],
  Editable->False]], "Print",
 CellChangeTimes->{3.455305921384026*^9, 3.516627843143662*^9, 
  3.705773909193902*^9},ExpressionUUID->"0c9d53e5-d791-4d5f-9a59-\
6c58a1f54814"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"NCMakeGB", "[", " ", 
   RowBox[{"relations", ",", "10"}], " ", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"FinishedComputingBasisQ", "[", "]"}], " ", "\[Equal]", " ", 
     "1"}], ",", " ", 
    RowBox[{"Print", "[", " ", "\"\<Finite Basis.\>\"", " ", "]"}], ",", " ", 
    
    RowBox[{"Print", "[", " ", "\"\<NOT Finite Basis.\>\"", " ", "]"}]}], " ",
    "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.455305874828807*^9, 
  3.455305904731866*^9}},ExpressionUUID->"89cbe4fd-0bda-4aad-82d2-\
9bac7fe4d844"],

Cell[BoxData["\<\"Finite Basis.\"\>"], "Print",
 CellChangeTimes->{3.516627850804455*^9, 
  3.705773910991686*^9},ExpressionUUID->"360c52b4-9887-4873-a640-\
4c970f2da72a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Run", " ", "for", " ", 
    RowBox[{"Pinv", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{
         RowBox[{"Pinv", "[", "B", "]"}], "**", "B"}]}], ")"}], "**", "A", "**", 
      RowBox[{"Pinv", "[", "A", "]"}]}], "]"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"relations", " ", "=", " ", 
     RowBox[{
      RowBox[{"NCMakeRelations", "[", 
       RowBox[{"{", 
        RowBox[{"Pinv", ",", "A", ",", "B", ",", 
         RowBox[{
          RowBox[{"A", "**", 
           RowBox[{"Pinv", "[", "A", "]"}]}], "-", 
          RowBox[{
           RowBox[{"Pinv", "[", "B", "]"}], "**", "B", "**", "A", "**", 
           RowBox[{"Pinv", "[", "A", "]"}]}]}]}], "}"}], "]"}], " ", "//.", 
      " ", 
      RowBox[{"Tp", " ", "\[Rule]", " ", "tp"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearMonomialOrderAll", "[", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SetMonomialOrder", "[", " ", 
     RowBox[{"{", 
      RowBox[{"A", ",", "B", ",", 
       RowBox[{"tp", "[", "A", "]"}], ",", 
       RowBox[{"tp", "[", "B", "]"}], ",", 
       RowBox[{"Pinv", "[", "A", "]"}], ",", 
       RowBox[{"Pinv", "[", "B", "]"}], ",", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "A", "]"}], "]"}], ",", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", "B", "]"}], "]"}], ",", 
       RowBox[{"tp", "[", 
        RowBox[{"Pinv", "[", "A", "]"}], "]"}], ",", 
       RowBox[{"tp", "[", 
        RowBox[{"Pinv", "[", "B", "]"}], "]"}], ",", 
       RowBox[{"Pinv", "[", 
        RowBox[{
         RowBox[{"A", "**", 
          RowBox[{"Pinv", "[", "A", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Pinv", "[", "B", "]"}], "**", "B", "**", "A", "**", 
          RowBox[{"Pinv", "[", "A", "]"}]}]}], "]"}], ",", 
       RowBox[{"Pinv", "[", 
        RowBox[{"tp", "[", 
         RowBox[{
          RowBox[{"A", "**", 
           RowBox[{"Pinv", "[", "A", "]"}]}], "-", 
          RowBox[{
           RowBox[{"Pinv", "[", "B", "]"}], "**", "B", "**", "A", "**", 
           RowBox[{"Pinv", "[", "A", "]"}]}]}], "]"}], "]"}], ",", 
       RowBox[{"tp", "[", 
        RowBox[{"Pinv", "[", 
         RowBox[{
          RowBox[{"A", "**", 
           RowBox[{"Pinv", "[", "A", "]"}]}], "-", 
          RowBox[{
           RowBox[{"Pinv", "[", "B", "]"}], "**", "B", "**", "A", "**", 
           RowBox[{"Pinv", "[", "A", "]"}]}]}], "]"}], "]"}]}], " ", "}"}], 
     " ", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PrintMonomialOrder", "[", "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NCProcess", "[", " ", 
     RowBox[{
     "relations", ",", " ", "6", ",", " ", "0", ",", " ", "0", ",", " ", "0", 
      ",", " ", "\"\<APinvAMinusPinvBBAPinvA\>\"", ",", " ", 
      RowBox[{"SBByCat", " ", "\[Rule]", "False"}], ",", " ", 
      RowBox[{"RR", "\[Rule]", " ", "False"}], ",", " ", 
      RowBox[{"NCCV", " ", "\[Rule]", " ", "False"}]}], " ", "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NCMakeGB", "[", " ", 
     RowBox[{"relations", ",", "10"}], " ", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"FinishedComputingBasisQ", "[", "]"}], " ", "\[Equal]", " ", 
       "1"}], ",", " ", 
      RowBox[{"Print", "[", " ", "\"\<Finite Basis.\>\"", " ", "]"}], ",", 
      " ", 
      RowBox[{"Print", "[", " ", "\"\<NOT Finite Basis.\>\"", " ", "]"}]}], 
     " ", "]"}], ";"}]}]}]], "Input",ExpressionUUID->"1daeb3d1-b472-42c4-b575-\
5a0be6e6eb76"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Outputting results to the stream \"\>", "\[InvisibleSpace]", 
   InterpretationBox[
    StyleBox[
     RowBox[{"OutputStream", "[", 
      RowBox[{"\"\<APinvAMinusPinvBBAPinvA.tex\>\"", ",", " ", "3"}], "]"}],
     ShowStringCharacters->True,
     NumberMarks->True],
    Format[
     OutputStream["APinvAMinusPinvBBAPinvA.tex", 3], InputForm],
    AutoDelete->True,
    Editable->True]}],
  SequenceForm["Outputting results to the stream ", 
   Format[
    OutputStream["APinvAMinusPinvBBAPinvA.tex", 3], InputForm]],
  Editable->False]], "Print",
 CellChangeTimes->{3.4549606559244013`*^9, 3.454961120338471*^9, 
  3.454961395117787*^9, 3.4549618953767776`*^9, 3.455306005900585*^9, 
  3.516627861548175*^9, 
  3.705773914187792*^9},ExpressionUUID->"df3dd1c9-6573-430c-9e47-\
dc4322332e97"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Done outputting results to the stream \"\>", 
   "\[InvisibleSpace]", 
   InterpretationBox[
    StyleBox[
     RowBox[{"OutputStream", "[", 
      RowBox[{"\"\<APinvAMinusPinvBBAPinvA.tex\>\"", ",", " ", "3"}], "]"}],
     ShowStringCharacters->True,
     NumberMarks->True],
    Format[
     OutputStream["APinvAMinusPinvBBAPinvA.tex", 3], InputForm],
    AutoDelete->True,
    Editable->True]}],
  SequenceForm["Done outputting results to the stream ", 
   Format[
    OutputStream["APinvAMinusPinvBBAPinvA.tex", 3], InputForm]],
  Editable->False]], "Print",
 CellChangeTimes->{3.4549606559244013`*^9, 3.454961120338471*^9, 
  3.454961395117787*^9, 3.4549618953767776`*^9, 3.455306005900585*^9, 
  3.516627861548175*^9, 
  3.7057739147296877`*^9},ExpressionUUID->"6d8c772d-4721-4871-8bb8-\
46f96019d037"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"> Running '\"\>", 
   "\[InvisibleSpace]", "\<\"pdflatex -output-directory=.  \
APinvAMinusPinvBBAPinvA.tex 1> \\\"/tmp/mNCRun.out\\\" 2> \\\"/tmp/mNCRun.err\
\\\"\"\>", "\[InvisibleSpace]", "\<\"'...\"\>"}],
  SequenceForm[
  "> Running '", 
   "pdflatex -output-directory=.  APinvAMinusPinvBBAPinvA.tex 1> \
\"/tmp/mNCRun.out\" 2> \"/tmp/mNCRun.err\"", "'..."],
  Editable->False]], "Print",
 CellChangeTimes->{3.4549606559244013`*^9, 3.454961120338471*^9, 
  3.454961395117787*^9, 3.4549618953767776`*^9, 3.455306005900585*^9, 
  3.516627861548175*^9, 
  3.7057739147308273`*^9},ExpressionUUID->"986dc535-e14f-4f6a-9263-\
a8b75838c49d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"> Running '\"\>", 
   "\[InvisibleSpace]", "\<\"acroread  APinvAMinusPinvBBAPinvA.pdf 1> \
\\\"/tmp/mNCRun.out\\\" 2> \\\"/tmp/mNCRun.err\\\"\"\>", 
   "\[InvisibleSpace]", "\<\"'...\"\>"}],
  SequenceForm[
  "> Running '", 
   "acroread  APinvAMinusPinvBBAPinvA.pdf 1> \"/tmp/mNCRun.out\" 2> \
\"/tmp/mNCRun.err\"", "'..."],
  Editable->False]], "Print",
 CellChangeTimes->{3.4549606559244013`*^9, 3.454961120338471*^9, 
  3.454961395117787*^9, 3.4549618953767776`*^9, 3.455306005900585*^9, 
  3.516627861548175*^9, 
  3.705773914876953*^9},ExpressionUUID->"8acd7bcf-0f88-4b2a-b8ee-\
ab309d2df609"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Note: Your TeX and Dvi files are located in the directory \
\"\>", "\[InvisibleSpace]", "\<\"/home/mauricio\"\>"}],
  SequenceForm[
  "Note: Your TeX and Dvi files are located in the directory ", 
   "/home/mauricio"],
  Editable->False]], "Print",
 CellChangeTimes->{3.4549606559244013`*^9, 3.454961120338471*^9, 
  3.454961395117787*^9, 3.4549618953767776`*^9, 3.455306005900585*^9, 
  3.516627861548175*^9, 
  3.705773917310824*^9},ExpressionUUID->"cc5e4306-ec54-4314-8752-\
bd6346284adf"],

Cell[BoxData["\<\"Finite Basis.\"\>"], "Print",
 CellChangeTimes->{3.4549606559244013`*^9, 3.454961120338471*^9, 
  3.454961395117787*^9, 3.4549618953767776`*^9, 3.455306005900585*^9, 
  3.516627861548175*^9, 
  3.705773918669079*^9},ExpressionUUID->"16ca951c-34cf-4647-a431-\
704158ad9c57"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Run", " ", "for", " ", 
   RowBox[{"Pinv", "[", 
    RowBox[{
     RowBox[{"A", "**", 
      RowBox[{"Pinv", "[", "A", "]"}]}], "+", 
     RowBox[{
      RowBox[{"Pinv", "[", "B", "]"}], "**", "B"}]}], "]"}], " ", "AND", " ", 
   
   RowBox[{"Pinv", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{
        RowBox[{"Pinv", "[", "B", "]"}], "**", "B"}]}], ")"}], "**", "A", "**", 
     RowBox[{"Pinv", "[", "A", "]"}]}], "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.45530606344495*^9, 
  3.4553060642204*^9}},ExpressionUUID->"97a00ef0-6787-4044-9154-682b56e7a8e7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SetNonCommutative", "[", 
   RowBox[{"A", ",", "B", ",", 
    RowBox[{"Pinv", "[", "A", "]"}], ",", 
    RowBox[{"Pinv", "[", "B", "]"}], ",", 
    RowBox[{"Pinv", "[", 
     RowBox[{"A", "+", "B"}], "]"}], ",", 
    RowBox[{"Pinv", "[", 
     RowBox[{"A", "**", "B"}], "]"}]}], " ", "]"}], ";"}]], "Input",Expression\
UUID->"277335a9-3953-428a-929d-e8bc1651b289"],

Cell[BoxData[
 TemplateBox[{
  "CommutativeQ","NonCommutative",
   "\"Tried to set the \
\\!\\(\\*RowBox[{\\\"\\\\\\\"expression\\\\\\\"\\\"}]\\) \
\\\"\\!\\(\\*RowBox[{\\\"Pinv\\\", \\\"[\\\", \\\"A\\\", \\\"]\\\"}]\\)\\\" \
to be noncommutative.\"",2,49,8,19514446379403453101,"Local",
   "NonCommutativeMultiply`CommutativeQ"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{
  3.705773918819208*^9},ExpressionUUID->"e2c69a54-c8f0-4fb6-9d74-\
ad56b2693901"],

Cell[BoxData[
 TemplateBox[{
  "CommutativeQ","NonCommutative",
   "\"Tried to set the \
\\!\\(\\*RowBox[{\\\"\\\\\\\"expression\\\\\\\"\\\"}]\\) \
\\\"\\!\\(\\*RowBox[{\\\"Pinv\\\", \\\"[\\\", \\\"B\\\", \\\"]\\\"}]\\)\\\" \
to be noncommutative.\"",2,49,9,19514446379403453101,"Local",
   "NonCommutativeMultiply`CommutativeQ"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{
  3.705773918824293*^9},ExpressionUUID->"29bab184-9ac0-431b-a8f1-\
401c75c32939"],

Cell[BoxData[
 TemplateBox[{
  "CommutativeQ","NonCommutative",
   "\"Tried to set the \
\\!\\(\\*RowBox[{\\\"\\\\\\\"expression\\\\\\\"\\\"}]\\) \
\\\"\\!\\(\\*RowBox[{\\\"Pinv\\\", \\\"[\\\", RowBox[{\\\"A\\\", \\\"+\\\", \
\\\"B\\\"}], \\\"]\\\"}]\\)\\\" to be noncommutative.\"",2,49,10,
   19514446379403453101,"Local","NonCommutativeMultiply`CommutativeQ"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{
  3.705773918828933*^9},ExpressionUUID->"825a4788-247d-45f5-a44d-\
a1e661e882f2"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"CommutativeQ\\\", \
\\\"::\\\", \\\"NonCommutative\\\"}], \\\"MessageName\\\"]\\) will be \
suppressed during this calculation.\"",2,49,11,19514446379403453101,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.705773918834008*^9},ExpressionUUID->"d6158753-0437-464c-8130-\
b968ebcc078d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"relations", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"NCMakeRelations", "[", 
      RowBox[{"{", 
       RowBox[{"Pinv", ",", "A", ",", "B", ",", 
        RowBox[{
         RowBox[{"A", "**", 
          RowBox[{"Pinv", "[", "A", "]"}]}], "+", 
         RowBox[{
          RowBox[{"Pinv", "[", "B", "]"}], "**", "B"}]}], ",", 
        RowBox[{
         RowBox[{"A", "**", 
          RowBox[{"Pinv", "[", "A", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Pinv", "[", "B", "]"}], "**", "B", "**", "A", "**", 
          RowBox[{"Pinv", "[", "A", "]"}]}]}]}], "}"}], "]"}], "//.", 
     RowBox[{"Tp", " ", "\[Rule]", " ", "tp"}]}], "//.", 
    RowBox[{"tp", "\[Rule]", "Tp"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearMonomialOrderAll", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"order", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"A", ",", "B", ",", 
     RowBox[{"tp", "[", "A", "]"}], ",", 
     RowBox[{"tp", "[", "B", "]"}], ",", 
     RowBox[{"Pinv", "[", "A", "]"}], ",", 
     RowBox[{"Pinv", "[", "B", "]"}], ",", 
     RowBox[{"Pinv", "[", 
      RowBox[{"tp", "[", "A", "]"}], "]"}], ",", 
     RowBox[{"Pinv", "[", 
      RowBox[{"tp", "[", "B", "]"}], "]"}], ",", 
     RowBox[{"tp", "[", 
      RowBox[{"Pinv", "[", "A", "]"}], "]"}], ",", 
     RowBox[{"tp", "[", 
      RowBox[{"Pinv", "[", "B", "]"}], "]"}], ",", 
     RowBox[{"Pinv", "[", 
      RowBox[{
       RowBox[{"A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Pinv", "[", "B", "]"}], "**", "B"}]}], "]"}], ",", 
     RowBox[{"Pinv", "[", 
      RowBox[{"tp", "[", 
       RowBox[{
        RowBox[{"A", "**", 
         RowBox[{"Pinv", "[", "A", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Pinv", "[", "B", "]"}], "**", "B"}]}], "]"}], "]"}], ",", 
     RowBox[{"tp", "[", 
      RowBox[{"Pinv", "[", 
       RowBox[{
        RowBox[{"A", "**", 
         RowBox[{"Pinv", "[", "A", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Pinv", "[", "B", "]"}], "**", "B"}]}], "]"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Pinv", "[", 
      RowBox[{
       RowBox[{"A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Pinv", "[", "B", "]"}], "**", "B", "**", "A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}]}], "]"}], ",", 
     RowBox[{"Pinv", "[", 
      RowBox[{"tp", "[", 
       RowBox[{
        RowBox[{"A", "**", 
         RowBox[{"Pinv", "[", "A", "]"}]}], "-", 
        RowBox[{
         RowBox[{"Pinv", "[", "B", "]"}], "**", "B", "**", "A", "**", 
         RowBox[{"Pinv", "[", "A", "]"}]}]}], "]"}], "]"}], ",", 
     RowBox[{"tp", "[", 
      RowBox[{"Pinv", "[", 
       RowBox[{
        RowBox[{"A", "**", 
         RowBox[{"Pinv", "[", "A", "]"}]}], "-", 
        RowBox[{
         RowBox[{"Pinv", "[", "B", "]"}], "**", "B", "**", "A", "**", 
         RowBox[{"Pinv", "[", "A", "]"}]}]}], "]"}], "]"}]}], " ", "}"}], " ",
    "//.", 
   RowBox[{"tp", "\[Rule]", "Tp"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetMonomialOrder", "[", " ", "order", "]"}], ";"}]}], "Input",
 CellChangeTimes->{
  3.455306048980592*^9, 3.455306162533353*^9, {3.455306241883621*^9, 
   3.455306245453993*^9}, {3.4553063043927526`*^9, 3.455306311706965*^9}, {
   3.455306408999866*^9, 3.455306455204768*^9}, {3.4553065527259703`*^9, 
   3.455306567556807*^9}},ExpressionUUID->"cfd10894-a7c6-481e-ac1f-\
4266ff33d43d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "**", 
     RowBox[{"Pinv", "[", "A", "]"}], "**", "A"}], "\[Equal]", "A"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Pinv", "[", "A", "]"}], "**", "A", "**", 
     RowBox[{"Pinv", "[", "A", "]"}]}], "\[Equal]", 
    RowBox[{"Pinv", "[", "A", "]"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Tp", "[", "A", "]"}], "**", 
     RowBox[{"Tp", "[", 
      RowBox[{"Pinv", "[", "A", "]"}], "]"}]}], "\[Equal]", 
    RowBox[{
     RowBox[{"Pinv", "[", "A", "]"}], "**", "A"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Tp", "[", 
      RowBox[{"Pinv", "[", "A", "]"}], "]"}], "**", 
     RowBox[{"Tp", "[", "A", "]"}]}], "\[Equal]", 
    RowBox[{"A", "**", 
     RowBox[{"Pinv", "[", "A", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"Tp", "[", 
     RowBox[{"Pinv", "[", "A", "]"}], "]"}], "\[Equal]", 
    RowBox[{"Pinv", "[", 
     RowBox[{"Tp", "[", "A", "]"}], "]"}]}], ",", 
   RowBox[{
    RowBox[{"B", "**", 
     RowBox[{"Pinv", "[", "B", "]"}], "**", "B"}], "\[Equal]", "B"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Pinv", "[", "B", "]"}], "**", "B", "**", 
     RowBox[{"Pinv", "[", "B", "]"}]}], "\[Equal]", 
    RowBox[{"Pinv", "[", "B", "]"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Tp", "[", "B", "]"}], "**", 
     RowBox[{"Tp", "[", 
      RowBox[{"Pinv", "[", "B", "]"}], "]"}]}], "\[Equal]", 
    RowBox[{
     RowBox[{"Pinv", "[", "B", "]"}], "**", "B"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Tp", "[", 
      RowBox[{"Pinv", "[", "B", "]"}], "]"}], "**", 
     RowBox[{"Tp", "[", "B", "]"}]}], "\[Equal]", 
    RowBox[{"B", "**", 
     RowBox[{"Pinv", "[", "B", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"Tp", "[", 
     RowBox[{"Pinv", "[", "B", "]"}], "]"}], "\[Equal]", 
    RowBox[{"Pinv", "[", 
     RowBox[{"Tp", "[", "B", "]"}], "]"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Pinv", "[", "B", "]"}], "**", "B"}]}], ")"}], "**", 
     RowBox[{"Pinv", "[", 
      RowBox[{
       RowBox[{"A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Pinv", "[", "B", "]"}], "**", "B"}]}], "]"}], "**", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Pinv", "[", "B", "]"}], "**", "B"}]}], ")"}]}], "\[Equal]", 
    RowBox[{
     RowBox[{"A", "**", 
      RowBox[{"Pinv", "[", "A", "]"}]}], "+", 
     RowBox[{
      RowBox[{"Pinv", "[", "B", "]"}], "**", "B"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Pinv", "[", 
      RowBox[{
       RowBox[{"A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Pinv", "[", "B", "]"}], "**", "B"}]}], "]"}], "**", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Pinv", "[", "B", "]"}], "**", "B"}]}], ")"}], "**", 
     RowBox[{"Pinv", "[", 
      RowBox[{
       RowBox[{"A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Pinv", "[", "B", "]"}], "**", "B"}]}], "]"}]}], "\[Equal]", 
    RowBox[{"Pinv", "[", 
     RowBox[{
      RowBox[{"A", "**", 
       RowBox[{"Pinv", "[", "A", "]"}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", "B", "]"}], "**", "B"}]}], "]"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Tp", "[", "B", "]"}], "**", 
        RowBox[{"Tp", "[", 
         RowBox[{"Pinv", "[", "B", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"Tp", "[", 
         RowBox[{"Pinv", "[", "A", "]"}], "]"}], "**", 
        RowBox[{"Tp", "[", "A", "]"}]}]}], ")"}], "**", 
     RowBox[{"Tp", "[", 
      RowBox[{"Pinv", "[", 
       RowBox[{
        RowBox[{"A", "**", 
         RowBox[{"Pinv", "[", "A", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Pinv", "[", "B", "]"}], "**", "B"}]}], "]"}], "]"}]}], 
    "\[Equal]", 
    RowBox[{
     RowBox[{"Pinv", "[", 
      RowBox[{
       RowBox[{"A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Pinv", "[", "B", "]"}], "**", "B"}]}], "]"}], "**", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Pinv", "[", "B", "]"}], "**", "B"}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Tp", "[", 
      RowBox[{"Pinv", "[", 
       RowBox[{
        RowBox[{"A", "**", 
         RowBox[{"Pinv", "[", "A", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Pinv", "[", "B", "]"}], "**", "B"}]}], "]"}], "]"}], "**", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Tp", "[", "B", "]"}], "**", 
        RowBox[{"Tp", "[", 
         RowBox[{"Pinv", "[", "B", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"Tp", "[", 
         RowBox[{"Pinv", "[", "A", "]"}], "]"}], "**", 
        RowBox[{"Tp", "[", "A", "]"}]}]}], ")"}]}], "\[Equal]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Pinv", "[", "B", "]"}], "**", "B"}]}], ")"}], "**", 
     RowBox[{"Pinv", "[", 
      RowBox[{
       RowBox[{"A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Pinv", "[", "B", "]"}], "**", "B"}]}], "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"Tp", "[", 
     RowBox[{"Pinv", "[", 
      RowBox[{
       RowBox[{"A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Pinv", "[", "B", "]"}], "**", "B"}]}], "]"}], "]"}], 
    "\[Equal]", 
    RowBox[{"Pinv", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Tp", "[", "B", "]"}], "**", 
       RowBox[{"Tp", "[", 
        RowBox[{"Pinv", "[", "B", "]"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"Tp", "[", 
        RowBox[{"Pinv", "[", "A", "]"}], "]"}], "**", 
       RowBox[{"Tp", "[", "A", "]"}]}]}], "]"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Pinv", "[", "B", "]"}], "**", "B", "**", "A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}]}], ")"}], "**", 
     RowBox[{"Pinv", "[", 
      RowBox[{
       RowBox[{"A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Pinv", "[", "B", "]"}], "**", "B", "**", "A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}]}], "]"}], "**", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Pinv", "[", "B", "]"}], "**", "B", "**", "A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}]}], ")"}]}], "\[Equal]", 
    RowBox[{
     RowBox[{"A", "**", 
      RowBox[{"Pinv", "[", "A", "]"}]}], "-", 
     RowBox[{
      RowBox[{"Pinv", "[", "B", "]"}], "**", "B", "**", "A", "**", 
      RowBox[{"Pinv", "[", "A", "]"}]}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Pinv", "[", 
      RowBox[{
       RowBox[{"A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Pinv", "[", "B", "]"}], "**", "B", "**", "A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}]}], "]"}], "**", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Pinv", "[", "B", "]"}], "**", "B", "**", "A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}]}], ")"}], "**", 
     RowBox[{"Pinv", "[", 
      RowBox[{
       RowBox[{"A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Pinv", "[", "B", "]"}], "**", "B", "**", "A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}]}], "]"}]}], "\[Equal]", 
    RowBox[{"Pinv", "[", 
     RowBox[{
      RowBox[{"A", "**", 
       RowBox[{"Pinv", "[", "A", "]"}]}], "-", 
      RowBox[{
       RowBox[{"Pinv", "[", "B", "]"}], "**", "B", "**", "A", "**", 
       RowBox[{"Pinv", "[", "A", "]"}]}]}], "]"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Tp", "[", 
         RowBox[{"Pinv", "[", "A", "]"}], "]"}], "**", 
        RowBox[{"Tp", "[", "A", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Tp", "[", 
         RowBox[{"Pinv", "[", "A", "]"}], "]"}], "**", 
        RowBox[{"Tp", "[", "A", "]"}], "**", 
        RowBox[{"Tp", "[", "B", "]"}], "**", 
        RowBox[{"Tp", "[", 
         RowBox[{"Pinv", "[", "B", "]"}], "]"}]}]}], ")"}], "**", 
     RowBox[{"Tp", "[", 
      RowBox[{"Pinv", "[", 
       RowBox[{
        RowBox[{"A", "**", 
         RowBox[{"Pinv", "[", "A", "]"}]}], "-", 
        RowBox[{
         RowBox[{"Pinv", "[", "B", "]"}], "**", "B", "**", "A", "**", 
         RowBox[{"Pinv", "[", "A", "]"}]}]}], "]"}], "]"}]}], "\[Equal]", 
    RowBox[{
     RowBox[{"Pinv", "[", 
      RowBox[{
       RowBox[{"A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Pinv", "[", "B", "]"}], "**", "B", "**", "A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}]}], "]"}], "**", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Pinv", "[", "B", "]"}], "**", "B", "**", "A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Tp", "[", 
      RowBox[{"Pinv", "[", 
       RowBox[{
        RowBox[{"A", "**", 
         RowBox[{"Pinv", "[", "A", "]"}]}], "-", 
        RowBox[{
         RowBox[{"Pinv", "[", "B", "]"}], "**", "B", "**", "A", "**", 
         RowBox[{"Pinv", "[", "A", "]"}]}]}], "]"}], "]"}], "**", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Tp", "[", 
         RowBox[{"Pinv", "[", "A", "]"}], "]"}], "**", 
        RowBox[{"Tp", "[", "A", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Tp", "[", 
         RowBox[{"Pinv", "[", "A", "]"}], "]"}], "**", 
        RowBox[{"Tp", "[", "A", "]"}], "**", 
        RowBox[{"Tp", "[", "B", "]"}], "**", 
        RowBox[{"Tp", "[", 
         RowBox[{"Pinv", "[", "B", "]"}], "]"}]}]}], ")"}]}], "\[Equal]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Pinv", "[", "B", "]"}], "**", "B", "**", "A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}]}], ")"}], "**", 
     RowBox[{"Pinv", "[", 
      RowBox[{
       RowBox[{"A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Pinv", "[", "B", "]"}], "**", "B", "**", "A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}]}], "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"Tp", "[", 
     RowBox[{"Pinv", "[", 
      RowBox[{
       RowBox[{"A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Pinv", "[", "B", "]"}], "**", "B", "**", "A", "**", 
        RowBox[{"Pinv", "[", "A", "]"}]}]}], "]"}], "]"}], "\[Equal]", 
    RowBox[{"Pinv", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Tp", "[", 
        RowBox[{"Pinv", "[", "A", "]"}], "]"}], "**", 
       RowBox[{"Tp", "[", "A", "]"}]}], "-", 
      RowBox[{
       RowBox[{"Tp", "[", 
        RowBox[{"Pinv", "[", "A", "]"}], "]"}], "**", 
       RowBox[{"Tp", "[", "A", "]"}], "**", 
       RowBox[{"Tp", "[", "B", "]"}], "**", 
       RowBox[{"Tp", "[", 
        RowBox[{"Pinv", "[", "B", "]"}], "]"}]}]}], "]"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.455306164446568*^9, 3.455306247756299*^9, {3.455306284808585*^9, 
   3.455306322511756*^9}, 3.455306357202368*^9, {3.455306409968349*^9, 
   3.45530642601665*^9}, {3.455306456600539*^9, 3.4553064612251377`*^9}, 
   3.455306573396771*^9, 3.4553067261052303`*^9, 3.516627868548073*^9, 
   3.7057739189171352`*^9},ExpressionUUID->"114d69ef-464c-4be2-ab63-\
1aa50f87bbee"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"A", ",", "B", ",", 
   RowBox[{"Tp", "[", "A", "]"}], ",", 
   RowBox[{"Tp", "[", "B", "]"}], ",", 
   RowBox[{"Pinv", "[", "A", "]"}], ",", 
   RowBox[{"Pinv", "[", "B", "]"}], ",", 
   RowBox[{"Pinv", "[", 
    RowBox[{"Tp", "[", "A", "]"}], "]"}], ",", 
   RowBox[{"Pinv", "[", 
    RowBox[{"Tp", "[", "B", "]"}], "]"}], ",", 
   RowBox[{"Tp", "[", 
    RowBox[{"Pinv", "[", "A", "]"}], "]"}], ",", 
   RowBox[{"Tp", "[", 
    RowBox[{"Pinv", "[", "B", "]"}], "]"}], ",", 
   RowBox[{"Pinv", "[", 
    RowBox[{
     RowBox[{"A", "**", 
      RowBox[{"Pinv", "[", "A", "]"}]}], "+", 
     RowBox[{
      RowBox[{"Pinv", "[", "B", "]"}], "**", "B"}]}], "]"}], ",", 
   RowBox[{"Pinv", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Tp", "[", "B", "]"}], "**", 
      RowBox[{"Tp", "[", 
       RowBox[{"Pinv", "[", "B", "]"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"Tp", "[", 
       RowBox[{"Pinv", "[", "A", "]"}], "]"}], "**", 
      RowBox[{"Tp", "[", "A", "]"}]}]}], "]"}], ",", 
   RowBox[{"Tp", "[", 
    RowBox[{"Pinv", "[", 
     RowBox[{
      RowBox[{"A", "**", 
       RowBox[{"Pinv", "[", "A", "]"}]}], "+", 
      RowBox[{
       RowBox[{"Pinv", "[", "B", "]"}], "**", "B"}]}], "]"}], "]"}], ",", 
   RowBox[{"Pinv", "[", 
    RowBox[{
     RowBox[{"A", "**", 
      RowBox[{"Pinv", "[", "A", "]"}]}], "-", 
     RowBox[{
      RowBox[{"Pinv", "[", "B", "]"}], "**", "B", "**", "A", "**", 
      RowBox[{"Pinv", "[", "A", "]"}]}]}], "]"}], ",", 
   RowBox[{"Pinv", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Tp", "[", 
       RowBox[{"Pinv", "[", "A", "]"}], "]"}], "**", 
      RowBox[{"Tp", "[", "A", "]"}]}], "-", 
     RowBox[{
      RowBox[{"Tp", "[", 
       RowBox[{"Pinv", "[", "A", "]"}], "]"}], "**", 
      RowBox[{"Tp", "[", "A", "]"}], "**", 
      RowBox[{"Tp", "[", "B", "]"}], "**", 
      RowBox[{"Tp", "[", 
       RowBox[{"Pinv", "[", "B", "]"}], "]"}]}]}], "]"}], ",", 
   RowBox[{"Tp", "[", 
    RowBox[{"Pinv", "[", 
     RowBox[{
      RowBox[{"A", "**", 
       RowBox[{"Pinv", "[", "A", "]"}]}], "-", 
      RowBox[{
       RowBox[{"Pinv", "[", "B", "]"}], "**", "B", "**", "A", "**", 
       RowBox[{"Pinv", "[", "A", "]"}]}]}], "]"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.455306164446568*^9, 3.455306247756299*^9, {3.455306284808585*^9, 
   3.455306322511756*^9}, 3.455306357202368*^9, {3.455306409968349*^9, 
   3.45530642601665*^9}, {3.455306456600539*^9, 3.4553064612251377`*^9}, 
   3.455306573396771*^9, 3.4553067261052303`*^9, 3.516627868548073*^9, 
   3.705773918923904*^9},ExpressionUUID->"649d8e78-551f-4572-a38e-\
3e858c035ca7"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"PrintMonomialOrder", "[", "]"}]], "Input",ExpressionUUID->"85297e54-a893-4f96-bbca-e90353327e31"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NCProcess", "[", " ", 
   RowBox[{
   "relations", ",", "5", ",", " ", "0", ",", " ", "0", ",", " ", "0", ",", 
    " ", "\"\<BothTogether\>\"", ",", " ", 
    RowBox[{"SBByCat", " ", "\[Rule]", "False"}], ",", " ", 
    RowBox[{"RR", "\[Rule]", " ", "False"}], ",", " ", 
    RowBox[{"NCCV", " ", "\[Rule]", " ", "False"}], ",", 
    RowBox[{"PrintScreenOutput", "\[Rule]", "True"}]}], " ", "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.4553060556059237`*^9},ExpressionUUID->"fa5efcc1-e9f2-4af3-b787-\
dc43a7d428b3"],

Cell[CellGroupData[{

Cell[BoxData["\<\"\\nStep 0: Set user selects\"\>"], "Print",
 CellChangeTimes->{
  3.70577391905729*^9},ExpressionUUID->"6a25c552-3ac7-4e55-89b6-8b501b10d1af"],

Cell[BoxData["\<\"Step 1: Do NCMakeGB on digested relations only\"\>"], \
"Print",
 CellChangeTimes->{
  3.7057739190797167`*^9},ExpressionUUID->"28925e5a-d7e0-4897-970c-\
4772b8adbf2b"],

Cell[BoxData["\<\"Step 3: NCMakeGB on everything\"\>"], "Print",
 CellChangeTimes->{
  3.7057739190813227`*^9},ExpressionUUID->"e85fcece-3fc2-495e-93f1-\
44377d2275d2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"NCMakeGB", "[", " ", 
  RowBox[{"relations", ",", "3"}], " ", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"FinishedComputingBasisQ", "[", "]"}], " ", "\[Equal]", " ", 
     "1"}], ",", " ", 
    RowBox[{"Print", "[", " ", "\"\<Finite Basis.\>\"", " ", "]"}], ",", " ", 
    
    RowBox[{"Print", "[", " ", "\"\<NOT Finite Basis.\>\"", " ", "]"}]}], " ",
    "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.454960708972801*^9, 3.454960729734789*^9}, {
  3.455306045850088*^9, 3.455306059710319*^9}, {3.4553066993260612`*^9, 
  3.455306700019136*^9}, {3.455306745131281*^9, 3.455306768163196*^9}, {
  3.455306841260737*^9, 
  3.455306841761969*^9}},ExpressionUUID->"6fe459d6-1e4c-43d1-92d1-\
d5ba336dcc76"],

Cell[BoxData[
 RowBox[{
  RowBox[{"LinkObject", "::", "\<\"linkd\"\>"}], ":", 
  " ", "\<\"Unable to communicate with closed link \
\\!\\(LinkObject[\\(\\(\\\"/Users/mauricio/work/projects/NC2009/NC2009/NCGB/\
Binary/p9c/MacOSX-x86/p9c\\\", 5, 5\\)\\)]\\). \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/LinkObject/linkd\\\", ButtonNote -> \
\\\"LinkObject::linkd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.455306906485244*^9},ExpressionUUID->"032b931c-a658-498e-ab66-\
35629d3ec64c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"NCMakeGB", "::", "\<\"failedCall\"\>"}], ":", 
  " ", "\<\"Call to '\\!\\(MoraRun\\)' failed.\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.455306906768525*^9},ExpressionUUID->"c5df5b32-1892-4545-a35b-\
8570e7e16ad1"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.455306746234415*^9, 3.455306776939686*^9, 
  3.455306906770143*^9},ExpressionUUID->"a7411b34-ba69-4628-afed-\
e0bd7d192bad"],

Cell[BoxData[
 RowBox[{
  RowBox[{"LinkObject", "::", "\<\"linkn\"\>"}], ":", 
  " ", "\<\"Argument \
\\!\\(LinkObject[\\(\\(\\\"/Users/mauricio/work/projects/NC2009/NC2009/NCGB/\
Binary/p9c/MacOSX-x86/p9c\\\", 5, 5\\)\\)]\\) in \
\\!\\(LinkWrite[\\(\\(\\(\\(LinkObject[\\(\\(\\\"/Users/mauricio/work/\
projects/NC2009/NC2009/NCGB/Binary/p9c/MacOSX-x86/p9c\\\", 5, 5\\)\\)]\\)\\), \
\\(\\(\\(\\(\[LeftSkeleton] 10 \[RightSkeleton]\\)\\)[\\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\)]\\)\\)\\)\\)]\\) has an invalid LinkObject number; the \
link may be closed. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/LinkObject/linkn\\\", ButtonNote -> \
\\\"LinkObject::linkn\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.45530690682528*^9},ExpressionUUID->"4e496c78-4e4f-4271-887c-e243303ad7b6"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1024, 1388},
WindowMargins->{{190, Automatic}, {0, Automatic}},
DockedCells->(FrontEndExecute[{
   FrontEnd`NotebookApply[
    FrontEnd`InputNotebook[], #, Placeholder]}]& ),
PrintingPageRange->{Automatic, Automatic},
PrintingOptions->{"Magnification"->1,
"PaperOrientation"->"Portrait",
"PaperSize"->{612, 792},
"PostScriptOutputFile":>FrontEnd`FileName[{$RootDirectory, "home", "ashaheen",
    "PinvAB", "RunsForPaper"}, "RunsForPaper.nb.ps", CharacterEncoding -> 
  "ISO8859-1"]},
ShowSelection->True,
Magnification->1.25,
FrontEndVersion->"11.1 for Linux x86 (64-bit) (April 18, 2017)",
StyleDefinitions->FrontEnd`FileName[{"Creative"}, "NaturalColor.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 158, 3, 88, "Title", "ExpressionUUID" -> \
"22c9d161-7af8-44e2-874f-827b8153055e"],
Cell[CellGroupData[{
Cell[750, 29, 157, 3, 49, "Subsection", "ExpressionUUID" -> \
"155e7bbb-257a-4c67-85bc-be9e03774c32"],
Cell[CellGroupData[{
Cell[932, 36, 262, 6, 83, "Input", "ExpressionUUID" -> \
"a7d3bda0-92f0-4708-bebb-eeefee792dcd"],
Cell[CellGroupData[{
Cell[1219, 46, 578, 10, 29, "Print", "ExpressionUUID" -> \
"89326a01-527f-4b72-bf73-f0f823d5b3b4"],
Cell[1800, 58, 671, 13, 29, "Print", "ExpressionUUID" -> \
"d738e216-0b2a-4890-a716-e694807ff9fc"],
Cell[2474, 73, 579, 10, 29, "Print", "ExpressionUUID" -> \
"11370bbb-e741-4953-a953-fcdeb1b6873e"],
Cell[3056, 85, 1713, 57, 969, "Print", "ExpressionUUID" -> \
"45008af7-8e59-4e92-953e-44c2d70e44f0"],
Cell[4772, 144, 12838, 273, 75, "Print", "ExpressionUUID" -> \
"38922aaf-9c11-49c1-9975-8b195185ae05"],
Cell[17613, 419, 744, 14, 29, "Print", "ExpressionUUID" -> \
"574d05d2-313a-4de8-b467-3fdee8e5db3d"]
}, Open  ]]
}, Open  ]],
Cell[18384, 437, 311, 7, 54, "Input", "ExpressionUUID" -> \
"a2cf79f5-d816-4589-9d75-a717ec832cf1"],
Cell[CellGroupData[{
Cell[18720, 448, 877, 26, 111, "Input", "ExpressionUUID" -> \
"9c56870a-eece-45af-8df8-69defcfc62a6"],
Cell[19600, 476, 849, 23, 54, "Output", "ExpressionUUID" -> \
"c3794fb2-db26-4987-9c84-2f78be8d6a4c"]
}, Open  ]],
Cell[20464, 502, 604, 15, 83, "Input", "ExpressionUUID" -> \
"a6c51fba-4160-4fed-8ac2-9c735abc8d1d"],
Cell[CellGroupData[{
Cell[21093, 521, 302, 7, 54, "Input", "ExpressionUUID" -> \
"ea64aa98-e3e1-4e3e-af7a-ed6530107397"],
Cell[CellGroupData[{
Cell[21420, 532, 769, 21, 31, "Print", "ExpressionUUID" -> \
"dbb43ea9-a883-470e-883c-faaf7f0adf63"],
Cell[22192, 555, 781, 22, 31, "Print", "ExpressionUUID" -> \
"36f03705-21ef-4b4c-b9a5-5f22f4e45096"],
Cell[22976, 579, 632, 15, 78, "Print", "ExpressionUUID" -> \
"e40113fa-3927-4711-ba7e-3e040be48c14"],
Cell[23611, 596, 590, 14, 29, "Print", "ExpressionUUID" -> \
"12ef3798-1dfb-4c13-8d6c-bc644c5ac563"],
Cell[24204, 612, 520, 12, 29, "Print", "ExpressionUUID" -> \
"febbe896-2ba7-4288-90cc-f9fe2239d30a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[24773, 630, 564, 15, 111, "Input", "ExpressionUUID" -> \
"733bc2a4-2ad8-45fe-a372-bf921ffa25c8"],
Cell[25340, 647, 1437, 38, 127, "Output", "ExpressionUUID" -> \
"98fa0040-709e-4b08-b04d-4788b4e2e62d"],
Cell[26780, 687, 367, 6, 29, "Print", "ExpressionUUID" -> \
"0cdb86f9-210b-4ca6-a0d0-aca3e1bf6349"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[27196, 699, 163, 3, 99, "Section", "ExpressionUUID" -> \
"13b812e1-fee4-4af8-b4b6-4231d62b94ab"],
Cell[CellGroupData[{
Cell[27384, 706, 399, 10, 54, "Input", "ExpressionUUID" -> \
"38a9e204-c2a9-4fe3-8dc8-a28460802f0b"],
Cell[27786, 718, 474, 11, 29, "Message", "ExpressionUUID" -> \
"4baf77c8-e6a2-44ef-a9e7-6094ef3b11b6"],
Cell[28263, 731, 476, 11, 29, "Message", "ExpressionUUID" -> \
"a99ca170-c499-4397-9008-eb6dbdd0eac2"],
Cell[28742, 744, 506, 11, 29, "Message", "ExpressionUUID" -> \
"19b4e418-50a8-4986-b6ac-f78db9c288f3"],
Cell[29251, 757, 411, 8, 27, "Message", "ExpressionUUID" -> \
"ef4dbe2d-db40-4870-a044-747375f788fa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29699, 770, 1165, 29, 167, "Input", "ExpressionUUID" -> \
"7e7abcdf-5965-4dd9-bb11-620081ac2b72"],
Cell[30867, 801, 312, 9, 27, "Message", "ExpressionUUID" -> \
"c636f43c-5fc3-435b-adec-2d21c0b137fa"],
Cell[31182, 812, 350, 9, 27, "Message", "ExpressionUUID" -> \
"2fdd88c0-73d9-44a3-bade-6edc0ac721cf"],
Cell[31535, 823, 631, 13, 51, "Message", "ExpressionUUID" -> \
"017669e5-915a-40ed-a031-aa0f8dea8615"],
Cell[32169, 838, 1265, 35, 133, "Output", "ExpressionUUID" -> \
"58a8df51-2b03-4765-8c0f-75748b7f30c8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33471, 878, 493, 12, 83, "Input", "ExpressionUUID" -> \
"a591ec79-c928-4c16-aa2a-1c8e7da05bd2"],
Cell[CellGroupData[{
Cell[33989, 894, 689, 19, 31, "Print", "ExpressionUUID" -> \
"66260b2d-8fd9-43d5-988a-cad5e8a16547"],
Cell[34681, 915, 703, 20, 31, "Print", "ExpressionUUID" -> \
"d39a9e6e-8d0c-4b4d-b8cb-b0964233c09b"],
Cell[35387, 937, 554, 13, 78, "Print", "ExpressionUUID" -> \
"7e768ff4-5bfb-4277-8c75-0ad601dc062d"],
Cell[35944, 952, 514, 12, 29, "Print", "ExpressionUUID" -> \
"8f79defe-0ba6-4a46-b939-7b0b04908361"],
Cell[36461, 966, 443, 10, 29, "Print", "ExpressionUUID" -> \
"c88b164f-a350-468e-adfb-a17fe63f6508"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[36953, 982, 633, 17, 111, "Input", "ExpressionUUID" -> \
"042162fb-7da2-4e65-890f-9573587315c1"],
Cell[37589, 1001, 4682, 127, 272, "Output", "ExpressionUUID" -> \
"da50d905-ee25-428b-b8e5-b7ad63002d2c"],
Cell[42274, 1130, 372, 6, 29, "Print", "ExpressionUUID" -> \
"4067fe2e-be2b-46d7-b82d-68a09761df5e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[42695, 1142, 167, 3, 99, "Section", "ExpressionUUID" -> \
"5f8134ff-b4f2-4b81-bf22-42a4bd271b6d"],
Cell[42865, 1147, 1573, 42, 223, "Input", "ExpressionUUID" -> \
"ced7d4f4-1122-4a71-82f7-c6bcd91d6295"],
Cell[CellGroupData[{
Cell[44463, 1193, 524, 12, 83, "Input", "ExpressionUUID" -> \
"0675dc7f-0e0e-4bde-b28b-20dfc7fea4af"],
Cell[CellGroupData[{
Cell[45012, 1209, 706, 19, 31, "Print", "ExpressionUUID" -> \
"b8e5cfc4-ad0a-42bd-b9f8-52de55a42ddf"],
Cell[45721, 1230, 718, 20, 31, "Print", "ExpressionUUID" -> \
"a7b26006-fd82-495c-b1bb-9d5901151302"],
Cell[46442, 1252, 564, 13, 54, "Print", "ExpressionUUID" -> \
"d70e1393-9e4f-4034-a57d-5a66863286de"],
Cell[47009, 1267, 526, 13, 29, "Print", "ExpressionUUID" -> \
"c7ff5df2-ac1d-430b-87e7-9b22750eb0c6"],
Cell[47538, 1282, 445, 10, 29, "Print", "ExpressionUUID" -> \
"8820b99f-81e8-485c-8994-c250728b0999"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[48032, 1298, 564, 15, 111, "Input", "ExpressionUUID" -> \
"0d8f9d19-009f-42e1-9f60-590d56f31989"],
Cell[48599, 1315, 56418, 1406, 1072, "Output", "ExpressionUUID" -> \
"1f4301a3-e293-4f69-a124-e831a8e54a46"],
Cell[105020, 2723, 215, 3, 29, "Print", "ExpressionUUID" -> \
"b8157f9e-b294-40d5-b89a-7c31cb3d86ce"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[105284, 2732, 167, 3, 99, "Section", "ExpressionUUID" -> \
"46b6d365-4ebf-4bc8-964f-c2ed6b8e3855"],
Cell[105454, 2737, 1663, 45, 223, "Input", "ExpressionUUID" -> \
"e44058a7-9b21-4877-8cb9-a5784d9d6ea5"],
Cell[CellGroupData[{
Cell[107142, 2786, 1327, 30, 195, "Input", "ExpressionUUID" -> \
"04d12a5b-2636-4f39-bdc0-536f73c4638a"],
Cell[CellGroupData[{
Cell[108494, 2820, 713, 19, 31, "Print", "ExpressionUUID" -> \
"03879199-db53-4f92-a113-691f69fc8e74"],
Cell[109210, 2841, 727, 20, 31, "Print", "ExpressionUUID" -> \
"f1d8448d-f2c6-4f0f-af31-99a5ca2a0c03"],
Cell[109940, 2863, 570, 13, 54, "Print", "ExpressionUUID" -> \
"ab0ac2f1-1ad9-495f-b186-9f9a2410e27c"],
Cell[110513, 2878, 530, 13, 29, "Print", "ExpressionUUID" -> \
"e6058400-4c64-4266-a3b7-8b794d13176b"],
Cell[111046, 2893, 443, 10, 29, "Print", "ExpressionUUID" -> \
"9b115e6c-425e-4180-ae6d-f0b591012c4a"],
Cell[111492, 2905, 713, 19, 31, "Print", "ExpressionUUID" -> \
"3db4563b-e835-4ee5-90fb-9e1f9ce3b271"],
Cell[112208, 2926, 727, 20, 31, "Print", "ExpressionUUID" -> \
"3ca2e5cb-d89e-4fa9-8dd6-f882498f8b80"],
Cell[112938, 2948, 572, 13, 54, "Print", "ExpressionUUID" -> \
"4a2f291d-73ea-4c00-982b-9e07fd4dd1e5"],
Cell[113513, 2963, 532, 13, 29, "Print", "ExpressionUUID" -> \
"51b951f9-72ea-47b3-a0f9-7e36fb1e7073"],
Cell[114048, 2978, 445, 10, 29, "Print", "ExpressionUUID" -> \
"6201cd4b-e539-4b5f-a80a-a4fdff0b554e"],
Cell[114496, 2990, 713, 19, 31, "Print", "ExpressionUUID" -> \
"84e07c09-1a20-4673-9b12-74910234f5af"],
Cell[115212, 3011, 727, 20, 31, "Print", "ExpressionUUID" -> \
"07ad8b1a-227f-4e2f-a347-16911c67831d"],
Cell[115942, 3033, 572, 13, 54, "Print", "ExpressionUUID" -> \
"d7c89a9f-8ab3-45fa-a071-28617bbfcb32"],
Cell[116517, 3048, 530, 13, 29, "Print", "ExpressionUUID" -> \
"6144176c-446f-4f4b-af54-3cc6f628038c"],
Cell[117050, 3063, 443, 10, 29, "Print", "ExpressionUUID" -> \
"1156f88d-9e7c-47c1-aa6d-73ff8826a898"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[117542, 3079, 608, 17, 111, "Input", "ExpressionUUID" -> \
"ed9fb9ac-be27-43e0-a977-04c3fe4dbe34"],
Cell[118153, 3098, 143810, 3734, 2932, "Output", "ExpressionUUID" -> \
"67242856-b595-417b-b964-388fea194f60"],
Cell[261966, 6834, 196, 2, 29, "Print", "ExpressionUUID" -> \
"85303ca1-cdc2-4951-bde7-5a597e9ae6ce"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[262211, 6842, 188, 3, 99, "Section", "ExpressionUUID" -> \
"3f05a6b2-c5a3-48fc-8eb7-a9021b19a327"],
Cell[262402, 6847, 2104, 59, 251, "Input", "ExpressionUUID" -> \
"4f5c7418-3230-4b27-a36b-5ca096df066f"],
Cell[CellGroupData[{
Cell[264531, 6910, 504, 12, 83, "Input", "ExpressionUUID" -> \
"e37e3da8-c639-4ad0-8f9a-7186c7673594"],
Cell[CellGroupData[{
Cell[265060, 6926, 722, 19, 31, "Print", "ExpressionUUID" -> \
"2709a214-cb99-48d6-9f8e-b64171b03d8c"],
Cell[265785, 6947, 736, 20, 31, "Print", "ExpressionUUID" -> \
"aad3d9d3-8a73-4cba-815f-3c9b5088a177"],
Cell[266524, 6969, 574, 13, 54, "Print", "ExpressionUUID" -> \
"c801cb40-b877-44d2-9029-f57f849cfac6"],
Cell[267101, 6984, 533, 12, 54, "Print", "ExpressionUUID" -> \
"92344c89-cddd-4bb5-b9a1-b3636a89acbe"],
Cell[267637, 6998, 443, 10, 29, "Print", "ExpressionUUID" -> \
"0c9d53e5-d791-4d5f-9a59-6c58a1f54814"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[268129, 7014, 615, 16, 111, "Input", "ExpressionUUID" -> \
"89cbe4fd-0bda-4aad-82d2-9bac7fe4d844"],
Cell[268747, 7032, 171, 3, 29, "Print", "ExpressionUUID" -> \
"360c52b4-9887-4873-a640-4c970f2da72a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[268955, 7040, 3762, 96, 587, "Input", "ExpressionUUID" -> \
"1daeb3d1-b472-42c4-b575-5a0be6e6eb76"],
Cell[CellGroupData[{
Cell[272742, 7140, 841, 21, 31, "Print", "ExpressionUUID" -> \
"df3dd1c9-6573-430c-9e47-dc4322332e97"],
Cell[273586, 7163, 857, 22, 31, "Print", "ExpressionUUID" -> \
"6d8c772d-4721-4871-8bb8-46f96019d037"],
Cell[274446, 7187, 688, 15, 54, "Print", "ExpressionUUID" -> \
"986dc535-e14f-4f6a-9263-a8b75838c49d"],
Cell[275137, 7204, 648, 15, 54, "Print", "ExpressionUUID" -> \
"8acd7bcf-0f88-4b2a-b8ee-ab309d2df609"],
Cell[275788, 7221, 541, 12, 29, "Print", "ExpressionUUID" -> \
"cc5e4306-ec54-4314-8752-bd6346284adf"],
Cell[276332, 7235, 291, 5, 29, "Print", "ExpressionUUID" -> \
"16ca951c-34cf-4647-a431-704158ad9c57"]
}, Open  ]]
}, Open  ]],
Cell[276650, 7244, 643, 18, 83, "Input", "ExpressionUUID" -> \
"97a00ef0-6787-4044-9154-682b56e7a8e7"],
Cell[CellGroupData[{
Cell[277318, 7266, 399, 10, 54, "Input", "ExpressionUUID" -> \
"277335a9-3953-428a-929d-e8bc1651b289"],
Cell[277720, 7278, 474, 11, 29, "Message", "ExpressionUUID" -> \
"e2c69a54-c8f0-4fb6-9d74-ad56b2693901"],
Cell[278197, 7291, 474, 11, 29, "Message", "ExpressionUUID" -> \
"29bab184-9ac0-431b-a8f1-401c75c32939"],
Cell[278674, 7304, 507, 11, 29, "Message", "ExpressionUUID" -> \
"825a4788-247d-45f5-a44d-a1e661e882f2"],
Cell[279184, 7317, 415, 9, 27, "Message", "ExpressionUUID" -> \
"d6158753-0437-464c-8130-b968ebcc078d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[279636, 7331, 3511, 93, 363, "Input", "ExpressionUUID" -> \
"cfd10894-a7c6-481e-ac1f-4266ff33d43d"],
Cell[283150, 7426, 12106, 356, 1007, "Output", "ExpressionUUID" -> \
"114d69ef-464c-4be2-ab63-1aa50f87bbee"],
Cell[295259, 7784, 2645, 72, 223, "Output", "ExpressionUUID" -> \
"649d8e78-551f-4572-a38e-3e858c035ca7"]
}, Open  ]],
Cell[297919, 7859, 121, 1, 54, "Input", "ExpressionUUID" -> \
"85297e54-a893-4f96-bbca-e90353327e31"],
Cell[CellGroupData[{
Cell[298065, 7864, 557, 13, 83, "Input", "ExpressionUUID" -> \
"fa5efcc1-e9f2-4af3-b787-dc43a7d428b3"],
Cell[CellGroupData[{
Cell[298647, 7881, 160, 2, 54, "Print", "ExpressionUUID" -> \
"6a25c552-3ac7-4e55-89b6-8b501b10d1af"],
Cell[298810, 7885, 186, 4, 29, "Print", "ExpressionUUID" -> \
"28925e5a-d7e0-4897-970c-4772b8adbf2b"],
Cell[298999, 7891, 168, 3, 29, "Print", "ExpressionUUID" -> \
"e85fcece-3fc2-495e-93f1-44377d2275d2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[299216, 7900, 790, 18, 111, "Input", "ExpressionUUID" -> \
"6fe459d6-1e4c-43d1-92d1-d5ba336dcc76"],
Cell[300009, 7920, 583, 11, 52, "Message", "ExpressionUUID" -> \
"032b931c-a658-498e-ab66-35629d3ec64c"],
Cell[300595, 7933, 257, 6, 27, "Message", "ExpressionUUID" -> \
"c5df5b32-1892-4545-a35b-8570e7e16ad1"],
Cell[300855, 7941, 181, 3, 54, "Output", "ExpressionUUID" -> \
"a7411b34-ba69-4628-afed-e0bd7d192bad"],
Cell[301039, 7946, 886, 15, 121, "Message", "ExpressionUUID" -> \
"4e496c78-4e4f-4271-887c-e243303ad7b6"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

